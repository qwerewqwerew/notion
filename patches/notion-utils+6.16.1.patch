diff --git a/node_modules/notion-utils/fixtures/nba/1a425309-21c0-4ca1-8548-c5915137b566.json b/node_modules/notion-utils/fixtures/nba/1a425309-21c0-4ca1-8548-c5915137b566.json
new file mode 100644
index 0000000..eb3cfa3
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/1a425309-21c0-4ca1-8548-c5915137b566.json
@@ -0,0 +1,452 @@
+{
+  "id": "1a425309-21c0-4ca1-8548-c5915137b566",
+  "version": 174,
+  "name": [
+    [
+      "2020 NBA Players"
+    ]
+  ],
+  "schema": {
+    "\"G]_": {
+      "name": "Draft",
+      "type": "text"
+    },
+    "([kx": {
+      "name": "Nationality",
+      "type": "text"
+    },
+    "-@$\\": {
+      "name": "Height",
+      "type": "text",
+      "options": [
+        {
+          "id": "<8JB",
+          "color": "default",
+          "value": "6' 11\""
+        },
+        {
+          "id": "iV93",
+          "color": "purple",
+          "value": "6' 10\""
+        },
+        {
+          "id": "x)?v",
+          "color": "default",
+          "value": "6' 7\""
+        },
+        {
+          "id": ";G[_",
+          "color": "green",
+          "value": "6' 5\""
+        },
+        {
+          "id": "L><@",
+          "color": "yellow",
+          "value": "6' 1\""
+        },
+        {
+          "id": "}yVJ",
+          "color": "orange",
+          "value": "6' 8\""
+        },
+        {
+          "id": "KjKY",
+          "color": "green",
+          "value": "6' 4\""
+        },
+        {
+          "id": "(/=[",
+          "color": "pink",
+          "value": "6' 6\""
+        },
+        {
+          "id": "nOii",
+          "color": "default",
+          "value": "6' 9\""
+        },
+        {
+          "id": "Bgws",
+          "color": "purple",
+          "value": "6' 0\""
+        },
+        {
+          "id": "2t)V",
+          "color": "yellow",
+          "value": "7' 0\""
+        },
+        {
+          "id": "Jm69",
+          "color": "brown",
+          "value": "6' 3\""
+        },
+        {
+          "id": "}|`Y",
+          "color": "green",
+          "value": "5' 11\""
+        },
+        {
+          "id": "4t;7",
+          "color": "blue",
+          "value": "6' 2\""
+        },
+        {
+          "id": "1mfp",
+          "color": "purple",
+          "value": "5' 9\""
+        },
+        {
+          "id": "aVuk",
+          "color": "pink",
+          "value": "7' 4\""
+        },
+        {
+          "id": "tu[%",
+          "color": "green",
+          "value": "7' 1\""
+        },
+        {
+          "id": "Sq9R",
+          "color": "blue",
+          "value": "7' 2\""
+        },
+        {
+          "id": "oD-K",
+          "color": "brown",
+          "value": "7' 5\""
+        },
+        {
+          "id": "|tNZ",
+          "color": "blue",
+          "value": "5' 10\""
+        },
+        {
+          "id": "vDdE",
+          "color": "purple",
+          "value": "7' 3\""
+        }
+      ]
+    },
+    "9DS!": {
+      "name": "Photo",
+      "type": "file"
+    },
+    "=7m2": {
+      "name": "Last Name",
+      "type": "formula",
+      "formula": {
+        "args": [
+          {
+            "id": "title",
+            "name": "Name",
+            "type": "property",
+            "result_type": "text"
+          },
+          {
+            "type": "constant",
+            "value": ".+ ",
+            "value_type": "string",
+            "result_type": "text"
+          },
+          {
+            "type": "constant",
+            "value": "",
+            "value_type": "string",
+            "result_type": "text"
+          }
+        ],
+        "name": "replaceAll",
+        "type": "function",
+        "result_type": "text"
+      }
+    },
+    "IY\\1": {
+      "name": "Number | Position | Height",
+      "type": "formula",
+      "formula": {
+        "args": [
+          {
+            "args": [
+              {
+                "args": [
+                  {
+                    "args": [
+                      {
+                        "id": "gq#*",
+                        "name": "Number",
+                        "type": "property",
+                        "result_type": "text"
+                      },
+                      {
+                        "type": "constant",
+                        "value": " | ",
+                        "value_type": "string",
+                        "result_type": "text"
+                      }
+                    ],
+                    "name": "add",
+                    "type": "operator",
+                    "operator": "+",
+                    "result_type": "text"
+                  },
+                  {
+                    "id": "MYa3",
+                    "name": "Position",
+                    "type": "property",
+                    "result_type": "text"
+                  }
+                ],
+                "name": "add",
+                "type": "operator",
+                "operator": "+",
+                "result_type": "text"
+              },
+              {
+                "type": "constant",
+                "value": " | ",
+                "value_type": "string",
+                "result_type": "text"
+              }
+            ],
+            "name": "add",
+            "type": "operator",
+            "operator": "+",
+            "result_type": "text"
+          },
+          {
+            "id": "-@$\\",
+            "name": "Height",
+            "type": "property",
+            "result_type": "text"
+          }
+        ],
+        "name": "add",
+        "type": "operator",
+        "operator": "+",
+        "result_type": "text"
+      }
+    },
+    "LH{*": {
+      "name": "Labeled Draft",
+      "type": "formula",
+      "formula": {
+        "args": [
+          {
+            "args": [
+              {
+                "id": "\"G]_",
+                "name": "Draft",
+                "type": "property",
+                "result_type": "text"
+              },
+              {
+                "type": "constant",
+                "value": ":",
+                "value_type": "string",
+                "result_type": "text"
+              },
+              {
+                "type": "constant",
+                "value": " Draft:",
+                "value_type": "string",
+                "result_type": "text"
+              }
+            ],
+            "name": "replace",
+            "type": "function",
+            "result_type": "text"
+          },
+          {
+            "type": "constant",
+            "value": "Rnd",
+            "value_type": "string",
+            "result_type": "text"
+          },
+          {
+            "type": "constant",
+            "value": "Round",
+            "value_type": "string",
+            "result_type": "text"
+          }
+        ],
+        "name": "replace",
+        "type": "function",
+        "result_type": "text"
+      }
+    },
+    "MYa3": {
+      "name": "Position",
+      "type": "select",
+      "options": [
+        {
+          "id": "-*!z",
+          "color": "default",
+          "value": "Center"
+        },
+        {
+          "id": "i5^K",
+          "color": "default",
+          "value": "Center-Forward"
+        },
+        {
+          "id": "o;Os",
+          "color": "default",
+          "value": "Forward"
+        },
+        {
+          "id": "pV.U",
+          "color": "default",
+          "value": "Forward-Center"
+        },
+        {
+          "id": "o|jr",
+          "color": "default",
+          "value": "Forward-Guard"
+        },
+        {
+          "id": "=p8a",
+          "color": "default",
+          "value": "Guard"
+        },
+        {
+          "id": "_Fdr",
+          "color": "default",
+          "value": "Guard-Forward"
+        }
+      ]
+    },
+    "N!$K": {
+      "name": "Age",
+      "type": "number",
+      "number_format": "number"
+    },
+    "RyF.": {
+      "name": "Labeled School",
+      "type": "formula",
+      "formula": {
+        "args": [
+          {
+            "type": "constant",
+            "value": "School: ",
+            "value_type": "string",
+            "result_type": "text"
+          },
+          {
+            "id": "jhk5",
+            "name": "School",
+            "type": "property",
+            "result_type": "text"
+          }
+        ],
+        "name": "add",
+        "type": "operator",
+        "operator": "+",
+        "result_type": "text"
+      }
+    },
+    "ZHAU": {
+      "name": "Birthday",
+      "type": "date"
+    },
+    "gq#*": {
+      "name": "Number",
+      "type": "text"
+    },
+    "i?W1": {
+      "name": "Birthday | Age",
+      "type": "formula",
+      "formula": {
+        "args": [
+          {
+            "args": [
+              {
+                "args": [
+                  {
+                    "args": [
+                      {
+                        "type": "constant",
+                        "value": "Born: ",
+                        "value_type": "string",
+                        "result_type": "text"
+                      },
+                      {
+                        "args": [
+                          {
+                            "id": "ZHAU",
+                            "name": "Birthday",
+                            "type": "property",
+                            "result_type": "date"
+                          }
+                        ],
+                        "name": "format",
+                        "type": "function",
+                        "result_type": "text"
+                      }
+                    ],
+                    "name": "add",
+                    "type": "operator",
+                    "operator": "+",
+                    "result_type": "text"
+                  },
+                  {
+                    "type": "constant",
+                    "value": " | ",
+                    "value_type": "string",
+                    "result_type": "text"
+                  }
+                ],
+                "name": "add",
+                "type": "operator",
+                "operator": "+",
+                "result_type": "text"
+              },
+              {
+                "type": "constant",
+                "value": "Age: ",
+                "value_type": "string",
+                "result_type": "text"
+              }
+            ],
+            "name": "add",
+            "type": "operator",
+            "operator": "+",
+            "result_type": "text"
+          },
+          {
+            "args": [
+              {
+                "id": "N!$K",
+                "name": "Age",
+                "type": "property",
+                "result_type": "number"
+              }
+            ],
+            "name": "format",
+            "type": "function",
+            "result_type": "text"
+          }
+        ],
+        "name": "add",
+        "type": "operator",
+        "operator": "+",
+        "result_type": "text"
+      }
+    },
+    "jhk5": {
+      "name": "School",
+      "type": "text"
+    },
+    "p4nU": {
+      "name": "Team",
+      "type": "relation",
+      "property": "3-5L",
+      "collection_id": "e777a528-9404-4e96-9f26-0014be705592"
+    },
+    "title": {
+      "name": "Name",
+      "type": "title"
+    }
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Atlanta Hawks.json b/node_modules/notion-utils/fixtures/nba/Atlanta Hawks.json
new file mode 100644
index 0000000..b447b04
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Atlanta Hawks.json	
@@ -0,0 +1,125 @@
+{
+  "id": "693b4304-0bbd-4f9a-85f1-7c9cb1768110",
+  "version": 50,
+  "type": "gallery",
+  "name": "Atlanta Hawks",
+  "query": {
+    "sort": [
+      {
+        "id": "5e4717f1-aaa9-43b7-b47c-27870be21c81",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "841918aa-f2a3-4d4c-b5ad-64b0f57c47b8",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "5e4717f1-aaa9-43b7-b47c-27870be21c81",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "841918aa-f2a3-4d4c-b5ad-64b0f57c47b8"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Boston Celtics.json b/node_modules/notion-utils/fixtures/nba/Boston Celtics.json
new file mode 100644
index 0000000..393e777
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Boston Celtics.json	
@@ -0,0 +1,125 @@
+{
+  "id": "448a76b8-847d-4a40-a494-9a6da9c41a58",
+  "version": 6,
+  "type": "gallery",
+  "name": "Boston Celtics",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "e722d82d-e545-4dc5-9658-c66260f0d3f4",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "e722d82d-e545-4dc5-9658-c66260f0d3f4"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Brooklyn Nets.json b/node_modules/notion-utils/fixtures/nba/Brooklyn Nets.json
new file mode 100644
index 0000000..c248c8c
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Brooklyn Nets.json	
@@ -0,0 +1,125 @@
+{
+  "id": "9fdf39a1-64c3-464c-a4c9-f3e4d9a9aa2c",
+  "version": 4,
+  "type": "gallery",
+  "name": "Brooklyn Nets",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "282f1ce5-85cc-47c3-8145-31ebee469aa4",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "282f1ce5-85cc-47c3-8145-31ebee469aa4"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Charlotte Hornets.json b/node_modules/notion-utils/fixtures/nba/Charlotte Hornets.json
new file mode 100644
index 0000000..7faa01b
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Charlotte Hornets.json	
@@ -0,0 +1,125 @@
+{
+  "id": "c34ab79e-df2d-4a6d-af71-8aef61a65aa7",
+  "version": 4,
+  "type": "gallery",
+  "name": "Charlotte Hornets",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "dddd453b-579c-472a-9339-26dcfcaa1976",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "dddd453b-579c-472a-9339-26dcfcaa1976"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Chicago Bulls.json b/node_modules/notion-utils/fixtures/nba/Chicago Bulls.json
new file mode 100644
index 0000000..f1c3788
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Chicago Bulls.json	
@@ -0,0 +1,125 @@
+{
+  "id": "385ed123-6a39-46e5-984c-9704bcfd6494",
+  "version": 4,
+  "type": "gallery",
+  "name": "Chicago Bulls",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "3cbd18cd-cab2-4b10-9b0d-e67ff1e365e1",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "3cbd18cd-cab2-4b10-9b0d-e67ff1e365e1"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Cleveland Cavaliers.json b/node_modules/notion-utils/fixtures/nba/Cleveland Cavaliers.json
new file mode 100644
index 0000000..4159434
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Cleveland Cavaliers.json	
@@ -0,0 +1,125 @@
+{
+  "id": "5ae81e49-33ad-47bf-9c14-14adb9145b4d",
+  "version": 4,
+  "type": "gallery",
+  "name": "Cleveland Cavaliers",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "afeaba17-8f70-40c9-a648-4e0afc314948",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "afeaba17-8f70-40c9-a648-4e0afc314948"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Dallas Mavericks.json b/node_modules/notion-utils/fixtures/nba/Dallas Mavericks.json
new file mode 100644
index 0000000..3d73be7
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Dallas Mavericks.json	
@@ -0,0 +1,125 @@
+{
+  "id": "ab6c9a56-5322-4bd1-a384-7797a81478c5",
+  "version": 4,
+  "type": "gallery",
+  "name": "Dallas Mavericks",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "274924c4-c151-4e45-9ac4-fd3b8839a56c",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "274924c4-c151-4e45-9ac4-fd3b8839a56c"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Denver Nuggest.json b/node_modules/notion-utils/fixtures/nba/Denver Nuggest.json
new file mode 100644
index 0000000..99eaf86
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Denver Nuggest.json	
@@ -0,0 +1,125 @@
+{
+  "id": "048d8535-b957-488a-89f0-ade8d3c4c026",
+  "version": 4,
+  "type": "gallery",
+  "name": "Denver Nuggest",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "a5b2ed08-4322-4923-888f-c70193751759",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "a5b2ed08-4322-4923-888f-c70193751759"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Detroit Pistons.json b/node_modules/notion-utils/fixtures/nba/Detroit Pistons.json
new file mode 100644
index 0000000..00b5c4c
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Detroit Pistons.json	
@@ -0,0 +1,125 @@
+{
+  "id": "dac0d378-1774-47fc-a3a3-103ae120a3c1",
+  "version": 4,
+  "type": "gallery",
+  "name": "Detroit Pistons",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "73447b75-434c-4eee-a68d-f6cecb8a844c",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "73447b75-434c-4eee-a68d-f6cecb8a844c"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Duke University.json b/node_modules/notion-utils/fixtures/nba/Duke University.json
new file mode 100644
index 0000000..7d36962
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Duke University.json	
@@ -0,0 +1,125 @@
+{
+  "id": "1d79cc15-d040-43eb-9d65-7e35bafbcf74",
+  "version": 7,
+  "type": "gallery",
+  "name": "Duke University",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "text",
+        "value": "Duke",
+        "property": "jhk5",
+        "comparator": "string_is"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "Duke"
+            },
+            "operator": "string_is"
+          },
+          "property": "jhk5"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Golden State Warriors.json b/node_modules/notion-utils/fixtures/nba/Golden State Warriors.json
new file mode 100644
index 0000000..04ba933
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Golden State Warriors.json	
@@ -0,0 +1,125 @@
+{
+  "id": "e8feed24-4bf6-41b5-84a7-6134f9160cc1",
+  "version": 4,
+  "type": "gallery",
+  "name": "Golden State Warriors",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "7c579637-e84f-4ddf-ab72-78a0d414baf8",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "7c579637-e84f-4ddf-ab72-78a0d414baf8"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Houston Rockets.json b/node_modules/notion-utils/fixtures/nba/Houston Rockets.json
new file mode 100644
index 0000000..636ca7b
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Houston Rockets.json	
@@ -0,0 +1,125 @@
+{
+  "id": "52718a79-d339-4d26-873f-734004af8823",
+  "version": 4,
+  "type": "gallery",
+  "name": "Houston Rockets",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "e075359b-b750-46c4-86a1-1e76027e140f",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "e075359b-b750-46c4-86a1-1e76027e140f"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Indiana Pacers.json b/node_modules/notion-utils/fixtures/nba/Indiana Pacers.json
new file mode 100644
index 0000000..f35b589
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Indiana Pacers.json	
@@ -0,0 +1,125 @@
+{
+  "id": "63717bf3-3af6-4112-989d-acbe665ccf91",
+  "version": 4,
+  "type": "gallery",
+  "name": "Indiana Pacers",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "414ba2c7-d02a-4f5d-acc3-5512ff3f6b35",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "414ba2c7-d02a-4f5d-acc3-5512ff3f6b35"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/List.json b/node_modules/notion-utils/fixtures/nba/List.json
new file mode 100644
index 0000000..074f059
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/List.json
@@ -0,0 +1,48 @@
+{
+  "id": "c0d2d91c-e2a5-4ea5-a9b7-2b2d8ae2d591",
+  "version": 8,
+  "type": "list",
+  "name": "List",
+  "format": {
+    "list_properties": [
+      {
+        "visible": false,
+        "property": "$N1}"
+      },
+      {
+        "visible": false,
+        "property": "f+&p"
+      },
+      {
+        "visible": false,
+        "property": "3-5L"
+      }
+    ]
+  },
+  "parent_id": "b2b89bc2-7db9-487a-b834-9047b0e0f5c5",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "property": "title",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "Eastern Conference"
+            },
+            "operator": "enum_is"
+          },
+          "property": "$N1}"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Los Angeles Clippers.json b/node_modules/notion-utils/fixtures/nba/Los Angeles Clippers.json
new file mode 100644
index 0000000..4536ec5
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Los Angeles Clippers.json	
@@ -0,0 +1,125 @@
+{
+  "id": "b6c6b669-659e-4487-8d48-8a538b8a0d82",
+  "version": 4,
+  "type": "gallery",
+  "name": "Los Angeles Clippers",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "bfc372e8-125f-4392-91b2-004532d1d808",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "bfc372e8-125f-4392-91b2-004532d1d808"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Los Angeles Lakers.json b/node_modules/notion-utils/fixtures/nba/Los Angeles Lakers.json
new file mode 100644
index 0000000..1318a45
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Los Angeles Lakers.json	
@@ -0,0 +1,125 @@
+{
+  "id": "85e4d626-09cc-45f6-9a28-07d5d490ca1d",
+  "version": 4,
+  "type": "gallery",
+  "name": "Los Angeles Lakers",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "f6c7514f-b3bf-4a1b-99fd-8588eb0fdc13",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "f6c7514f-b3bf-4a1b-99fd-8588eb0fdc13"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Memphis Grizzlies.json b/node_modules/notion-utils/fixtures/nba/Memphis Grizzlies.json
new file mode 100644
index 0000000..e514257
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Memphis Grizzlies.json	
@@ -0,0 +1,125 @@
+{
+  "id": "367ecf41-f124-4652-bb7d-464b3789aefd",
+  "version": 4,
+  "type": "gallery",
+  "name": "Memphis Grizzlies",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "db15dad7-0fda-4900-9c68-d2a4a99e362a",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "db15dad7-0fda-4900-9c68-d2a4a99e362a"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Miami Heat.json b/node_modules/notion-utils/fixtures/nba/Miami Heat.json
new file mode 100644
index 0000000..f4ee4c9
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Miami Heat.json	
@@ -0,0 +1,125 @@
+{
+  "id": "d8f02741-e03a-4e40-91d7-0b821ee4014d",
+  "version": 4,
+  "type": "gallery",
+  "name": "Miami Heat",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "95c79219-0f51-43ad-895e-53f8eb08ee93",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "95c79219-0f51-43ad-895e-53f8eb08ee93"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Milwaukee Bucks.json b/node_modules/notion-utils/fixtures/nba/Milwaukee Bucks.json
new file mode 100644
index 0000000..feffd8c
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Milwaukee Bucks.json	
@@ -0,0 +1,125 @@
+{
+  "id": "c14e33fe-19d2-4266-a935-0ef6528a77ff",
+  "version": 4,
+  "type": "gallery",
+  "name": "Milwaukee Bucks",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "f2379c53-d112-42a8-a248-fabebaa98337",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "f2379c53-d112-42a8-a248-fabebaa98337"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Minnesota Timberwolves.json b/node_modules/notion-utils/fixtures/nba/Minnesota Timberwolves.json
new file mode 100644
index 0000000..f94edbf
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Minnesota Timberwolves.json	
@@ -0,0 +1,125 @@
+{
+  "id": "bdc489ac-13dd-46bd-97f9-86866d76bc43",
+  "version": 4,
+  "type": "gallery",
+  "name": "Minnesota Timberwolves",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "62b3eea9-3084-461d-bbc1-c727360218ad",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "62b3eea9-3084-461d-bbc1-c727360218ad"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/New Orleans Pelicans.json b/node_modules/notion-utils/fixtures/nba/New Orleans Pelicans.json
new file mode 100644
index 0000000..3bed67e
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/New Orleans Pelicans.json	
@@ -0,0 +1,125 @@
+{
+  "id": "7687ad1f-ccbe-4abb-8e95-a3685543aefe",
+  "version": 4,
+  "type": "gallery",
+  "name": "New Orleans Pelicans",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "20a58853-197a-4909-8fb7-900b76cba9c3",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "20a58853-197a-4909-8fb7-900b76cba9c3"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/New York Knicks.json b/node_modules/notion-utils/fixtures/nba/New York Knicks.json
new file mode 100644
index 0000000..1965e54
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/New York Knicks.json	
@@ -0,0 +1,125 @@
+{
+  "id": "5c20b593-23d4-4884-9102-3ef3b1049273",
+  "version": 4,
+  "type": "gallery",
+  "name": "New York Knicks",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "e650d5c6-66c0-44d4-80da-76da908ca284",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "e650d5c6-66c0-44d4-80da-76da908ca284"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Oklahoma City Thunder.json b/node_modules/notion-utils/fixtures/nba/Oklahoma City Thunder.json
new file mode 100644
index 0000000..39be701
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Oklahoma City Thunder.json	
@@ -0,0 +1,125 @@
+{
+  "id": "c69e1799-88cb-4135-a10d-1ec4617f0aa6",
+  "version": 4,
+  "type": "gallery",
+  "name": "Oklahoma City Thunder",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "71d3bf63-2eea-464f-aa6c-ccd52ba13856",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "71d3bf63-2eea-464f-aa6c-ccd52ba13856"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Orlando Magic.json b/node_modules/notion-utils/fixtures/nba/Orlando Magic.json
new file mode 100644
index 0000000..97fcb4c
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Orlando Magic.json	
@@ -0,0 +1,125 @@
+{
+  "id": "cfe27a86-00d0-4322-b2db-2bc3e69269e2",
+  "version": 5,
+  "type": "gallery",
+  "name": "Orlando Magic",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "2ed75575-6e95-4a55-9fcc-01853125be21",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "2ed75575-6e95-4a55-9fcc-01853125be21"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Philadelphia 76ers.json b/node_modules/notion-utils/fixtures/nba/Philadelphia 76ers.json
new file mode 100644
index 0000000..e25e868
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Philadelphia 76ers.json	
@@ -0,0 +1,125 @@
+{
+  "id": "5742eaed-3c36-495a-bde5-7d33cba0ddb5",
+  "version": 4,
+  "type": "gallery",
+  "name": "Philadelphia 76ers",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "001b1958-7c2d-4a11-8f9d-ce1c0fe476a9",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "001b1958-7c2d-4a11-8f9d-ce1c0fe476a9"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Phoenix Suns.json b/node_modules/notion-utils/fixtures/nba/Phoenix Suns.json
new file mode 100644
index 0000000..f590950
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Phoenix Suns.json	
@@ -0,0 +1,125 @@
+{
+  "id": "59a7246f-e923-4faf-9246-75851294365b",
+  "version": 4,
+  "type": "gallery",
+  "name": "Phoenix Suns",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "f2a7b5f6-7cf5-4c14-bf61-597f45870469",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "f2a7b5f6-7cf5-4c14-bf61-597f45870469"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Portland Trail Blazers.json b/node_modules/notion-utils/fixtures/nba/Portland Trail Blazers.json
new file mode 100644
index 0000000..042aaf0
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Portland Trail Blazers.json	
@@ -0,0 +1,125 @@
+{
+  "id": "e3d28d4f-e72e-430a-92f8-263cd01ea452",
+  "version": 4,
+  "type": "gallery",
+  "name": "Portland Trail Blazers",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "ef225d59-62fe-4e8c-bf78-01000aec6466",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "ef225d59-62fe-4e8c-bf78-01000aec6466"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Raw Table.json b/node_modules/notion-utils/fixtures/nba/Raw Table.json
new file mode 100644
index 0000000..2bbc685
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Raw Table.json	
@@ -0,0 +1,635 @@
+{
+  "id": "e1c31992-ad30-4ab5-a497-c69fc579e2ec",
+  "version": 55,
+  "type": "table",
+  "name": "Raw Table",
+  "query": {
+    "sort": [
+      {
+        "id": "704f5583-a864-457c-be45-838fd85db6d2",
+        "type": "text",
+        "property": "ChHi",
+        "direction": "ascending"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "table_properties": [
+      {
+        "width": 196,
+        "visible": true,
+        "property": "title"
+      },
+      {
+        "width": 244,
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "width": 114,
+        "visible": true,
+        "property": "gq#*"
+      },
+      {
+        "width": 168,
+        "visible": true,
+        "property": "MYa3"
+      },
+      {
+        "width": 200,
+        "visible": true,
+        "property": "jhk5"
+      },
+      {
+        "width": 200,
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "width": 121,
+        "visible": true,
+        "property": "-@$\\"
+      },
+      {
+        "width": 200,
+        "visible": true,
+        "property": "\"G]_"
+      },
+      {
+        "width": 154,
+        "visible": true,
+        "property": "ZHAU"
+      },
+      {
+        "width": 100,
+        "visible": true,
+        "property": "N!$K"
+      },
+      {
+        "width": 136,
+        "visible": true,
+        "property": "9DS!"
+      },
+      {
+        "width": 172,
+        "visible": true,
+        "property": "=7m2"
+      },
+      {
+        "width": 192,
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "width": 200,
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "width": 223,
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "width": 200,
+        "visible": true,
+        "property": "LH{*"
+      }
+    ]
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "page_sort": [
+    "c7ea3f1d-91de-451d-b271-271865442cc4",
+    "9ef5a892-bb30-4ce2-a124-af0a4ce308ee",
+    "8a3b0b94-7551-4836-af16-00e8babf7ad5",
+    "d26aeb07-2605-4293-9b12-38ebd8a4453e",
+    "ca9d5f4e-54b2-4a92-80bc-c943eff69f20",
+    "d75a9827-3ec6-4943-b361-10b8c4821ff1",
+    "c8e4d0dd-a27d-4798-bb58-531102e03706",
+    "129aaae2-0713-4c89-a3f7-d4b8bd3b6e6c",
+    "58a92c7b-b52a-4547-8f3d-a4250ff3416a",
+    "50395c04-2584-4a35-b3eb-f1057fdb5d3a",
+    "fef63b45-91ec-47d5-bd32-27d27dab419f",
+    "8fade8ad-a605-41ba-9652-57e4b064d0ff",
+    "331608be-0978-4f03-88f6-c74118a5538c",
+    "f5dde43e-3ff4-4643-9ceb-0277ae7e6428",
+    "c1ffed95-feac-4bb3-b45f-6dfdd1ca73f1",
+    "8bc1f4f2-8efb-4056-9253-a2cd313a0664",
+    "785631ae-a5a8-4d2c-9ce6-0fafb6c0930a",
+    "e3bf5e62-9eae-449f-a777-175e1def8b80",
+    "8f01a708-e394-40c0-8c97-48c93124fe27",
+    "0f57d9f2-b687-4a7a-839f-8ea642c1b34e",
+    "462b6820-aaf3-4cac-8a24-c961e2eb57b0",
+    "f2c125eb-97d0-40fa-b147-d325b8689f99",
+    "1f9fa735-a6ff-481c-aa72-0d824660dd36",
+    "e9ba7138-c112-4ffc-9a49-58cc79ca97ba",
+    "dcc5756d-5f36-4119-bb6f-f70674e57ed4",
+    "397a5b0a-78b6-4d44-98a9-3951d525611f",
+    "4f3a36b3-1817-4451-a692-73e6d2d9566f",
+    "5dcbf508-1f19-4ae5-9993-3f0e8876681b",
+    "7578f7b0-914a-4f66-9251-367af2ba0325",
+    "cd72e8a3-07a7-4f90-924b-704d275dd197",
+    "4b63e868-7277-40ed-b830-7d72d5bccf41",
+    "ac6f5d8c-83b8-40de-bd28-8f7fc4c0ef34",
+    "a26cf209-469d-42db-a726-c9d7ec8f809a",
+    "6c04e02d-76c5-4a7e-a421-b4ad0efc3e3a",
+    "6fe85469-68e9-4444-8159-f1e7bc54b77b",
+    "95dd3862-b518-4055-85f2-40a89c0555c0",
+    "d778dda5-6659-4462-9c19-d4d625d04974",
+    "f5dc3f45-5d23-4d42-8132-2230fd5d354c",
+    "e8325846-2c81-44bc-bffe-7be3e11b2fab",
+    "43f6ad58-8cc3-4875-8476-e8856727056c",
+    "de516906-d101-485a-bdcc-aa11b932ec87",
+    "8fe0836e-7ac1-41c3-904c-12b8d6b72f1a",
+    "53eff952-0112-4c9c-b230-59cb09bd101f",
+    "c08a13b1-d7c5-4e78-94ef-8b149c4660a2",
+    "040d887f-7e12-4041-85d0-2f01a651e4a6",
+    "fb7e8bc2-1c6c-4bb9-8417-f3f35ec81c40",
+    "65af3799-3b7e-4fc2-8dce-ba2c520f6bd6",
+    "4721be6b-2e37-484e-b7ab-78eda2ac1fc8",
+    "ddc12215-3538-4fab-8847-eb7b9ee906e2",
+    "f10dbc1a-5366-4da7-b41c-5c1bae52d817",
+    "6b38233e-c62f-4ce8-b959-26256e77246a",
+    "5316faee-fcf7-4a48-a572-40c7e809cce1",
+    "eb0bea4e-81dd-4de2-8266-6956bccdc212",
+    "f41f23d4-640f-4200-8567-c30a84548be8",
+    "c61dd34c-5c34-4f5c-bec5-f16ed5b89cb0",
+    "99936274-2eae-4def-92f6-34b46649dbd3",
+    "bfcfc733-44f6-43fe-bcae-43a436947aec",
+    "461091f8-f1f0-4e99-b969-a7e1e9b6ae3c",
+    "2f4720a8-875b-4980-9d14-54ec2d54b435",
+    "73d4b541-7a47-4205-a96d-6776f8eefec6",
+    "50988a22-3fc1-4cfa-9bcf-f53225e12ee5",
+    "bf1b7e65-98ef-4af1-aaf3-9e345ffab9f7",
+    "15e5035e-396a-4822-a510-e1a6f42f959a",
+    "8c33dcb8-abfd-480a-85fb-06b75799b9f2",
+    "be887255-8a1b-4de8-b2dc-fe62d4970276",
+    "e79b8489-eca3-4c8e-ae2e-97fc6aa1f42a",
+    "622e9abf-ca89-4a64-a43f-7633f2bcc157",
+    "ae647d94-0c24-43fe-9863-2735765193d0",
+    "c4a83c17-fc38-4e08-8edc-97d2fb8112c4",
+    "14861372-4966-4bd2-9241-15eb54af1740",
+    "6cd139ad-3bb1-497d-9866-fb8d97486279",
+    "eef49b94-5e83-4f4d-89cc-be1f3fc51194",
+    "21ee8a3d-77a0-4681-8d38-d68ab459596a",
+    "465066e3-be56-4ce0-9482-92fc538e7693",
+    "92079ec1-3110-4cd7-8ffa-e8500d5850d9",
+    "c291c341-6270-4429-911a-712692a7f27a",
+    "4fe86627-1790-4a53-9351-810fec002c5e",
+    "052887bd-7623-4b48-b5ec-84c646a1cf1b",
+    "83d039b4-d75b-433b-bf0a-6abb0d42d7ab",
+    "203c29af-2b16-43cb-a846-db74eced0a3f",
+    "bd458279-307c-4a15-8838-42e6cfa7ffee",
+    "0cf08062-1177-4438-95ca-f08ffa08f68b",
+    "9e01bab7-4ea9-4cc8-aca3-4b5588c9748b",
+    "4fe48fff-7247-4872-9df0-0ae1bd512e7b",
+    "5bdac465-4c43-4d58-88be-5f83a2ab2f43",
+    "e744573e-3e3e-4d72-bf70-abc408a988f7",
+    "6ad51635-0f9b-4f01-a6b2-7ce5c2e5dd2f",
+    "d6c06029-acde-44e1-836f-e1486ebede6e",
+    "766b743c-1aa6-468f-b94c-a8d78c27d78e",
+    "1eda32b5-dbb0-4f9c-b4b7-916beb8644df",
+    "abb057ce-1ce2-4534-b5dc-dd7abc27fa72",
+    "07610753-46a4-4610-bc36-d250db60a35d",
+    "bebb6cc0-96b0-4123-a8fc-b98faa4ad5ca",
+    "9eabc0da-62ca-4263-9b37-237fc821d42e",
+    "9a3b3071-f994-4fd2-8e31-495d87617b8d",
+    "f1740d6e-aecc-46b8-9593-c03ac98428c2",
+    "139ac7d7-30d5-4b5e-9393-7a282d8ff635",
+    "dcda924e-8b52-4461-ab5a-6593ced99dba",
+    "a0a1cd9a-71bf-409d-8633-691ed657b5af",
+    "e5fa63eb-9a90-4393-9559-6d468a45713b",
+    "c6932a55-2df4-4c14-ae50-78a45e6e847c",
+    "d068369f-757a-4365-b78e-6bea4a7f929f",
+    "1f0cc211-400a-4a31-bc20-ede8a7ee06ad",
+    "6e391c53-f569-4ecc-9447-45c3b5e81205",
+    "36030fb8-b864-4f8e-a81e-27086d8c4b42",
+    "8131d1f8-61c8-4dc5-be92-d0725f165ea1",
+    "0a9655db-94cf-4b07-8414-18b2c12b1f88",
+    "54aa4736-d952-4873-a1c0-eb3a9985a9b3",
+    "f5401633-95dc-4884-b5be-f2ff895e2930",
+    "ffc132d9-6f51-4100-8de8-ffd44f07bb1f",
+    "17c847ff-bdbb-4c2a-a00f-6043f22204a1",
+    "5d092eea-2814-4a33-bcd7-2077b149b831",
+    "9b522935-900a-4649-aacc-f5f50d455118",
+    "f3f7f355-52a9-4931-b7d2-19b637b6ed02",
+    "36d2d68c-71da-44ba-8421-b7e57e34bb07",
+    "1b3f747d-80d4-484c-90e1-e1d56b7bd3f6",
+    "28141942-a4be-4bab-a43b-da51ff36d8b3",
+    "041482e3-a3a4-41c4-a30d-38f1621a45f8",
+    "49b2b551-8b85-4bdb-bd0b-484a068b29c3",
+    "5267f716-9b46-4784-81cc-b6227f932ccb",
+    "e55031d0-8855-4f6c-a937-e9e55cb665b9",
+    "af6fed24-d7a7-4279-a371-141b916f29c9",
+    "f99806d7-bcd6-4c68-9084-bb60e317e3a7",
+    "6c4293fd-e16e-4d5a-9171-b0a6f7e03998",
+    "aa37a93c-ecad-45a1-90d5-3df954c7fa40",
+    "6cb98fa9-927a-42db-a7df-665020bcb456",
+    "57e1309d-433d-4356-a397-c6ffcb3038b5",
+    "bf7af6a2-79f0-44f0-9355-0099157e7883",
+    "235ee243-e12e-4d0c-b044-5ae62d261fe4",
+    "b0ead175-abb3-4fc1-9338-f7ef9c77036b",
+    "ba1e1e72-dd81-4ca3-a042-832d08c0db64",
+    "e26d6bd2-6f2a-480d-913d-2ecd6efc4c03",
+    "fac1d890-740a-4c57-bfd6-4612ec1e18cc",
+    "692d1af4-6523-4c4c-82e7-fed8faa29688",
+    "654f1d0e-1c4a-4b68-abf0-49f82690555a",
+    "55e81f47-1606-46be-8164-ca014eeca0f1",
+    "858e3b08-f5fa-44d3-9579-d31a1b37997e",
+    "c2825fad-7403-4f4a-b251-302fca95954d",
+    "947682f7-7e61-4583-a0f4-70280db629f0",
+    "f3c1f8ce-34d0-4816-ac70-bf77c0739c25",
+    "e1986719-1c20-431a-9c69-292a98a2f986",
+    "efdf0752-0130-49a1-a9f2-e4b21b0e720e",
+    "004bbdd1-543c-4a36-81c2-4bffa97269e8",
+    "62f5cbb8-df1e-4288-b8d7-b0a4eb141911",
+    "8812937a-7b9f-4e59-92dd-72d80b0f0150",
+    "2ccbad8c-b6ce-4092-b56e-67556e19834e",
+    "453c7312-d23c-4a09-8f7f-019931287567",
+    "726b87b3-bc9d-4af4-a804-03f1be3340fd",
+    "aa4fa68c-b98f-4838-9e6a-930d58ecac2d",
+    "676a23d9-5b72-4846-8a39-d5ec6893fda0",
+    "effaf7b4-d44f-4f76-87fb-ddb55e4f235d",
+    "1c4af320-8de1-4fb8-a0ed-3e3998023c85",
+    "b40cda73-b89a-44fc-8840-78aff8792427",
+    "6933a5d4-24ef-4705-a0e7-aaf627668d4e",
+    "a9747787-f2d7-48e0-ac80-2ca1c2bec19e",
+    "65d84d86-39bb-4171-af71-05f99707bf85",
+    "8a9f4000-5840-4726-b31d-566ba40d3f44",
+    "dedf24ff-d412-44f6-a7b7-009b7691f8f8",
+    "f17e0ebf-c690-4fbe-9aef-32f7c1e0242d",
+    "4aee59ce-3c76-4cb5-b720-545266a1a1f2",
+    "56aaad71-3013-4c49-b37c-5c227c79f299",
+    "9a266d39-ce62-49b0-8715-84afb16f6a41",
+    "6db88bd8-fcfa-4409-8260-9192d26e4596",
+    "d08454cd-0889-457a-ab90-2f4c52d1fc4a",
+    "001a3b09-88e9-4a6a-8c90-e524a04c2f27",
+    "a1bed86a-7bef-46d5-9932-4e94c8c092ba",
+    "0763d43d-70c9-4ad4-ada5-cb0374b8d730",
+    "5ef2821b-a547-45d8-b1ba-fcebe8adacc1",
+    "e6ebae0a-867e-4aa9-8449-45b425503ad7",
+    "b49c42f5-fe7c-4c23-aa9a-ebdd7cb4822d",
+    "699cc67e-a9fc-4cbb-a264-bac18dc422f2",
+    "1a04ee78-9062-4483-92f9-a812dca78f08",
+    "d6641250-13c6-4c2c-95e5-e04bfe2d7338",
+    "923fddb3-f155-4ed0-8f73-4b35f548313a",
+    "1ac05e78-817b-4def-be68-e4abf9931099",
+    "f41fccaf-fdaa-4baa-8696-31b6ecad12f7",
+    "4fc14aba-c8c2-4fc6-ab5a-706f9e5722b9",
+    "849aca7d-95ff-4a55-993b-545fbb024e9f",
+    "9afef1ef-b1eb-4afa-bc0a-a529bd0980e5",
+    "5d6c4bdb-7e33-4f83-a09a-94729a73628f",
+    "1cb564d0-2918-4625-8c82-1812df38e104",
+    "e652949a-bef8-43f1-baa9-2d760b23deb1",
+    "d3981dcf-4829-49f5-9a51-b88a202b91a4",
+    "aca8c73a-ed85-4cbd-8af9-9ea099791fbb",
+    "477de7da-a3e1-4c46-9e3a-5952af73e44b",
+    "61f6ec91-aac3-4211-bd15-f6e85e3800bd",
+    "b377bc3f-7e1a-438f-8a51-39ba81453826",
+    "1893193b-bdb6-4531-9fee-d9f4405e94df",
+    "af144d64-bac6-47ad-afea-5353bd445047",
+    "116d9fd5-23d5-4b40-a5f5-4d17c3ec4878",
+    "bade9948-e8d0-4706-b135-f4ac402f363c",
+    "053abff1-2986-4ff9-ba0d-dc3d9eca8a73",
+    "dfc56d92-0eb1-4da1-a9c4-7079b85a65c3",
+    "6160cdcc-b421-4bb8-b65d-2b47a89f59af",
+    "db2d6578-3120-4987-ae63-c865722c5b32",
+    "e0019987-0da1-43d0-8dd9-eef326282b49",
+    "bc2c88f9-b011-4e06-a493-d8ef870b3b00",
+    "458a640c-0440-4bab-800d-6addb1fce4a2",
+    "3a6b159d-905d-4d63-a623-e85ad03ce964",
+    "e6349b92-5944-4be7-8a47-5851f4d19d09",
+    "5426599c-94a1-4306-a35f-a07a5c0d19eb",
+    "8a87d4a3-ddb0-47f1-9346-488e0dd7ee70",
+    "95b21335-9403-4491-b07e-dc7aa7b4831b",
+    "033f25e6-a8f6-4ba7-8b56-508e95be5f15",
+    "57a4a7a7-6c0b-4024-b4e0-77698d8e9d42",
+    "734f8ebc-e117-40d9-b39a-e46578ef805e",
+    "e8bb9f90-8d11-4d4c-bf02-50be069d3497",
+    "7f32bc1b-7598-47d2-88ed-692d1cdf2f1a",
+    "7f4b610d-8ccc-4a6e-859a-9af750ef197c",
+    "aa76e519-6aed-470c-87d5-00d28fc8e5d1",
+    "db67ff57-37ad-49aa-9acb-928996d16aca",
+    "0917ae4f-d544-4e50-8b56-0d41ebb1d3ee",
+    "c936e013-e4b8-491b-b3c0-4111619bb0c4",
+    "c2e04e3d-74d3-47a0-b4ea-0c2bf58ebf2e",
+    "59da3e17-f388-428d-a7a5-ed4ffdf2863f",
+    "f44230a0-9778-4e33-a586-bc78afb659b4",
+    "348cef4e-a2f3-4339-8fde-dd9b5434955b",
+    "2e882951-6345-4584-92cc-bb496a0832a9",
+    "d7574446-5fef-4bd3-aabb-1efb11d790b1",
+    "2650a90e-d204-4817-b86a-f96156bc42d7",
+    "1df0cb61-e72f-45de-9778-f17a6a7faa02",
+    "d045ec1f-c1df-48c7-93c9-b7c07dfa55ae",
+    "d4ef28bc-ceec-46b1-ac94-d83d05008953",
+    "d814bdb7-8fe8-497d-bdfd-11c32736b4bd",
+    "e47dfd5d-eff8-443f-997e-d4f87df4eba3",
+    "1b47d758-678d-44bf-8fe4-e432618b6282",
+    "1d2cf72f-e1cc-4a26-bfd8-d37598b6bfa0",
+    "07238e54-8e66-44a7-8a1e-116238320caa",
+    "4637d950-fddd-46ff-831e-9641df3253cd",
+    "53452992-30fb-4120-b21a-db76e99ab839",
+    "a2cead6d-b40d-4882-99a5-0770a22c618b",
+    "36ad2e36-890c-4263-bb06-57882acb8e92",
+    "7be223f5-d93c-4536-b450-bcff98b777c5",
+    "668439ae-81b2-4f07-802c-4c2dc2109a31",
+    "7ed2188a-e376-45ad-b032-ce4b72129c6d",
+    "7ba6a6ed-f214-40c1-8031-ed5a7d4dc5ed",
+    "23422a36-f518-4e0b-aec8-e901a9617e10",
+    "f76af635-59d6-4321-a1a5-254314c82abf",
+    "d539802b-e51c-4187-8061-b8b670f083a7",
+    "d29887cc-0496-4f13-9780-2dec88465fd3",
+    "5994f819-887e-4e3e-b7dc-0095f0b4df7d",
+    "3cb90950-bff5-4557-951a-090990a2c8f9",
+    "a246b542-87de-4c11-af6b-ef6c87c04b25",
+    "e9fa60a7-3b95-44bd-bcb3-398227dc0d93",
+    "95a42416-cc68-417c-abaf-0987a2eee8d4",
+    "eeeca8b7-af12-487c-aaab-ab3fbbf6ab4c",
+    "9bf37264-5772-454c-9406-b7d220a8c5cd",
+    "c0cf46e3-3c12-49f1-a8fd-eeb01d715a38",
+    "3e605533-879f-4167-972e-1454c44eb0fb",
+    "1ba167a8-2d0a-40fc-a5c7-f62b8858e715",
+    "97b68898-a0a4-447c-b144-5ccb91a8684e",
+    "c3d50be3-8ba7-4a1b-a341-cc096ed6130e",
+    "caf05638-c338-45e2-8708-69d11382e16e",
+    "0bd29c4d-0c75-4a36-8803-646148c9fc18",
+    "0648882a-df3f-4b7f-924e-ae14ad7d4ccb",
+    "49f89791-85b4-4cd1-98f0-2219f96dfe7e",
+    "9cbf50b4-1237-47a4-affa-332d83ada494",
+    "390c32a6-f4b5-4120-84a3-d1a85c88c18c",
+    "bad715e5-9ed4-4105-894a-54dbb9cb6731",
+    "22e7dc5f-a5e3-40cf-87c4-762a57a2ef55",
+    "b8dcb266-39f8-418e-95e4-37dc9b183b3b",
+    "0240087b-223d-4c18-aa50-87e72836565b",
+    "73e3c5c0-0dc9-4cbe-b7fe-afa40d33a550",
+    "9fb342a5-281b-43ca-9ef6-0b5c5c1ee2ed",
+    "081f52dc-abad-4119-b79e-94b155327d62",
+    "f40275d2-3c48-49ab-82f7-8f4032e95452",
+    "d7a971e2-2ae6-43ce-ba54-8356afc680b9",
+    "0b0bc477-fe3c-46d9-8b4d-0558d052ad35",
+    "1145281e-c801-4d5a-85e6-a65edc2f76f0",
+    "b7cdb0ca-34e3-456a-bb24-4f63f04627fe",
+    "2e35e5fd-1f19-4832-a717-e9d0217e0902",
+    "17ce2264-a0bc-4cd7-a1b4-4c4fe0dfc746",
+    "6f337686-c8a2-466f-ace0-ffd050d3ae1f",
+    "518bf55c-e3f4-4078-96a0-92301c95ab02",
+    "81e021ae-d175-4d6c-aeeb-c934ac0b3ac6",
+    "39615d67-a5ba-4766-b1de-d5f2ccb262be",
+    "33074977-d5e8-40aa-8cdb-8e7f82ba3bf2",
+    "f5a4d04f-31e7-4d10-99f3-bd90b6fac5e8",
+    "64423602-a7b7-49f8-b986-6e26ec296044",
+    "6eaab6b4-38bb-4f5b-bdd0-24f53f791cd6",
+    "badb5fbc-a2a3-4f65-af67-1a85e1acb1d9",
+    "0f6bf1b5-3152-4620-9ca6-c70cc9220146",
+    "f877266a-4d95-45dd-ade4-8ac248a52dbc",
+    "680ce12f-b1a1-4696-ae20-c9d20a36fb8a",
+    "fb6f0fae-aa51-423b-8118-655f91b2a171",
+    "3ef4ffb1-40dd-4c0d-9094-37c23c181c5f",
+    "f506dae2-41fe-4c07-81ce-452ef509aee5",
+    "57f0d621-3035-4676-8e64-0bba57105ce3",
+    "fb34269c-7388-439e-8c63-29735124e448",
+    "bc125aeb-c287-4282-a196-d34cb432298e",
+    "ae68ad50-b170-4e2e-8913-a9fba4fb6685",
+    "217469c1-0a42-4f90-a2c7-3aed5ac01ac2",
+    "7cfcaa96-bb56-4646-8bad-cc8fd58aea57",
+    "93ee0f76-145b-4283-906b-bc6e1f9d74cc",
+    "31d71a35-0697-4d79-9788-0a0aece5a9f1",
+    "91bd4399-4e91-418c-9906-b360a4a32107",
+    "e82bcf69-7ab8-4716-962a-a990a1320c68",
+    "78fc64d5-8a93-4458-b31d-8783a08480a6",
+    "7b029780-64dc-4019-a040-ab21b1ac175e",
+    "e7190a3a-132e-48a2-8660-e7df6da0a1d5",
+    "1fb18673-c269-41dc-9588-2adc35ebdc53",
+    "159ba45a-670d-4a0d-bfd2-d54146e72740",
+    "3ab63431-c603-4693-ab9e-e6d58148df7d",
+    "f006a1e4-3bdb-4882-a640-db64b88f00c0",
+    "781dbbf8-028b-401f-912a-ec0984a7e884",
+    "ee43e779-ef6a-44e0-b390-b27a73e3a8f0",
+    "48fd037d-56f5-460a-b324-ad7d6cc07e45",
+    "bf120f14-3973-44be-aa6e-57e9fd7f99f0",
+    "2cc221c5-bad1-4d70-8fca-6dbaa28ef17d",
+    "0dbd808e-acde-46af-b341-c509726914bb",
+    "5903bd9d-026a-41b2-ae39-58c7348a9167",
+    "d82575ca-95bd-4bd1-b430-e3af06d1cc57",
+    "26541856-88cd-47bb-9df1-af7ff478859d",
+    "02bbf5ab-e2c7-48f5-b782-145a5f1551e5",
+    "67f33590-2cc2-4a1b-a5ad-5e065187934f",
+    "28c7d311-d951-42cc-9723-439f68448bff",
+    "9fed1e10-4d32-4482-bb8a-7332b87b794f",
+    "5e418731-93cc-4256-a193-4e4b6e0a8a50",
+    "dfd8bd11-873c-4778-8e08-02e5e6b3b6a4",
+    "be8a710a-78fc-400f-8852-72f976b04b4a",
+    "dd73c4c3-3b09-4701-801b-cc92eaf33e93",
+    "5f7db689-4d74-4a04-9feb-0fb1318a5793",
+    "cc7e9314-8d65-45f4-9f9b-f71626c610ba",
+    "8c4ed0e2-57f4-44c0-908c-45118a267a8c",
+    "ba8bccf0-3f72-4999-81de-654f8f521c83",
+    "9cc65a75-21a0-4c68-a6bf-da9291bde225",
+    "8fa213b5-2031-48db-8da9-94dc34699fcb",
+    "eb058479-abe5-4bef-ab45-fd8a02417c57",
+    "68e07892-66d9-4e15-96b2-c169c270e81a",
+    "6c933f98-253d-4db5-8dc6-7600ee8c4346",
+    "1c8ba9c0-052f-4d23-9f97-5ba6b88dee30",
+    "9b8b837a-085e-4840-a3b0-a669167f7268",
+    "c502ac7c-4f87-4dc1-b0a5-8eacba5ce865",
+    "60bfa5fc-f2f6-4af2-bcec-eee315cad899",
+    "1fc82e99-08b1-4275-8c3b-cf75f9d9a3c1",
+    "32c355a9-ad70-4738-b27e-19357a1c59f7",
+    "c48d4fad-35e3-4c51-be9b-620c0203d6c0",
+    "58cc0600-d996-4946-b575-8d1891efba85",
+    "0b0d01f1-04bb-4024-aaf1-fd1a81b8315a",
+    "31dd97fd-a0a6-41e1-83b9-f2fb91c58550",
+    "18cdf4a8-a6b4-44b4-89dc-e787ec8e1bd6",
+    "21ba0c99-00bd-4ff2-b3bb-ddbebdda399d",
+    "712feb1b-3340-4276-9d72-1cbb957b12d2",
+    "746dc4dd-7b22-4777-b34c-0430315bfed9",
+    "4aa98c40-1dc2-4545-bdb0-116cbd4f8ece",
+    "48bda606-dc77-4e13-836e-c3e32ede5922",
+    "11442b43-4920-4104-a5a8-0dd806c70900",
+    "6c670f9d-c383-46c8-8bf8-6b9998d8c93b",
+    "4716d21c-42a7-43a0-a163-6efeb50b5e46",
+    "3d2134ed-9279-4195-876d-cb645a6870a8",
+    "98244082-609b-4e4c-82f4-3c5a62446688",
+    "bd3fad3d-eb60-4523-a725-3ec994b96165",
+    "e708b1da-967c-4d68-a6d6-a5987b5c83b3",
+    "897ef5d0-a209-49ee-909d-489af1423e15",
+    "5a380378-ae79-4be5-b887-dbda78444d9d",
+    "06e60f3a-dd9c-4934-986b-68c18987dac1",
+    "e250707e-beee-4f50-a9f4-01ea03186929",
+    "e4a178c4-0d0d-4c5d-9f90-ed16b53c60fa",
+    "a5611170-3b44-4d9b-aae5-9d7002b673cf",
+    "edfbad32-801d-4ce4-ae61-fb5cb0240ff3",
+    "44bad171-b4ac-44b9-ad58-b83c95efc455",
+    "b1ed6778-ccb0-461e-917c-ddd64e0af148",
+    "aff15622-7df6-4978-b040-d9cb89dc270d",
+    "2ad5c149-4539-4f0e-8a36-4f6bae9540a2",
+    "b087f212-0ed6-4b35-9650-bdc18e68b030",
+    "378291b3-7b98-4444-98df-07af3a99989a",
+    "96406da9-b28b-4899-8885-9883f6909ed6",
+    "2758897b-91e1-41f1-8360-ad7872e8c15b",
+    "5049a1e2-4929-46f6-9fed-f36956469df6",
+    "18155006-506b-4529-9ef2-0cd45a8426ac",
+    "35f647fc-94d3-41e9-9f6a-8bd6a11cad7e",
+    "20e1fdd9-312b-466d-a1e9-96b88652fd7a",
+    "db5379f5-87e9-48b7-969d-4b82c1ce174e",
+    "d6a07a3a-00c3-4513-94ee-ac54b428377b",
+    "f14efca6-b40b-4411-8ceb-de5b87cb113c",
+    "00d0e651-e8c0-4b15-a11d-2b68bceb9119",
+    "9c196736-4326-44e9-b2b4-0bb3ec87a7f4",
+    "db024394-18b0-4b48-8ec6-c5dcbc623d36",
+    "bfd3f7a1-c119-45d2-acd3-77f5eea0e16f",
+    "2c122b60-b41d-4161-858c-4dae8e9f0b0b",
+    "8854951b-0821-4239-a8a4-82ec6c764c9e",
+    "5b33f792-195a-44d2-9bd6-f6738ff1f432",
+    "f4edd0e8-9106-46e1-a983-a390ce26a67c",
+    "25ebb018-1bf8-438a-9ba0-c16c033d527f",
+    "95a2889c-1a7d-406f-917c-8d9794314c0a",
+    "f16c45fe-f2c8-45a7-b181-d64605bd5840",
+    "50bcbdc0-0f62-4d11-9b8d-1acfb33064c9",
+    "b27d3c7b-dfaa-4ca3-8a58-76a71d4e1249",
+    "873b6533-79bf-4331-ace1-1c6d51fc9872",
+    "4eb264b8-df87-49f0-a0d1-af56908d0bb5",
+    "d2637657-3107-4ac0-ac4d-b86b1d112ae4",
+    "4c6173b9-d127-48e5-b06c-5b1199e1b668",
+    "56e9c69a-5b13-4de4-ac7d-97e28f43a907",
+    "578d7618-26a6-41b7-9593-9d43efca2816",
+    "f8fcb6f0-1d50-4de7-a0f2-040c1d8d295b",
+    "88e820c8-cf3a-483c-b70a-f95a1de175ba",
+    "ec525e26-c898-49a5-b930-de3ab98eedb4",
+    "5613c066-00fd-46cf-ad75-9c9de4fb773c",
+    "672ab20d-33c3-4863-b94a-a20b4191f9d2",
+    "3fc9c51e-1ae8-48de-90b3-2a8ebccdb3d8",
+    "dc0be7cc-c8a7-4197-9498-b80b0af2293f",
+    "8af58cfe-b746-4dc0-9dec-35824c67dcda",
+    "1f0a5f7e-8858-40e9-a779-303422f6d7be",
+    "0e968a69-2b1d-491b-903d-1a02946e6570",
+    "5d07bfbd-fd51-4cab-867b-39d67061c193",
+    "79888a00-2038-40c3-9bce-c952a63e0a04",
+    "0a858acd-bea3-4a53-ba1e-1ac8faaeb778",
+    "bacd4cb0-8b58-480f-88d1-fd4f92e43660",
+    "d450c617-527a-4b42-9d5b-425b0fe6cb24",
+    "9c709e5e-f447-4c97-94e4-8abd9c61fb8b",
+    "c7047621-214e-4bc0-9a23-12fcf26a11e0",
+    "dd379e8b-3896-41d4-95f8-fff5ab73de5c",
+    "db375bde-34fb-44ea-a3f2-75e41fa92e93",
+    "d580b754-59c2-4d78-9d6b-85d50ef5a343",
+    "a28988ab-b85c-4c07-9465-49a32a3bb34c",
+    "34dd9fa6-aa50-456d-bb01-971c18c127fc",
+    "cab48d12-642c-4cfe-ab61-140357800313",
+    "aadd128a-2301-4371-82fc-745b7f12d65b",
+    "91a215b7-d355-4eb1-b57c-3587c98e2625",
+    "e8afe3d1-89bc-4304-99c3-1432ac893c35",
+    "e93ad1c5-28f0-414d-bf38-2ee4942a179b",
+    "ef0f8cdf-1e74-412c-9a76-815ceadab388",
+    "02f0e434-bc26-41d3-85b6-3763ebf5508d",
+    "262921ae-76f4-4f85-b88c-f5d7389788d2",
+    "3cf9537e-e47c-456a-9cfb-1f6fbecc49b6",
+    "78823d5c-e17f-4f51-a648-a77626259cdd",
+    "ae1d419b-7091-4caa-a158-dfe922433575",
+    "28cf85e8-77d6-4ab2-8ce0-b8879dcf2525",
+    "5bbd362c-20d8-444f-ba64-e7db752bee6e",
+    "d4e42ee3-b07e-4f33-985d-72722f80714c",
+    "36d03792-4f52-4e05-af3d-2f1833d8a0f2",
+    "a69f0451-9638-486c-ae55-4a0c382e13f3",
+    "e61534e0-9e31-4153-b0d8-5608465751c3",
+    "caee42ee-0955-4621-85be-f98869854b5d",
+    "08ca98f2-bc53-487f-8185-d250ca885632",
+    "60e2f725-8a98-4c9f-826f-5c989dee34e7",
+    "8b9e79af-0a4b-4372-90a1-be49cb02dbd7",
+    "a47a1a8a-f853-4021-9578-638e8178fbb6",
+    "e1aaa0d5-73e4-419d-b5d6-e414ba0d4e55",
+    "3399ed56-0507-4e71-a964-6e59e87c24af",
+    "5ed8919b-a754-4695-a071-afffff2470b9",
+    "3aeabcf7-fb3e-4849-b1b0-72072f05e2cb",
+    "df11c1c9-550e-4b70-817f-b4762579fb7d",
+    "41edbc2a-e801-47df-8f51-7b26cfae051b",
+    "5957ea43-6466-4016-b68c-6c2ee342c0dd",
+    "edeba402-7b8e-4fe0-bdd6-1eb91fc7d0ba",
+    "3aa043eb-2935-4ccb-b248-d13a97f305cd",
+    "8b9c71b6-4a6c-4075-87a4-6878d3bdcb9f",
+    "163d744c-1fd0-4207-ae19-b1d8d6d4aecb",
+    "6c51dece-aadc-4e2a-8426-17f693128f0a",
+    "8fcd3b85-515b-4f64-b56c-0bfa25378c1f",
+    "1e03f644-396f-42ba-addb-3b1dbf2a513c",
+    "2c3c06fb-ba3d-4a58-8eba-4097a9011961",
+    "6d1d75e9-3195-45d2-9016-6a14f3882ef4",
+    "81c1ea34-eeca-446f-b042-3a4ed41702f6",
+    "3ee3ee0f-f0d2-4a1f-acb6-151b633296e3",
+    "f6030e27-cb91-41ca-8379-8a1dac44ffb6",
+    "fbfc7c0a-46e6-410a-b7c6-8d4efcd2b97e",
+    "9daa69f7-d373-4155-bcdd-21039929c55b",
+    "caed86cc-1745-4629-bc35-6387d012efc4",
+    "0a65cca9-fcff-423f-8bef-a4ce66aaece8",
+    "860c5666-66ec-4c82-94e2-650df0525be8",
+    "1ef2791e-d8a4-4234-8327-ba0bc066bf66",
+    "ef13dd90-81d0-4e13-917e-28cf366213b1",
+    "48ffab96-cf5f-4e84-8491-a6939e631a24",
+    "065d7fa4-c7d0-45b7-a95f-5535e48c7ff3",
+    "d905c027-6f15-4b54-a3ac-f5b89e9baf6b",
+    "ae9380a8-cd3f-407b-9547-969b65e0a936",
+    "46912a1e-c529-40e6-a4eb-e9e33af9eab8",
+    "dc108e7a-8ec5-4f1f-bca4-87060b5dd29c",
+    "d5747412-75f3-43c2-9dd2-e82956c0f11c",
+    "6930de26-1600-4bc9-ba77-6ee56e13a6d1",
+    "bbaed06c-3a14-42b8-964b-438f1fbacb7d",
+    "618353f9-1dcb-4894-bda3-a95780ef9897",
+    "e8d5499c-2b14-4501-90db-973142cc3b28",
+    "37532462-8d6d-4ffc-bea8-98b6643ee2e3",
+    "3bd9c235-f796-4c98-af0c-4534ce84d1b7",
+    "1999a4fd-f30c-44b6-8bad-002af81dda68",
+    "cb9d9d33-235b-48ed-aee1-94f4d2874e30",
+    "d1e18c54-56d4-448d-8693-0ab2b32b69b3",
+    "a8a84326-0219-43b1-ba4e-53c655c76ef9",
+    "eb6703eb-70ff-4d7b-abd0-925e1531a77a",
+    "ed8a572f-f2d0-460a-89d3-d475f33c5974",
+    "36249588-5867-4eab-a5d8-44479a1d7531",
+    "427341bc-79a3-4ec5-8987-a91dbd65e041",
+    "b8b5853c-f8ef-41b2-92cb-fca80e9531c4",
+    "a653ae64-a4d3-464e-bf8c-9f5acf9eeb97",
+    "7a9eb58b-4c83-4418-a5c5-702993da5eca",
+    "af584923-1332-4b4a-b6a0-d1edd5dea6a9",
+    "42627190-f17b-44cc-bf37-6480e44681ce",
+    "32002064-7d3d-4cbd-9a52-a9bcf3c61448",
+    "ed72b903-be42-4f83-bb75-688d6bfddf11",
+    "4f674cd3-80df-4dc7-b882-75f5f181cabb",
+    "a9d3d864-127d-44c1-86b3-4cc8dba3aacd",
+    "499b8f7f-007a-473e-900d-a641445ba1b7",
+    "19b92c37-9784-4471-b973-0e3953433fe5",
+    "e0f49706-84c9-412d-ae8a-8f0542fa890d",
+    "9dedabed-701c-4b05-b317-4b6b75a2481f",
+    "03bc6e86-ad24-4535-8b67-bedf868ec936",
+    "6d2cd5e5-cdd1-46d8-ad7f-ecca8a67c563",
+    "df813a44-8057-4304-bb08-71a3547bbf3c",
+    "d389225d-1ed7-4234-a83d-85eb3ed46c33",
+    "88fe3c43-ec2b-4804-b8ee-a6e085536b85"
+  ],
+  "query2": {
+    "sort": [
+      {
+        "property": "p4nU",
+        "direction": "ascending"
+      },
+      {
+        "property": "title",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Sacramento Kings.json b/node_modules/notion-utils/fixtures/nba/Sacramento Kings.json
new file mode 100644
index 0000000..84507b7
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Sacramento Kings.json	
@@ -0,0 +1,125 @@
+{
+  "id": "99cd3dfb-97fb-493d-bfaa-518bd872dda4",
+  "version": 4,
+  "type": "gallery",
+  "name": "Sacramento Kings",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "e355c83e-efd6-43a9-9fbd-b8c863ce28aa",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "e355c83e-efd6-43a9-9fbd-b8c863ce28aa"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/San Antonio Spurs.json b/node_modules/notion-utils/fixtures/nba/San Antonio Spurs.json
new file mode 100644
index 0000000..c223db5
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/San Antonio Spurs.json	
@@ -0,0 +1,125 @@
+{
+  "id": "5662c1f4-a011-4629-9616-3a2d53f6c9af",
+  "version": 4,
+  "type": "gallery",
+  "name": "San Antonio Spurs",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "14996a91-fff0-4234-bc9b-64250b59ae31",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "14996a91-fff0-4234-bc9b-64250b59ae31"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Toronto Raptors.json b/node_modules/notion-utils/fixtures/nba/Toronto Raptors.json
new file mode 100644
index 0000000..8da50a2
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Toronto Raptors.json	
@@ -0,0 +1,125 @@
+{
+  "id": "93fe8a38-e32b-4c6a-87f2-03f1a438de75",
+  "version": 4,
+  "type": "gallery",
+  "name": "Toronto Raptors",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "9e5ce76a-7550-449f-a7ed-4ade717ab7a7",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "9e5ce76a-7550-449f-a7ed-4ade717ab7a7"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/UCLA.json b/node_modules/notion-utils/fixtures/nba/UCLA.json
new file mode 100644
index 0000000..7e5c961
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/UCLA.json
@@ -0,0 +1,125 @@
+{
+  "id": "1a1863bd-f819-41dc-a228-831ca7a75d2a",
+  "version": 7,
+  "type": "gallery",
+  "name": "UCLA",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "text",
+        "value": "UCLA",
+        "property": "jhk5",
+        "comparator": "string_is"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "UCLA"
+            },
+            "operator": "string_is"
+          },
+          "property": "jhk5"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/University of Kentucky.json b/node_modules/notion-utils/fixtures/nba/University of Kentucky.json
new file mode 100644
index 0000000..d4fbadf
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/University of Kentucky.json	
@@ -0,0 +1,125 @@
+{
+  "id": "43d091fb-a648-40cc-ae10-9d9784c34524",
+  "version": 13,
+  "type": "gallery",
+  "name": "University of Kentucky",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "text",
+        "value": "Kentucky",
+        "property": "jhk5",
+        "comparator": "string_is"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "Kentucky"
+            },
+            "operator": "string_is"
+          },
+          "property": "jhk5"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/University of North Carolina.json b/node_modules/notion-utils/fixtures/nba/University of North Carolina.json
new file mode 100644
index 0000000..b74d9a3
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/University of North Carolina.json	
@@ -0,0 +1,125 @@
+{
+  "id": "9a43758f-21c5-4fc2-a4b5-0fc82971b79f",
+  "version": 23,
+  "type": "gallery",
+  "name": "University of North Carolina",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "text",
+        "value": "North Carolina",
+        "property": "jhk5",
+        "comparator": "string_is"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "North Carolina"
+            },
+            "operator": "string_is"
+          },
+          "property": "jhk5"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/University of Texas.json b/node_modules/notion-utils/fixtures/nba/University of Texas.json
new file mode 100644
index 0000000..52ccbf6
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/University of Texas.json	
@@ -0,0 +1,125 @@
+{
+  "id": "d4102177-3cb3-4d36-8f39-92d84147f825",
+  "version": 8,
+  "type": "gallery",
+  "name": "University of Texas",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "text",
+        "value": "Texas",
+        "property": "jhk5",
+        "comparator": "string_is"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "Texas"
+            },
+            "operator": "string_is"
+          },
+          "property": "jhk5"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Utah Jazz.json b/node_modules/notion-utils/fixtures/nba/Utah Jazz.json
new file mode 100644
index 0000000..5089097
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Utah Jazz.json	
@@ -0,0 +1,125 @@
+{
+  "id": "3815e8d7-e5f2-4399-a761-9ceaed565257",
+  "version": 4,
+  "type": "gallery",
+  "name": "Utah Jazz",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "ceae18ce-490a-464a-ac7c-822df32c9a28",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "ceae18ce-490a-464a-ac7c-822df32c9a28"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/Washington Wizards.json b/node_modules/notion-utils/fixtures/nba/Washington Wizards.json
new file mode 100644
index 0000000..e6a25bd
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/Washington Wizards.json	
@@ -0,0 +1,125 @@
+{
+  "id": "bd226193-3647-4ed1-bbe3-a5baa69954c7",
+  "version": 4,
+  "type": "gallery",
+  "name": "Washington Wizards",
+  "query": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": [
+      {
+        "id": "b477edbf-0ebd-49d7-98e3-8d46bd0de0dc",
+        "type": "relation",
+        "value": "7611bc05-d4c6-41de-9a18-f9a1071d99c8",
+        "property": "p4nU",
+        "comparator": "enum_contains"
+      }
+    ],
+    "filter_operator": "and"
+  },
+  "format": {
+    "gallery_cover": {
+      "type": "property",
+      "property": "9DS!"
+    },
+    "gallery_cover_size": "small",
+    "gallery_properties": [
+      {
+        "visible": true,
+        "property": "p4nU"
+      },
+      {
+        "visible": true,
+        "property": "IY\\1"
+      },
+      {
+        "visible": true,
+        "property": "([kx"
+      },
+      {
+        "visible": true,
+        "property": "RyF."
+      },
+      {
+        "visible": true,
+        "property": "i?W1"
+      },
+      {
+        "visible": true,
+        "property": "LH{*"
+      },
+      {
+        "visible": false,
+        "property": "gq#*"
+      },
+      {
+        "visible": false,
+        "property": "MYa3"
+      },
+      {
+        "visible": false,
+        "property": "jhk5"
+      },
+      {
+        "visible": false,
+        "property": "\"G]_"
+      },
+      {
+        "visible": false,
+        "property": "-@$\\"
+      },
+      {
+        "visible": false,
+        "property": "ZHAU"
+      },
+      {
+        "visible": false,
+        "property": "N!$K"
+      },
+      {
+        "visible": false,
+        "property": "9DS!"
+      },
+      {
+        "visible": false,
+        "property": "=7m2"
+      }
+    ],
+    "gallery_cover_aspect": "contain",
+    "gallery_title_visible": true
+  },
+  "parent_id": "25630754-1583-4e09-b080-787768ecff62",
+  "parent_table": "block",
+  "alive": true,
+  "query2": {
+    "sort": [
+      {
+        "id": "0643c2be-0d39-43d0-b87a-aecfdd468edb",
+        "type": "formula",
+        "property": "=7m2",
+        "direction": "ascending"
+      }
+    ],
+    "filter": {
+      "filters": [
+        {
+          "filter": {
+            "value": {
+              "type": "exact",
+              "value": "7611bc05-d4c6-41de-9a18-f9a1071d99c8"
+            },
+            "operator": "relation_contains"
+          },
+          "property": "p4nU"
+        }
+      ],
+      "operator": "and"
+    }
+  }
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-048d8535-b957-488a-89f0-ade8d3c4c026.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-048d8535-b957-488a-89f0-ade8d3c4c026.json
new file mode 100644
index 0000000..e6f6e3b
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-048d8535-b957-488a-89f0-ade8d3c4c026.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "08ca98f2-bc53-487f-8185-d250ca885632",
+    "efdf0752-0130-49a1-a9f2-e4b21b0e720e",
+    "e7190a3a-132e-48a2-8660-e7df6da0a1d5",
+    "f44230a0-9778-4e33-a586-bc78afb659b4",
+    "d045ec1f-c1df-48c7-93c9-b7c07dfa55ae",
+    "e8bb9f90-8d11-4d4c-bf02-50be069d3497",
+    "c291c341-6270-4429-911a-712692a7f27a",
+    "bbaed06c-3a14-42b8-964b-438f1fbacb7d",
+    "397a5b0a-78b6-4d44-98a9-3951d525611f",
+    "ed72b903-be42-4f83-bb75-688d6bfddf11",
+    "1ba167a8-2d0a-40fc-a5c7-f62b8858e715",
+    "edfbad32-801d-4ce4-ae61-fb5cb0240ff3",
+    "0917ae4f-d544-4e50-8b56-0d41ebb1d3ee",
+    "effaf7b4-d44f-4f76-87fb-ddb55e4f235d",
+    "1e03f644-396f-42ba-addb-3b1dbf2a513c",
+    "bad715e5-9ed4-4105-894a-54dbb9cb6731"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-1a1863bd-f819-41dc-a228-831ca7a75d2a.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-1a1863bd-f819-41dc-a228-831ca7a75d2a.json
new file mode 100644
index 0000000..141e376
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-1a1863bd-f819-41dc-a228-831ca7a75d2a.json
@@ -0,0 +1,20 @@
+{
+  "type": "table",
+  "blockIds": [
+    "5bdac465-4c43-4d58-88be-5f83a2ab2f43",
+    "d389225d-1ed7-4234-a83d-85eb3ed46c33",
+    "9afef1ef-b1eb-4afa-bc0a-a529bd0980e5",
+    "4fe48fff-7247-4872-9df0-0ae1bd512e7b",
+    "9fed1e10-4d32-4482-bb8a-7332b87b794f",
+    "5994f819-887e-4e3e-b7dc-0095f0b4df7d",
+    "f4edd0e8-9106-46e1-a983-a390ce26a67c",
+    "d5747412-75f3-43c2-9dd2-e82956c0f11c",
+    "053abff1-2986-4ff9-ba0d-dc3d9eca8a73",
+    "f99806d7-bcd6-4c68-9084-bb60e317e3a7",
+    "5049a1e2-4929-46f6-9fed-f36956469df6",
+    "6cb98fa9-927a-42db-a7df-665020bcb456",
+    "2758897b-91e1-41f1-8360-ad7872e8c15b"
+  ],
+  "aggregationResults": [],
+  "total": 13
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-1d79cc15-d040-43eb-9d65-7e35bafbcf74.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-1d79cc15-d040-43eb-9d65-7e35bafbcf74.json
new file mode 100644
index 0000000..6cea013
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-1d79cc15-d040-43eb-9d65-7e35bafbcf74.json
@@ -0,0 +1,31 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e3bf5e62-9eae-449f-a777-175e1def8b80",
+    "159ba45a-670d-4a0d-bfd2-d54146e72740",
+    "bf7af6a2-79f0-44f0-9355-0099157e7883",
+    "1ef2791e-d8a4-4234-8327-ba0bc066bf66",
+    "e8d5499c-2b14-4501-90db-973142cc3b28",
+    "f2c125eb-97d0-40fa-b147-d325b8689f99",
+    "1b47d758-678d-44bf-8fe4-e432618b6282",
+    "2ccbad8c-b6ce-4092-b56e-67556e19834e",
+    "dc0be7cc-c8a7-4197-9498-b80b0af2293f",
+    "95b21335-9403-4491-b07e-dc7aa7b4831b",
+    "1f9fa735-a6ff-481c-aa72-0d824660dd36",
+    "0f57d9f2-b687-4a7a-839f-8ea642c1b34e",
+    "668439ae-81b2-4f07-802c-4c2dc2109a31",
+    "9cbf50b4-1237-47a4-affa-332d83ada494",
+    "61f6ec91-aac3-4211-bd15-f6e85e3800bd",
+    "ffc132d9-6f51-4100-8de8-ffd44f07bb1f",
+    "e9ba7138-c112-4ffc-9a49-58cc79ca97ba",
+    "1e03f644-396f-42ba-addb-3b1dbf2a513c",
+    "8f01a708-e394-40c0-8c97-48c93124fe27",
+    "e250707e-beee-4f50-a9f4-01ea03186929",
+    "78823d5c-e17f-4f51-a648-a77626259cdd",
+    "462b6820-aaf3-4cac-8a24-c961e2eb57b0",
+    "1fb18673-c269-41dc-9588-2adc35ebdc53",
+    "36d2d68c-71da-44ba-8421-b7e57e34bb07"
+  ],
+  "aggregationResults": [],
+  "total": 24
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-367ecf41-f124-4652-bb7d-464b3789aefd.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-367ecf41-f124-4652-bb7d-464b3789aefd.json
new file mode 100644
index 0000000..5bc7ad2
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-367ecf41-f124-4652-bb7d-464b3789aefd.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e3bf5e62-9eae-449f-a777-175e1def8b80",
+    "5bdac465-4c43-4d58-88be-5f83a2ab2f43",
+    "aa76e519-6aed-470c-87d5-00d28fc8e5d1",
+    "32002064-7d3d-4cbd-9a52-a9bcf3c61448",
+    "ee43e779-ef6a-44e0-b390-b27a73e3a8f0",
+    "a69f0451-9638-486c-ae55-4a0c382e13f3",
+    "cd72e8a3-07a7-4f90-924b-704d275dd197",
+    "0a65cca9-fcff-423f-8bef-a4ce66aaece8",
+    "df813a44-8057-4304-bb08-71a3547bbf3c",
+    "5d6c4bdb-7e33-4f83-a09a-94729a73628f",
+    "0f57d9f2-b687-4a7a-839f-8ea642c1b34e",
+    "a246b542-87de-4c11-af6b-ef6c87c04b25",
+    "746dc4dd-7b22-4777-b34c-0430315bfed9",
+    "9bf37264-5772-454c-9406-b7d220a8c5cd",
+    "3ab63431-c603-4693-ab9e-e6d58148df7d",
+    "1f0a5f7e-8858-40e9-a779-303422f6d7be",
+    "f877266a-4d95-45dd-ade4-8ac248a52dbc"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-3815e8d7-e5f2-4399-a761-9ceaed565257.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-3815e8d7-e5f2-4399-a761-9ceaed565257.json
new file mode 100644
index 0000000..6b7ad51
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-3815e8d7-e5f2-4399-a761-9ceaed565257.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "a28988ab-b85c-4c07-9465-49a32a3bb34c",
+    "3a6b159d-905d-4d63-a623-e85ad03ce964",
+    "18cdf4a8-a6b4-44b4-89dc-e787ec8e1bd6",
+    "2f4720a8-875b-4980-9d14-54ec2d54b435",
+    "2ad5c149-4539-4f0e-8a36-4f6bae9540a2",
+    "f8fcb6f0-1d50-4de7-a0f2-040c1d8d295b",
+    "3ee3ee0f-f0d2-4a1f-acb6-151b633296e3",
+    "499b8f7f-007a-473e-900d-a641445ba1b7",
+    "477de7da-a3e1-4c46-9e3a-5952af73e44b",
+    "897ef5d0-a209-49ee-909d-489af1423e15",
+    "17c847ff-bdbb-4c2a-a00f-6043f22204a1",
+    "dedf24ff-d412-44f6-a7b7-009b7691f8f8",
+    "654f1d0e-1c4a-4b68-abf0-49f82690555a",
+    "68e07892-66d9-4e15-96b2-c169c270e81a",
+    "11442b43-4920-4104-a5a8-0dd806c70900",
+    "348cef4e-a2f3-4339-8fde-dd9b5434955b",
+    "e8325846-2c81-44bc-bffe-7be3e11b2fab"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-385ed123-6a39-46e5-984c-9704bcfd6494.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-385ed123-6a39-46e5-984c-9704bcfd6494.json
new file mode 100644
index 0000000..4c96df1
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-385ed123-6a39-46e5-984c-9704bcfd6494.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e6ebae0a-867e-4aa9-8449-45b425503ad7",
+    "62f5cbb8-df1e-4288-b8d7-b0a4eb141911",
+    "858e3b08-f5fa-44d3-9579-d31a1b37997e",
+    "6ad51635-0f9b-4f01-a6b2-7ce5c2e5dd2f",
+    "d6641250-13c6-4c2c-95e5-e04bfe2d7338",
+    "129aaae2-0713-4c89-a3f7-d4b8bd3b6e6c",
+    "668439ae-81b2-4f07-802c-4c2dc2109a31",
+    "6c04e02d-76c5-4a7e-a421-b4ad0efc3e3a",
+    "2e882951-6345-4584-92cc-bb496a0832a9",
+    "d5747412-75f3-43c2-9dd2-e82956c0f11c",
+    "aca8c73a-ed85-4cbd-8af9-9ea099791fbb",
+    "0b0d01f1-04bb-4024-aaf1-fd1a81b8315a",
+    "36d03792-4f52-4e05-af3d-2f1833d8a0f2",
+    "7b029780-64dc-4019-a040-ab21b1ac175e",
+    "6933a5d4-24ef-4705-a0e7-aaf627668d4e",
+    "781dbbf8-028b-401f-912a-ec0984a7e884",
+    "b087f212-0ed6-4b35-9650-bdc18e68b030"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-43d091fb-a648-40cc-ae10-9d9784c34524.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-43d091fb-a648-40cc-ae10-9d9784c34524.json
new file mode 100644
index 0000000..e5b640d
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-43d091fb-a648-40cc-ae10-9d9784c34524.json
@@ -0,0 +1,35 @@
+{
+  "type": "table",
+  "blockIds": [
+    "dfc56d92-0eb1-4da1-a9c4-7079b85a65c3",
+    "ec525e26-c898-49a5-b930-de3ab98eedb4",
+    "041482e3-a3a4-41c4-a30d-38f1621a45f8",
+    "040d887f-7e12-4041-85d0-2f01a651e4a6",
+    "4c6173b9-d127-48e5-b06c-5b1199e1b668",
+    "e8afe3d1-89bc-4304-99c3-1432ac893c35",
+    "7ed2188a-e376-45ad-b032-ce4b72129c6d",
+    "1cb564d0-2918-4625-8c82-1812df38e104",
+    "f5a4d04f-31e7-4d10-99f3-bd90b6fac5e8",
+    "f76af635-59d6-4321-a1a5-254314c82abf",
+    "0dbd808e-acde-46af-b341-c509726914bb",
+    "d6c06029-acde-44e1-836f-e1486ebede6e",
+    "5903bd9d-026a-41b2-ae39-58c7348a9167",
+    "65af3799-3b7e-4fc2-8dce-ba2c520f6bd6",
+    "5d07bfbd-fd51-4cab-867b-39d67061c193",
+    "453c7312-d23c-4a09-8f7f-019931287567",
+    "5267f716-9b46-4784-81cc-b6227f932ccb",
+    "60e2f725-8a98-4c9f-826f-5c989dee34e7",
+    "e652949a-bef8-43f1-baa9-2d760b23deb1",
+    "effaf7b4-d44f-4f76-87fb-ddb55e4f235d",
+    "4721be6b-2e37-484e-b7ab-78eda2ac1fc8",
+    "88e820c8-cf3a-483c-b70a-f95a1de175ba",
+    "36249588-5867-4eab-a5d8-44479a1d7531",
+    "fb7e8bc2-1c6c-4bb9-8417-f3f35ec81c40",
+    "f3f7f355-52a9-4931-b7d2-19b637b6ed02",
+    "bad715e5-9ed4-4105-894a-54dbb9cb6731",
+    "4eb264b8-df87-49f0-a0d1-af56908d0bb5",
+    "766b743c-1aa6-468f-b94c-a8d78c27d78e"
+  ],
+  "aggregationResults": [],
+  "total": 28
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-448a76b8-847d-4a40-a494-9a6da9c41a58.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-448a76b8-847d-4a40-a494-9a6da9c41a58.json
new file mode 100644
index 0000000..a09da49
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-448a76b8-847d-4a40-a494-9a6da9c41a58.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "a9747787-f2d7-48e0-ac80-2ca1c2bec19e",
+    "f40275d2-3c48-49ab-82f7-8f4032e95452",
+    "217469c1-0a42-4f90-a2c7-3aed5ac01ac2",
+    "622e9abf-ca89-4a64-a43f-7633f2bcc157",
+    "56e9c69a-5b13-4de4-ac7d-97e28f43a907",
+    "2e35e5fd-1f19-4832-a717-e9d0217e0902",
+    "8af58cfe-b746-4dc0-9dec-35824c67dcda",
+    "d82575ca-95bd-4bd1-b430-e3af06d1cc57",
+    "5426599c-94a1-4306-a35f-a07a5c0d19eb",
+    "3d2134ed-9279-4195-876d-cb645a6870a8",
+    "a8a84326-0219-43b1-ba4e-53c655c76ef9",
+    "462b6820-aaf3-4cac-8a24-c961e2eb57b0",
+    "2650a90e-d204-4817-b86a-f96156bc42d7",
+    "f5dde43e-3ff4-4643-9ceb-0277ae7e6428",
+    "91a215b7-d355-4eb1-b57c-3587c98e2625",
+    "1fc82e99-08b1-4275-8c3b-cf75f9d9a3c1",
+    "c48d4fad-35e3-4c51-be9b-620c0203d6c0"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-52718a79-d339-4d26-873f-734004af8823.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-52718a79-d339-4d26-873f-734004af8823.json
new file mode 100644
index 0000000..31197f5
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-52718a79-d339-4d26-873f-734004af8823.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "dcc5756d-5f36-4119-bb6f-f70674e57ed4",
+    "785631ae-a5a8-4d2c-9ce6-0fafb6c0930a",
+    "33074977-d5e8-40aa-8cdb-8e7f82ba3bf2",
+    "bc125aeb-c287-4282-a196-d34cb432298e",
+    "57e1309d-433d-4356-a397-c6ffcb3038b5",
+    "35f647fc-94d3-41e9-9f6a-8bd6a11cad7e",
+    "54aa4736-d952-4873-a1c0-eb3a9985a9b3",
+    "ca9d5f4e-54b2-4a92-80bc-c943eff69f20",
+    "e0019987-0da1-43d0-8dd9-eef326282b49",
+    "98244082-609b-4e4c-82f4-3c5a62446688",
+    "699cc67e-a9fc-4cbb-a264-bac18dc422f2",
+    "5957ea43-6466-4016-b68c-6c2ee342c0dd",
+    "88fe3c43-ec2b-4804-b8ee-a6e085536b85",
+    "78823d5c-e17f-4f51-a648-a77626259cdd",
+    "e4a178c4-0d0d-4c5d-9f90-ed16b53c60fa",
+    "bd458279-307c-4a15-8838-42e6cfa7ffee",
+    "2758897b-91e1-41f1-8360-ad7872e8c15b"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5662c1f4-a011-4629-9616-3a2d53f6c9af.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5662c1f4-a011-4629-9616-3a2d53f6c9af.json
new file mode 100644
index 0000000..6f78c50
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5662c1f4-a011-4629-9616-3a2d53f6c9af.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "06e60f3a-dd9c-4934-986b-68c18987dac1",
+    "378291b3-7b98-4444-98df-07af3a99989a",
+    "461091f8-f1f0-4e99-b969-a7e1e9b6ae3c",
+    "8854951b-0821-4239-a8a4-82ec6c764c9e",
+    "f506dae2-41fe-4c07-81ce-452ef509aee5",
+    "b49c42f5-fe7c-4c23-aa9a-ebdd7cb4822d",
+    "331608be-0978-4f03-88f6-c74118a5538c",
+    "b8dcb266-39f8-418e-95e4-37dc9b183b3b",
+    "5903bd9d-026a-41b2-ae39-58c7348a9167",
+    "5267f716-9b46-4784-81cc-b6227f932ccb",
+    "9eabc0da-62ca-4263-9b37-237fc821d42e",
+    "873b6533-79bf-4331-ace1-1c6d51fc9872",
+    "676a23d9-5b72-4846-8a39-d5ec6893fda0",
+    "1c4af320-8de1-4fb8-a0ed-3e3998023c85",
+    "c502ac7c-4f87-4dc1-b0a5-8eacba5ce865",
+    "32c355a9-ad70-4738-b27e-19357a1c59f7",
+    "8a87d4a3-ddb0-47f1-9346-488e0dd7ee70"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5742eaed-3c36-495a-bde5-7d33cba0ddb5.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5742eaed-3c36-495a-bde5-7d33cba0ddb5.json
new file mode 100644
index 0000000..77c100d
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5742eaed-3c36-495a-bde5-7d33cba0ddb5.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "4fe48fff-7247-4872-9df0-0ae1bd512e7b",
+    "fbfc7c0a-46e6-410a-b7c6-8d4efcd2b97e",
+    "b8b5853c-f8ef-41b2-92cb-fca80e9531c4",
+    "c7047621-214e-4bc0-9a23-12fcf26a11e0",
+    "aff15622-7df6-4978-b040-d9cb89dc270d",
+    "9daa69f7-d373-4155-bcdd-21039929c55b",
+    "8a3b0b94-7551-4836-af16-00e8babf7ad5",
+    "c0cf46e3-3c12-49f1-a8fd-eeb01d715a38",
+    "860c5666-66ec-4c82-94e2-650df0525be8",
+    "8b9e79af-0a4b-4372-90a1-be49cb02dbd7",
+    "d905c027-6f15-4b54-a3ac-f5b89e9baf6b",
+    "ba1e1e72-dd81-4ca3-a042-832d08c0db64",
+    "d068369f-757a-4365-b78e-6bea4a7f929f",
+    "78fc64d5-8a93-4458-b31d-8783a08480a6",
+    "ddc12215-3538-4fab-8847-eb7b9ee906e2",
+    "052887bd-7623-4b48-b5ec-84c646a1cf1b",
+    "bebb6cc0-96b0-4123-a8fc-b98faa4ad5ca"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-59a7246f-e923-4faf-9246-75851294365b.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-59a7246f-e923-4faf-9246-75851294365b.json
new file mode 100644
index 0000000..68785a7
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-59a7246f-e923-4faf-9246-75851294365b.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e744573e-3e3e-4d72-bf70-abc408a988f7",
+    "5ed8919b-a754-4695-a071-afffff2470b9",
+    "041482e3-a3a4-41c4-a30d-38f1621a45f8",
+    "4637d950-fddd-46ff-831e-9641df3253cd",
+    "7be223f5-d93c-4536-b450-bcff98b777c5",
+    "8a9f4000-5840-4726-b31d-566ba40d3f44",
+    "93ee0f76-145b-4283-906b-bc6e1f9d74cc",
+    "cc7e9314-8d65-45f4-9f9b-f71626c610ba",
+    "a26cf209-469d-42db-a726-c9d7ec8f809a",
+    "8c4ed0e2-57f4-44c0-908c-45118a267a8c",
+    "1b3f747d-80d4-484c-90e1-e1d56b7bd3f6",
+    "28141942-a4be-4bab-a43b-da51ff36d8b3",
+    "9cc65a75-21a0-4c68-a6bf-da9291bde225",
+    "17ce2264-a0bc-4cd7-a1b4-4c4fe0dfc746",
+    "bfd3f7a1-c119-45d2-acd3-77f5eea0e16f",
+    "9ef5a892-bb30-4ce2-a124-af0a4ce308ee"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5ae81e49-33ad-47bf-9c14-14adb9145b4d.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5ae81e49-33ad-47bf-9c14-14adb9145b4d.json
new file mode 100644
index 0000000..80df769
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5ae81e49-33ad-47bf-9c14-14adb9145b4d.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "81e021ae-d175-4d6c-aeeb-c934ac0b3ac6",
+    "caed86cc-1745-4629-bc35-6387d012efc4",
+    "a653ae64-a4d3-464e-bf8c-9f5acf9eeb97",
+    "bf120f14-3973-44be-aa6e-57e9fd7f99f0",
+    "28cf85e8-77d6-4ab2-8ce0-b8879dcf2525",
+    "fac1d890-740a-4c57-bfd6-4612ec1e18cc",
+    "02bbf5ab-e2c7-48f5-b782-145a5f1551e5",
+    "5d07bfbd-fd51-4cab-867b-39d67061c193",
+    "5049a1e2-4929-46f6-9fed-f36956469df6",
+    "4fc14aba-c8c2-4fc6-ab5a-706f9e5722b9",
+    "55e81f47-1606-46be-8164-ca014eeca0f1",
+    "c3d50be3-8ba7-4a1b-a341-cc096ed6130e",
+    "203c29af-2b16-43cb-a846-db74eced0a3f",
+    "6c670f9d-c383-46c8-8bf8-6b9998d8c93b",
+    "58cc0600-d996-4946-b575-8d1891efba85",
+    "9a266d39-ce62-49b0-8715-84afb16f6a41"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5c20b593-23d4-4884-9102-3ef3b1049273.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5c20b593-23d4-4884-9102-3ef3b1049273.json
new file mode 100644
index 0000000..14b9797
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-5c20b593-23d4-4884-9102-3ef3b1049273.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "d75a9827-3ec6-4943-b361-10b8c4821ff1",
+    "159ba45a-670d-4a0d-bfd2-d54146e72740",
+    "28c7d311-d951-42cc-9723-439f68448bff",
+    "6d1d75e9-3195-45d2-9016-6a14f3882ef4",
+    "c936e013-e4b8-491b-b3c0-4111619bb0c4",
+    "f16c45fe-f2c8-45a7-b181-d64605bd5840",
+    "95a2889c-1a7d-406f-917c-8d9794314c0a",
+    "d6c06029-acde-44e1-836f-e1486ebede6e",
+    "bf1b7e65-98ef-4af1-aaf3-9e345ffab9f7",
+    "d3981dcf-4829-49f5-9a51-b88a202b91a4",
+    "6930de26-1600-4bc9-ba77-6ee56e13a6d1",
+    "af6fed24-d7a7-4279-a371-141b916f29c9",
+    "e6349b92-5944-4be7-8a47-5851f4d19d09",
+    "36249588-5867-4eab-a5d8-44479a1d7531",
+    "97b68898-a0a4-447c-b144-5ccb91a8684e",
+    "bacd4cb0-8b58-480f-88d1-fd4f92e43660",
+    "390c32a6-f4b5-4120-84a3-d1a85c88c18c"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-63717bf3-3af6-4112-989d-acbe665ccf91.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-63717bf3-3af6-4112-989d-acbe665ccf91.json
new file mode 100644
index 0000000..8c3319d
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-63717bf3-3af6-4112-989d-acbe665ccf91.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "0b0bc477-fe3c-46d9-8b4d-0558d052ad35",
+    "65d84d86-39bb-4171-af71-05f99707bf85",
+    "e1aaa0d5-73e4-419d-b5d6-e414ba0d4e55",
+    "5994f819-887e-4e3e-b7dc-0095f0b4df7d",
+    "07238e54-8e66-44a7-8a1e-116238320caa",
+    "e9fa60a7-3b95-44bd-bcb3-398227dc0d93",
+    "ae1d419b-7091-4caa-a158-dfe922433575",
+    "053abff1-2986-4ff9-ba0d-dc3d9eca8a73",
+    "19b92c37-9784-4471-b973-0e3953433fe5",
+    "cb9d9d33-235b-48ed-aee1-94f4d2874e30",
+    "8fe0836e-7ac1-41c3-904c-12b8d6b72f1a",
+    "de516906-d101-485a-bdcc-aa11b932ec87",
+    "e1986719-1c20-431a-9c69-292a98a2f986",
+    "7a9eb58b-4c83-4418-a5c5-702993da5eca",
+    "7f32bc1b-7598-47d2-88ed-692d1cdf2f1a",
+    "49b2b551-8b85-4bdb-bd0b-484a068b29c3",
+    "d1e18c54-56d4-448d-8693-0ab2b32b69b3"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-693b4304-0bbd-4f9a-85f1-7c9cb1768110.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-693b4304-0bbd-4f9a-85f1-7c9cb1768110.json
new file mode 100644
index 0000000..cff2e42
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-693b4304-0bbd-4f9a-85f1-7c9cb1768110.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "14861372-4966-4bd2-9241-15eb54af1740",
+    "5a380378-ae79-4be5-b887-dbda78444d9d",
+    "b377bc3f-7e1a-438f-8a51-39ba81453826",
+    "df11c1c9-550e-4b70-817f-b4762579fb7d",
+    "c61dd34c-5c34-4f5c-bec5-f16ed5b89cb0",
+    "fb6f0fae-aa51-423b-8118-655f91b2a171",
+    "3cb90950-bff5-4557-951a-090990a2c8f9",
+    "f006a1e4-3bdb-4882-a640-db64b88f00c0",
+    "139ac7d7-30d5-4b5e-9393-7a282d8ff635",
+    "21ba0c99-00bd-4ff2-b3bb-ddbebdda399d",
+    "3aeabcf7-fb3e-4849-b1b0-72072f05e2cb",
+    "e9ba7138-c112-4ffc-9a49-58cc79ca97ba",
+    "34dd9fa6-aa50-456d-bb01-971c18c127fc",
+    "8f01a708-e394-40c0-8c97-48c93124fe27",
+    "8c33dcb8-abfd-480a-85fb-06b75799b9f2",
+    "73e3c5c0-0dc9-4cbe-b7fe-afa40d33a550"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-7687ad1f-ccbe-4abb-8e95-a3685543aefe.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-7687ad1f-ccbe-4abb-8e95-a3685543aefe.json
new file mode 100644
index 0000000..dc2068d
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-7687ad1f-ccbe-4abb-8e95-a3685543aefe.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e5fa63eb-9a90-4393-9559-6d468a45713b",
+    "9afef1ef-b1eb-4afa-bc0a-a529bd0980e5",
+    "d26aeb07-2605-4293-9b12-38ebd8a4453e",
+    "d2637657-3107-4ac0-ac4d-b86b1d112ae4",
+    "1ac05e78-817b-4def-be68-e4abf9931099",
+    "a0a1cd9a-71bf-409d-8633-691ed657b5af",
+    "2cc221c5-bad1-4d70-8fca-6dbaa28ef17d",
+    "f4edd0e8-9106-46e1-a983-a390ce26a67c",
+    "2ccbad8c-b6ce-4092-b56e-67556e19834e",
+    "95b21335-9403-4491-b07e-dc7aa7b4831b",
+    "bd3fad3d-eb60-4523-a725-3ec994b96165",
+    "60e2f725-8a98-4c9f-826f-5c989dee34e7",
+    "aadd128a-2301-4371-82fc-745b7f12d65b",
+    "ffc132d9-6f51-4100-8de8-ffd44f07bb1f",
+    "e250707e-beee-4f50-a9f4-01ea03186929",
+    "0240087b-223d-4c18-aa50-87e72836565b",
+    "1fb18673-c269-41dc-9588-2adc35ebdc53"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-85e4d626-09cc-45f6-9a28-07d5d490ca1d.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-85e4d626-09cc-45f6-9a28-07d5d490ca1d.json
new file mode 100644
index 0000000..2922130
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-85e4d626-09cc-45f6-9a28-07d5d490ca1d.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e47dfd5d-eff8-443f-997e-d4f87df4eba3",
+    "0cf08062-1177-4438-95ca-f08ffa08f68b",
+    "712feb1b-3340-4276-9d72-1cbb957b12d2",
+    "8fcd3b85-515b-4f64-b56c-0bfa25378c1f",
+    "923fddb3-f155-4ed0-8f73-4b35f548313a",
+    "bf7af6a2-79f0-44f0-9355-0099157e7883",
+    "4c6173b9-d127-48e5-b06c-5b1199e1b668",
+    "ef13dd90-81d0-4e13-917e-28cf366213b1",
+    "e8afe3d1-89bc-4304-99c3-1432ac893c35",
+    "50395c04-2584-4a35-b3eb-f1057fdb5d3a",
+    "b27d3c7b-dfaa-4ca3-8a58-76a71d4e1249",
+    "5f7db689-4d74-4a04-9feb-0fb1318a5793",
+    "6d2cd5e5-cdd1-46d8-ad7f-ecca8a67c563",
+    "eef49b94-5e83-4f4d-89cc-be1f3fc51194",
+    "f1740d6e-aecc-46b8-9593-c03ac98428c2",
+    "50988a22-3fc1-4cfa-9bcf-f53225e12ee5",
+    "fb7e8bc2-1c6c-4bb9-8417-f3f35ec81c40"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-93fe8a38-e32b-4c6a-87f2-03f1a438de75.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-93fe8a38-e32b-4c6a-87f2-03f1a438de75.json
new file mode 100644
index 0000000..c750d9c
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-93fe8a38-e32b-4c6a-87f2-03f1a438de75.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "116d9fd5-23d5-4b40-a5f5-4d17c3ec4878",
+    "d7574446-5fef-4bd3-aabb-1efb11d790b1",
+    "1145281e-c801-4d5a-85e6-a65edc2f76f0",
+    "b7cdb0ca-34e3-456a-bb24-4f63f04627fe",
+    "5dcbf508-1f19-4ae5-9993-3f0e8876681b",
+    "31d71a35-0697-4d79-9788-0a0aece5a9f1",
+    "aa37a93c-ecad-45a1-90d5-3df954c7fa40",
+    "d6a07a3a-00c3-4513-94ee-ac54b428377b",
+    "e55031d0-8855-4f6c-a937-e9e55cb665b9",
+    "a5611170-3b44-4d9b-aae5-9d7002b673cf",
+    "73d4b541-7a47-4205-a96d-6776f8eefec6",
+    "947682f7-7e61-4583-a0f4-70280db629f0",
+    "d7a971e2-2ae6-43ce-ba54-8356afc680b9",
+    "6cb98fa9-927a-42db-a7df-665020bcb456",
+    "4aee59ce-3c76-4cb5-b720-545266a1a1f2",
+    "e708b1da-967c-4d68-a6d6-a5987b5c83b3",
+    "0763d43d-70c9-4ad4-ada5-cb0374b8d730"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-99cd3dfb-97fb-493d-bfaa-518bd872dda4.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-99cd3dfb-97fb-493d-bfaa-518bd872dda4.json
new file mode 100644
index 0000000..2e61450
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-99cd3dfb-97fb-493d-bfaa-518bd872dda4.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "d389225d-1ed7-4234-a83d-85eb3ed46c33",
+    "3cf9537e-e47c-456a-9cfb-1f6fbecc49b6",
+    "672ab20d-33c3-4863-b94a-a20b4191f9d2",
+    "af584923-1332-4b4a-b6a0-d1edd5dea6a9",
+    "163d744c-1fd0-4207-ae19-b1d8d6d4aecb",
+    "6db88bd8-fcfa-4409-8260-9192d26e4596",
+    "1cb564d0-2918-4625-8c82-1812df38e104",
+    "f5a4d04f-31e7-4d10-99f3-bd90b6fac5e8",
+    "be8a710a-78fc-400f-8852-72f976b04b4a",
+    "8812937a-7b9f-4e59-92dd-72d80b0f0150",
+    "fef63b45-91ec-47d5-bd32-27d27dab419f",
+    "f2c125eb-97d0-40fa-b147-d325b8689f99",
+    "1b47d758-678d-44bf-8fe4-e432618b6282",
+    "31dd97fd-a0a6-41e1-83b9-f2fb91c58550",
+    "91bd4399-4e91-418c-9906-b360a4a32107",
+    "db375bde-34fb-44ea-a3f2-75e41fa92e93",
+    "033f25e6-a8f6-4ba7-8b56-508e95be5f15"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-9a43758f-21c5-4fc2-a4b5-0fc82971b79f.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-9a43758f-21c5-4fc2-a4b5-0fc82971b79f.json
new file mode 100644
index 0000000..96062ac
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-9a43758f-21c5-4fc2-a4b5-0fc82971b79f.json
@@ -0,0 +1,21 @@
+{
+  "type": "table",
+  "blockIds": [
+    "3cf9537e-e47c-456a-9cfb-1f6fbecc49b6",
+    "3a6b159d-905d-4d63-a623-e85ad03ce964",
+    "6d1d75e9-3195-45d2-9016-6a14f3882ef4",
+    "5a380378-ae79-4be5-b887-dbda78444d9d",
+    "f8fcb6f0-1d50-4de7-a0f2-040c1d8d295b",
+    "f16c45fe-f2c8-45a7-b181-d64605bd5840",
+    "b27d3c7b-dfaa-4ca3-8a58-76a71d4e1249",
+    "28cf85e8-77d6-4ab2-8ce0-b8879dcf2525",
+    "1893193b-bdb6-4531-9fee-d9f4405e94df",
+    "8c4ed0e2-57f4-44c0-908c-45118a267a8c",
+    "abb057ce-1ce2-4534-b5dc-dd7abc27fa72",
+    "081f52dc-abad-4119-b79e-94b155327d62",
+    "781dbbf8-028b-401f-912a-ec0984a7e884",
+    "0a9655db-94cf-4b07-8414-18b2c12b1f88"
+  ],
+  "aggregationResults": [],
+  "total": 14
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-9fdf39a1-64c3-464c-a4c9-f3e4d9a9aa2c.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-9fdf39a1-64c3-464c-a4c9-f3e4d9a9aa2c.json
new file mode 100644
index 0000000..7347155
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-9fdf39a1-64c3-464c-a4c9-f3e4d9a9aa2c.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "bade9948-e8d0-4706-b135-f4ac402f363c",
+    "8bc1f4f2-8efb-4056-9253-a2cd313a0664",
+    "5e418731-93cc-4256-a193-4e4b6e0a8a50",
+    "618353f9-1dcb-4894-bda3-a95780ef9897",
+    "b1ed6778-ccb0-461e-917c-ddd64e0af148",
+    "eb0bea4e-81dd-4de2-8266-6956bccdc212",
+    "1999a4fd-f30c-44b6-8bad-002af81dda68",
+    "dc0be7cc-c8a7-4197-9498-b80b0af2293f",
+    "4fe86627-1790-4a53-9351-810fec002c5e",
+    "4f3a36b3-1817-4451-a692-73e6d2d9566f",
+    "726b87b3-bc9d-4af4-a804-03f1be3340fd",
+    "56aaad71-3013-4c49-b37c-5c227c79f299",
+    "8fade8ad-a605-41ba-9652-57e4b064d0ff",
+    "f41fccaf-fdaa-4baa-8696-31b6ecad12f7",
+    "081f52dc-abad-4119-b79e-94b155327d62",
+    "b40cda73-b89a-44fc-8840-78aff8792427",
+    "f10dbc1a-5366-4da7-b41c-5c1bae52d817"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-ab6c9a56-5322-4bd1-a384-7797a81478c5.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-ab6c9a56-5322-4bd1-a384-7797a81478c5.json
new file mode 100644
index 0000000..cacedfb
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-ab6c9a56-5322-4bd1-a384-7797a81478c5.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "44bad171-b4ac-44b9-ad58-b83c95efc455",
+    "680ce12f-b1a1-4696-ae20-c9d20a36fb8a",
+    "dcda924e-8b52-4461-ab5a-6593ced99dba",
+    "d814bdb7-8fe8-497d-bdfd-11c32736b4bd",
+    "1ef2791e-d8a4-4234-8327-ba0bc066bf66",
+    "9fb342a5-281b-43ca-9ef6-0b5c5c1ee2ed",
+    "a1bed86a-7bef-46d5-9932-4e94c8c092ba",
+    "1893193b-bdb6-4531-9fee-d9f4405e94df",
+    "bfcfc733-44f6-43fe-bcae-43a436947aec",
+    "1df0cb61-e72f-45de-9778-f17a6a7faa02",
+    "db5379f5-87e9-48b7-969d-4b82c1ce174e",
+    "c2825fad-7403-4f4a-b251-302fca95954d",
+    "4f674cd3-80df-4dc7-b882-75f5f181cabb",
+    "eb6703eb-70ff-4d7b-abd0-925e1531a77a",
+    "48bda606-dc77-4e13-836e-c3e32ede5922",
+    "1eda32b5-dbb0-4f9c-b4b7-916beb8644df",
+    "5d092eea-2814-4a33-bcd7-2077b149b831"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-b6c6b669-659e-4487-8d48-8a538b8a0d82.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-b6c6b669-659e-4487-8d48-8a538b8a0d82.json
new file mode 100644
index 0000000..535d9e0
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-b6c6b669-659e-4487-8d48-8a538b8a0d82.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "50bcbdc0-0f62-4d11-9b8d-1acfb33064c9",
+    "ae68ad50-b170-4e2e-8913-a9fba4fb6685",
+    "578d7618-26a6-41b7-9593-9d43efca2816",
+    "3399ed56-0507-4e71-a964-6e59e87c24af",
+    "5bbd362c-20d8-444f-ba64-e7db752bee6e",
+    "6b38233e-c62f-4ce8-b959-26256e77246a",
+    "d4ef28bc-ceec-46b1-ac94-d83d05008953",
+    "ba8bccf0-3f72-4999-81de-654f8f521c83",
+    "d450c617-527a-4b42-9d5b-425b0fe6cb24",
+    "e82bcf69-7ab8-4716-962a-a990a1320c68",
+    "48ffab96-cf5f-4e84-8491-a6939e631a24",
+    "57a4a7a7-6c0b-4024-b4e0-77698d8e9d42",
+    "88e820c8-cf3a-483c-b70a-f95a1de175ba",
+    "58a92c7b-b52a-4547-8f3d-a4250ff3416a",
+    "caf05638-c338-45e2-8708-69d11382e16e",
+    "c4a83c17-fc38-4e08-8edc-97d2fb8112c4",
+    "001a3b09-88e9-4a6a-8c90-e524a04c2f27"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-bd226193-3647-4ed1-bbe3-a5baa69954c7.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-bd226193-3647-4ed1-bbe3-a5baa69954c7.json
new file mode 100644
index 0000000..4f27539
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-bd226193-3647-4ed1-bbe3-a5baa69954c7.json
@@ -0,0 +1,26 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e93ad1c5-28f0-414d-bf38-2ee4942a179b",
+    "cab48d12-642c-4cfe-ab61-140357800313",
+    "ae647d94-0c24-43fe-9863-2735765193d0",
+    "db67ff57-37ad-49aa-9acb-928996d16aca",
+    "6f337686-c8a2-466f-ace0-ffd050d3ae1f",
+    "f17e0ebf-c690-4fbe-9aef-32f7c1e0242d",
+    "36ad2e36-890c-4263-bb06-57882acb8e92",
+    "be887255-8a1b-4de8-b2dc-fe62d4970276",
+    "4aa98c40-1dc2-4545-bdb0-116cbd4f8ece",
+    "dc108e7a-8ec5-4f1f-bca4-87060b5dd29c",
+    "f5401633-95dc-4884-b5be-f2ff895e2930",
+    "bc2c88f9-b011-4e06-a493-d8ef870b3b00",
+    "c6932a55-2df4-4c14-ae50-78a45e6e847c",
+    "60bfa5fc-f2f6-4af2-bcec-eee315cad899",
+    "3fc9c51e-1ae8-48de-90b3-2a8ebccdb3d8",
+    "36030fb8-b864-4f8e-a81e-27086d8c4b42",
+    "22e7dc5f-a5e3-40cf-87c4-762a57a2ef55",
+    "4eb264b8-df87-49f0-a0d1-af56908d0bb5",
+    "f5dc3f45-5d23-4d42-8132-2230fd5d354c"
+  ],
+  "aggregationResults": [],
+  "total": 19
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-bdc489ac-13dd-46bd-97f9-86866d76bc43.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-bdc489ac-13dd-46bd-97f9-86866d76bc43.json
new file mode 100644
index 0000000..df56dd0
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-bdc489ac-13dd-46bd-97f9-86866d76bc43.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "15e5035e-396a-4822-a510-e1a6f42f959a",
+    "458a640c-0440-4bab-800d-6addb1fce4a2",
+    "81c1ea34-eeca-446f-b042-3a4ed41702f6",
+    "83d039b4-d75b-433b-bf0a-6abb0d42d7ab",
+    "6c51dece-aadc-4e2a-8426-17f693128f0a",
+    "e26d6bd2-6f2a-480d-913d-2ecd6efc4c03",
+    "99936274-2eae-4def-92f6-34b46649dbd3",
+    "39615d67-a5ba-4766-b1de-d5f2ccb262be",
+    "9a3b3071-f994-4fd2-8e31-495d87617b8d",
+    "46912a1e-c529-40e6-a4eb-e9e33af9eab8",
+    "eb058479-abe5-4bef-ab45-fd8a02417c57",
+    "6fe85469-68e9-4444-8159-f1e7bc54b77b",
+    "9b8b837a-085e-4840-a3b0-a669167f7268",
+    "25ebb018-1bf8-438a-9ba0-c16c033d527f",
+    "f3f7f355-52a9-4931-b7d2-19b637b6ed02",
+    "ed8a572f-f2d0-460a-89d3-d475f33c5974",
+    "427341bc-79a3-4ec5-8987-a91dbd65e041"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c14e33fe-19d2-4266-a935-0ef6528a77ff.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c14e33fe-19d2-4266-a935-0ef6528a77ff.json
new file mode 100644
index 0000000..2853248
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c14e33fe-19d2-4266-a935-0ef6528a77ff.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "4b63e868-7277-40ed-b830-7d72d5bccf41",
+    "065d7fa4-c7d0-45b7-a95f-5535e48c7ff3",
+    "f3c1f8ce-34d0-4816-ac70-bf77c0739c25",
+    "ec525e26-c898-49a5-b930-de3ab98eedb4",
+    "59da3e17-f388-428d-a7a5-ed4ffdf2863f",
+    "235ee243-e12e-4d0c-b044-5ae62d261fe4",
+    "7ba6a6ed-f214-40c1-8031-ed5a7d4dc5ed",
+    "00d0e651-e8c0-4b15-a11d-2b68bceb9119",
+    "7578f7b0-914a-4f66-9251-367af2ba0325",
+    "9dedabed-701c-4b05-b317-4b6b75a2481f",
+    "465066e3-be56-4ce0-9482-92fc538e7693",
+    "21ee8a3d-77a0-4681-8d38-d68ab459596a",
+    "53eff952-0112-4c9c-b230-59cb09bd101f",
+    "f41f23d4-640f-4200-8567-c30a84548be8",
+    "caee42ee-0955-4621-85be-f98869854b5d",
+    "57f0d621-3035-4676-8e64-0bba57105ce3",
+    "db2d6578-3120-4987-ae63-c865722c5b32"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c34ab79e-df2d-4a6d-af71-8aef61a65aa7.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c34ab79e-df2d-4a6d-af71-8aef61a65aa7.json
new file mode 100644
index 0000000..de6cb4f
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c34ab79e-df2d-4a6d-af71-8aef61a65aa7.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "734f8ebc-e117-40d9-b39a-e46578ef805e",
+    "f14efca6-b40b-4411-8ceb-de5b87cb113c",
+    "0e968a69-2b1d-491b-903d-1a02946e6570",
+    "53452992-30fb-4120-b21a-db76e99ab839",
+    "7cfcaa96-bb56-4646-8bad-cc8fd58aea57",
+    "d539802b-e51c-4187-8061-b8b670f083a7",
+    "b0ead175-abb3-4fc1-9338-f7ef9c77036b",
+    "65af3799-3b7e-4fc2-8dce-ba2c520f6bd6",
+    "eeeca8b7-af12-487c-aaab-ab3fbbf6ab4c",
+    "95a42416-cc68-417c-abaf-0987a2eee8d4",
+    "8fa213b5-2031-48db-8da9-94dc34699fcb",
+    "e652949a-bef8-43f1-baa9-2d760b23deb1",
+    "5316faee-fcf7-4a48-a572-40c7e809cce1",
+    "c2e04e3d-74d3-47a0-b4ea-0c2bf58ebf2e",
+    "766b743c-1aa6-468f-b94c-a8d78c27d78e",
+    "0a9655db-94cf-4b07-8414-18b2c12b1f88",
+    "3aa043eb-2935-4ccb-b248-d13a97f305cd"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c69e1799-88cb-4135-a10d-1ec4617f0aa6.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c69e1799-88cb-4135-a10d-1ec4617f0aa6.json
new file mode 100644
index 0000000..e064246
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-c69e1799-88cb-4135-a10d-1ec4617f0aa6.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "c7ea3f1d-91de-451d-b271-271865442cc4",
+    "e79b8489-eca3-4c8e-ae2e-97fc6aa1f42a",
+    "64423602-a7b7-49f8-b986-6e26ec296044",
+    "7ed2188a-e376-45ad-b032-ce4b72129c6d",
+    "dfd8bd11-873c-4778-8e08-02e5e6b3b6a4",
+    "6160cdcc-b421-4bb8-b65d-2b47a89f59af",
+    "18155006-506b-4529-9ef2-0cd45a8426ac",
+    "f76af635-59d6-4321-a1a5-254314c82abf",
+    "d29887cc-0496-4f13-9780-2dec88465fd3",
+    "2c3c06fb-ba3d-4a58-8eba-4097a9011961",
+    "5ef2821b-a547-45d8-b1ba-fcebe8adacc1",
+    "4721be6b-2e37-484e-b7ab-78eda2ac1fc8",
+    "af144d64-bac6-47ad-afea-5353bd445047",
+    "1f0cc211-400a-4a31-bc20-ede8a7ee06ad",
+    "41edbc2a-e801-47df-8f51-7b26cfae051b",
+    "8b9c71b6-4a6c-4075-87a4-6878d3bdcb9f"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-cfe27a86-00d0-4322-b2db-2bc3e69269e2.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-cfe27a86-00d0-4322-b2db-2bc3e69269e2.json
new file mode 100644
index 0000000..f76817c
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-cfe27a86-00d0-4322-b2db-2bc3e69269e2.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "6e391c53-f569-4ecc-9447-45c3b5e81205",
+    "20e1fdd9-312b-466d-a1e9-96b88652fd7a",
+    "1d2cf72f-e1cc-4a26-bfd8-d37598b6bfa0",
+    "37532462-8d6d-4ffc-bea8-98b6643ee2e3",
+    "92079ec1-3110-4cd7-8ffa-e8500d5850d9",
+    "d4e42ee3-b07e-4f33-985d-72722f80714c",
+    "849aca7d-95ff-4a55-993b-545fbb024e9f",
+    "c8e4d0dd-a27d-4798-bb58-531102e03706",
+    "ac6f5d8c-83b8-40de-bd28-8f7fc4c0ef34",
+    "7f4b610d-8ccc-4a6e-859a-9af750ef197c",
+    "1f9fa735-a6ff-481c-aa72-0d824660dd36",
+    "3ef4ffb1-40dd-4c0d-9094-37c23c181c5f",
+    "9e01bab7-4ea9-4cc8-aca3-4b5588c9748b",
+    "ae9380a8-cd3f-407b-9547-969b65e0a936",
+    "02f0e434-bc26-41d3-85b6-3763ebf5508d",
+    "9c709e5e-f447-4c97-94e4-8abd9c61fb8b"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-d4102177-3cb3-4d36-8f39-92d84147f825.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-d4102177-3cb3-4d36-8f39-92d84147f825.json
new file mode 100644
index 0000000..40adf45
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-d4102177-3cb3-4d36-8f39-92d84147f825.json
@@ -0,0 +1,18 @@
+{
+  "type": "table",
+  "blockIds": [
+    "06e60f3a-dd9c-4934-986b-68c18987dac1",
+    "bade9948-e8d0-4706-b135-f4ac402f363c",
+    "20e1fdd9-312b-466d-a1e9-96b88652fd7a",
+    "1d2cf72f-e1cc-4a26-bfd8-d37598b6bfa0",
+    "0cf08062-1177-4438-95ca-f08ffa08f68b",
+    "b1ed6778-ccb0-461e-917c-ddd64e0af148",
+    "2cc221c5-bad1-4d70-8fca-6dbaa28ef17d",
+    "db375bde-34fb-44ea-a3f2-75e41fa92e93",
+    "203c29af-2b16-43cb-a846-db74eced0a3f",
+    "bd458279-307c-4a15-8838-42e6cfa7ffee",
+    "49b2b551-8b85-4bdb-bd0b-484a068b29c3"
+  ],
+  "aggregationResults": [],
+  "total": 11
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-d8f02741-e03a-4e40-91d7-0b821ee4014d.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-d8f02741-e03a-4e40-91d7-0b821ee4014d.json
new file mode 100644
index 0000000..8939e73
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-d8f02741-e03a-4e40-91d7-0b821ee4014d.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "dfc56d92-0eb1-4da1-a9c4-7079b85a65c3",
+    "d580b754-59c2-4d78-9d6b-85d50ef5a343",
+    "9c196736-4326-44e9-b2b4-0bb3ec87a7f4",
+    "03bc6e86-ad24-4535-8b67-bedf868ec936",
+    "0dbd808e-acde-46af-b341-c509726914bb",
+    "5b33f792-195a-44d2-9bd6-f6738ff1f432",
+    "1a04ee78-9062-4483-92f9-a812dca78f08",
+    "43f6ad58-8cc3-4875-8476-e8856727056c",
+    "badb5fbc-a2a3-4f65-af67-1a85e1acb1d9",
+    "0f6bf1b5-3152-4620-9ca6-c70cc9220146",
+    "26541856-88cd-47bb-9df1-af7ff478859d",
+    "95dd3862-b518-4055-85f2-40a89c0555c0",
+    "6eaab6b4-38bb-4f5b-bdd0-24f53f791cd6",
+    "4716d21c-42a7-43a0-a163-6efeb50b5e46",
+    "ef0f8cdf-1e74-412c-9a76-815ceadab388",
+    "36d2d68c-71da-44ba-8421-b7e57e34bb07"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-dac0d378-1774-47fc-a3a3-103ae120a3c1.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-dac0d378-1774-47fc-a3a3-103ae120a3c1.json
new file mode 100644
index 0000000..b87e962
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-dac0d378-1774-47fc-a3a3-103ae120a3c1.json
@@ -0,0 +1,24 @@
+{
+  "type": "table",
+  "blockIds": [
+    "67f33590-2cc2-4a1b-a5ad-5e065187934f",
+    "a2cead6d-b40d-4882-99a5-0770a22c618b",
+    "48fd037d-56f5-460a-b324-ad7d6cc07e45",
+    "262921ae-76f4-4f85-b88c-f5d7389788d2",
+    "a9d3d864-127d-44c1-86b3-4cc8dba3aacd",
+    "6cd139ad-3bb1-497d-9866-fb8d97486279",
+    "db024394-18b0-4b48-8ec6-c5dcbc623d36",
+    "dd379e8b-3896-41d4-95f8-fff5ab73de5c",
+    "61f6ec91-aac3-4211-bd15-f6e85e3800bd",
+    "07610753-46a4-4610-bc36-d250db60a35d",
+    "aa4fa68c-b98f-4838-9e6a-930d58ecac2d",
+    "c08a13b1-d7c5-4e78-94ef-8b149c4660a2",
+    "3e605533-879f-4167-972e-1454c44eb0fb",
+    "96406da9-b28b-4899-8885-9883f6909ed6",
+    "f6030e27-cb91-41ca-8379-8a1dac44ffb6",
+    "49f89791-85b4-4cd1-98f0-2219f96dfe7e",
+    "6c4293fd-e16e-4d5a-9171-b0a6f7e03998"
+  ],
+  "aggregationResults": [],
+  "total": 17
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e1c31992-ad30-4ab5-a497-c69fc579e2ec.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e1c31992-ad30-4ab5-a497-c69fc579e2ec.json
new file mode 100644
index 0000000..0bdf337
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e1c31992-ad30-4ab5-a497-c69fc579e2ec.json
@@ -0,0 +1,510 @@
+{
+  "type": "table",
+  "blockIds": [
+    "3aeabcf7-fb3e-4849-b1b0-72072f05e2cb",
+    "df11c1c9-550e-4b70-817f-b4762579fb7d",
+    "fb6f0fae-aa51-423b-8118-655f91b2a171",
+    "c61dd34c-5c34-4f5c-bec5-f16ed5b89cb0",
+    "8f01a708-e394-40c0-8c97-48c93124fe27",
+    "34dd9fa6-aa50-456d-bb01-971c18c127fc",
+    "21ba0c99-00bd-4ff2-b3bb-ddbebdda399d",
+    "139ac7d7-30d5-4b5e-9393-7a282d8ff635",
+    "f006a1e4-3bdb-4882-a640-db64b88f00c0",
+    "14861372-4966-4bd2-9241-15eb54af1740",
+    "8c33dcb8-abfd-480a-85fb-06b75799b9f2",
+    "e9ba7138-c112-4ffc-9a49-58cc79ca97ba",
+    "b377bc3f-7e1a-438f-8a51-39ba81453826",
+    "3cb90950-bff5-4557-951a-090990a2c8f9",
+    "73e3c5c0-0dc9-4cbe-b7fe-afa40d33a550",
+    "5a380378-ae79-4be5-b887-dbda78444d9d",
+    "91a215b7-d355-4eb1-b57c-3587c98e2625",
+    "f40275d2-3c48-49ab-82f7-8f4032e95452",
+    "2650a90e-d204-4817-b86a-f96156bc42d7",
+    "8af58cfe-b746-4dc0-9dec-35824c67dcda",
+    "56e9c69a-5b13-4de4-ac7d-97e28f43a907",
+    "c48d4fad-35e3-4c51-be9b-620c0203d6c0",
+    "622e9abf-ca89-4a64-a43f-7633f2bcc157",
+    "a9747787-f2d7-48e0-ac80-2ca1c2bec19e",
+    "462b6820-aaf3-4cac-8a24-c961e2eb57b0",
+    "f5dde43e-3ff4-4643-9ceb-0277ae7e6428",
+    "a8a84326-0219-43b1-ba4e-53c655c76ef9",
+    "2e35e5fd-1f19-4832-a717-e9d0217e0902",
+    "d82575ca-95bd-4bd1-b430-e3af06d1cc57",
+    "5426599c-94a1-4306-a35f-a07a5c0d19eb",
+    "217469c1-0a42-4f90-a2c7-3aed5ac01ac2",
+    "1fc82e99-08b1-4275-8c3b-cf75f9d9a3c1",
+    "3d2134ed-9279-4195-876d-cb645a6870a8",
+    "726b87b3-bc9d-4af4-a804-03f1be3340fd",
+    "f41fccaf-fdaa-4baa-8696-31b6ecad12f7",
+    "4fe86627-1790-4a53-9351-810fec002c5e",
+    "8fade8ad-a605-41ba-9652-57e4b064d0ff",
+    "f10dbc1a-5366-4da7-b41c-5c1bae52d817",
+    "eb0bea4e-81dd-4de2-8266-6956bccdc212",
+    "bade9948-e8d0-4706-b135-f4ac402f363c",
+    "1999a4fd-f30c-44b6-8bad-002af81dda68",
+    "b1ed6778-ccb0-461e-917c-ddd64e0af148",
+    "dc0be7cc-c8a7-4197-9498-b80b0af2293f",
+    "5e418731-93cc-4256-a193-4e4b6e0a8a50",
+    "4f3a36b3-1817-4451-a692-73e6d2d9566f",
+    "618353f9-1dcb-4894-bda3-a95780ef9897",
+    "b40cda73-b89a-44fc-8840-78aff8792427",
+    "081f52dc-abad-4119-b79e-94b155327d62",
+    "56aaad71-3013-4c49-b37c-5c227c79f299",
+    "8bc1f4f2-8efb-4056-9253-a2cd313a0664",
+    "0e968a69-2b1d-491b-903d-1a02946e6570",
+    "95a42416-cc68-417c-abaf-0987a2eee8d4",
+    "eeeca8b7-af12-487c-aaab-ab3fbbf6ab4c",
+    "3aa043eb-2935-4ccb-b248-d13a97f305cd",
+    "d539802b-e51c-4187-8061-b8b670f083a7",
+    "734f8ebc-e117-40d9-b39a-e46578ef805e",
+    "8fa213b5-2031-48db-8da9-94dc34699fcb",
+    "c2e04e3d-74d3-47a0-b4ea-0c2bf58ebf2e",
+    "e652949a-bef8-43f1-baa9-2d760b23deb1",
+    "0a9655db-94cf-4b07-8414-18b2c12b1f88",
+    "65af3799-3b7e-4fc2-8dce-ba2c520f6bd6",
+    "53452992-30fb-4120-b21a-db76e99ab839",
+    "f14efca6-b40b-4411-8ceb-de5b87cb113c",
+    "766b743c-1aa6-468f-b94c-a8d78c27d78e",
+    "7cfcaa96-bb56-4646-8bad-cc8fd58aea57",
+    "5316faee-fcf7-4a48-a572-40c7e809cce1",
+    "b0ead175-abb3-4fc1-9338-f7ef9c77036b",
+    "0b0d01f1-04bb-4024-aaf1-fd1a81b8315a",
+    "129aaae2-0713-4c89-a3f7-d4b8bd3b6e6c",
+    "781dbbf8-028b-401f-912a-ec0984a7e884",
+    "858e3b08-f5fa-44d3-9579-d31a1b37997e",
+    "6ad51635-0f9b-4f01-a6b2-7ce5c2e5dd2f",
+    "6933a5d4-24ef-4705-a0e7-aaf627668d4e",
+    "62f5cbb8-df1e-4288-b8d7-b0a4eb141911",
+    "aca8c73a-ed85-4cbd-8af9-9ea099791fbb",
+    "2e882951-6345-4584-92cc-bb496a0832a9",
+    "7b029780-64dc-4019-a040-ab21b1ac175e",
+    "6c04e02d-76c5-4a7e-a421-b4ad0efc3e3a",
+    "e6ebae0a-867e-4aa9-8449-45b425503ad7",
+    "d6641250-13c6-4c2c-95e5-e04bfe2d7338",
+    "b087f212-0ed6-4b35-9650-bdc18e68b030",
+    "36d03792-4f52-4e05-af3d-2f1833d8a0f2",
+    "668439ae-81b2-4f07-802c-4c2dc2109a31",
+    "d5747412-75f3-43c2-9dd2-e82956c0f11c",
+    "4fc14aba-c8c2-4fc6-ab5a-706f9e5722b9",
+    "9a266d39-ce62-49b0-8715-84afb16f6a41",
+    "5d07bfbd-fd51-4cab-867b-39d67061c193",
+    "55e81f47-1606-46be-8164-ca014eeca0f1",
+    "c3d50be3-8ba7-4a1b-a341-cc096ed6130e",
+    "a653ae64-a4d3-464e-bf8c-9f5acf9eeb97",
+    "bf120f14-3973-44be-aa6e-57e9fd7f99f0",
+    "6c670f9d-c383-46c8-8bf8-6b9998d8c93b",
+    "58cc0600-d996-4946-b575-8d1891efba85",
+    "28cf85e8-77d6-4ab2-8ce0-b8879dcf2525",
+    "5049a1e2-4929-46f6-9fed-f36956469df6",
+    "02bbf5ab-e2c7-48f5-b782-145a5f1551e5",
+    "fac1d890-740a-4c57-bfd6-4612ec1e18cc",
+    "caed86cc-1745-4629-bc35-6387d012efc4",
+    "203c29af-2b16-43cb-a846-db74eced0a3f",
+    "81e021ae-d175-4d6c-aeeb-c934ac0b3ac6",
+    "d814bdb7-8fe8-497d-bdfd-11c32736b4bd",
+    "c2825fad-7403-4f4a-b251-302fca95954d",
+    "db5379f5-87e9-48b7-969d-4b82c1ce174e",
+    "5d092eea-2814-4a33-bcd7-2077b149b831",
+    "a1bed86a-7bef-46d5-9932-4e94c8c092ba",
+    "eb6703eb-70ff-4d7b-abd0-925e1531a77a",
+    "1eda32b5-dbb0-4f9c-b4b7-916beb8644df",
+    "44bad171-b4ac-44b9-ad58-b83c95efc455",
+    "dcda924e-8b52-4461-ab5a-6593ced99dba",
+    "48bda606-dc77-4e13-836e-c3e32ede5922",
+    "1893193b-bdb6-4531-9fee-d9f4405e94df",
+    "4f674cd3-80df-4dc7-b882-75f5f181cabb",
+    "9fb342a5-281b-43ca-9ef6-0b5c5c1ee2ed",
+    "1df0cb61-e72f-45de-9778-f17a6a7faa02",
+    "680ce12f-b1a1-4696-ae20-c9d20a36fb8a",
+    "1ef2791e-d8a4-4234-8327-ba0bc066bf66",
+    "bfcfc733-44f6-43fe-bcae-43a436947aec",
+    "e7190a3a-132e-48a2-8660-e7df6da0a1d5",
+    "bbaed06c-3a14-42b8-964b-438f1fbacb7d",
+    "effaf7b4-d44f-4f76-87fb-ddb55e4f235d",
+    "bad715e5-9ed4-4105-894a-54dbb9cb6731",
+    "c291c341-6270-4429-911a-712692a7f27a",
+    "397a5b0a-78b6-4d44-98a9-3951d525611f",
+    "efdf0752-0130-49a1-a9f2-e4b21b0e720e",
+    "1e03f644-396f-42ba-addb-3b1dbf2a513c",
+    "1ba167a8-2d0a-40fc-a5c7-f62b8858e715",
+    "0917ae4f-d544-4e50-8b56-0d41ebb1d3ee",
+    "ed72b903-be42-4f83-bb75-688d6bfddf11",
+    "edfbad32-801d-4ce4-ae61-fb5cb0240ff3",
+    "e8bb9f90-8d11-4d4c-bf02-50be069d3497",
+    "d045ec1f-c1df-48c7-93c9-b7c07dfa55ae",
+    "f44230a0-9778-4e33-a586-bc78afb659b4",
+    "08ca98f2-bc53-487f-8185-d250ca885632",
+    "262921ae-76f4-4f85-b88c-f5d7389788d2",
+    "db024394-18b0-4b48-8ec6-c5dcbc623d36",
+    "a2cead6d-b40d-4882-99a5-0770a22c618b",
+    "6c4293fd-e16e-4d5a-9171-b0a6f7e03998",
+    "96406da9-b28b-4899-8885-9883f6909ed6",
+    "67f33590-2cc2-4a1b-a5ad-5e065187934f",
+    "49f89791-85b4-4cd1-98f0-2219f96dfe7e",
+    "6cd139ad-3bb1-497d-9866-fb8d97486279",
+    "07610753-46a4-4610-bc36-d250db60a35d",
+    "61f6ec91-aac3-4211-bd15-f6e85e3800bd",
+    "c08a13b1-d7c5-4e78-94ef-8b149c4660a2",
+    "dd379e8b-3896-41d4-95f8-fff5ab73de5c",
+    "48fd037d-56f5-460a-b324-ad7d6cc07e45",
+    "3e605533-879f-4167-972e-1454c44eb0fb",
+    "aa4fa68c-b98f-4838-9e6a-930d58ecac2d",
+    "a9d3d864-127d-44c1-86b3-4cc8dba3aacd",
+    "f6030e27-cb91-41ca-8379-8a1dac44ffb6",
+    "0a858acd-bea3-4a53-ba1e-1ac8faaeb778",
+    "fb34269c-7388-439e-8c63-29735124e448",
+    "9b522935-900a-4649-aacc-f5f50d455118",
+    "d08454cd-0889-457a-ab90-2f4c52d1fc4a",
+    "e61534e0-9e31-4153-b0d8-5608465751c3",
+    "6c933f98-253d-4db5-8dc6-7600ee8c4346",
+    "3bd9c235-f796-4c98-af0c-4534ce84d1b7",
+    "23422a36-f518-4e0b-aec8-e901a9617e10",
+    "1c8ba9c0-052f-4d23-9f97-5ba6b88dee30",
+    "f99806d7-bcd6-4c68-9084-bb60e317e3a7",
+    "79888a00-2038-40c3-9bce-c952a63e0a04",
+    "518bf55c-e3f4-4078-96a0-92301c95ab02",
+    "004bbdd1-543c-4a36-81c2-4bffa97269e8",
+    "0648882a-df3f-4b7f-924e-ae14ad7d4ccb",
+    "2c122b60-b41d-4161-858c-4dae8e9f0b0b",
+    "040d887f-7e12-4041-85d0-2f01a651e4a6",
+    "78823d5c-e17f-4f51-a648-a77626259cdd",
+    "5957ea43-6466-4016-b68c-6c2ee342c0dd",
+    "bc125aeb-c287-4282-a196-d34cb432298e",
+    "dcc5756d-5f36-4119-bb6f-f70674e57ed4",
+    "699cc67e-a9fc-4cbb-a264-bac18dc422f2",
+    "35f647fc-94d3-41e9-9f6a-8bd6a11cad7e",
+    "33074977-d5e8-40aa-8cdb-8e7f82ba3bf2",
+    "54aa4736-d952-4873-a1c0-eb3a9985a9b3",
+    "e0019987-0da1-43d0-8dd9-eef326282b49",
+    "ca9d5f4e-54b2-4a92-80bc-c943eff69f20",
+    "57e1309d-433d-4356-a397-c6ffcb3038b5",
+    "88fe3c43-ec2b-4804-b8ee-a6e085536b85",
+    "bd458279-307c-4a15-8838-42e6cfa7ffee",
+    "2758897b-91e1-41f1-8360-ad7872e8c15b",
+    "e4a178c4-0d0d-4c5d-9f90-ed16b53c60fa",
+    "785631ae-a5a8-4d2c-9ce6-0fafb6c0930a",
+    "98244082-609b-4e4c-82f4-3c5a62446688",
+    "5994f819-887e-4e3e-b7dc-0095f0b4df7d",
+    "e9fa60a7-3b95-44bd-bcb3-398227dc0d93",
+    "07238e54-8e66-44a7-8a1e-116238320caa",
+    "e1986719-1c20-431a-9c69-292a98a2f986",
+    "cb9d9d33-235b-48ed-aee1-94f4d2874e30",
+    "7f32bc1b-7598-47d2-88ed-692d1cdf2f1a",
+    "0b0bc477-fe3c-46d9-8b4d-0558d052ad35",
+    "7a9eb58b-4c83-4418-a5c5-702993da5eca",
+    "ae1d419b-7091-4caa-a158-dfe922433575",
+    "e1aaa0d5-73e4-419d-b5d6-e414ba0d4e55",
+    "65d84d86-39bb-4171-af71-05f99707bf85",
+    "49b2b551-8b85-4bdb-bd0b-484a068b29c3",
+    "8fe0836e-7ac1-41c3-904c-12b8d6b72f1a",
+    "19b92c37-9784-4471-b973-0e3953433fe5",
+    "d1e18c54-56d4-448d-8693-0ab2b32b69b3",
+    "053abff1-2986-4ff9-ba0d-dc3d9eca8a73",
+    "de516906-d101-485a-bdcc-aa11b932ec87",
+    "ae68ad50-b170-4e2e-8913-a9fba4fb6685",
+    "d4ef28bc-ceec-46b1-ac94-d83d05008953",
+    "001a3b09-88e9-4a6a-8c90-e524a04c2f27",
+    "3399ed56-0507-4e71-a964-6e59e87c24af",
+    "58a92c7b-b52a-4547-8f3d-a4250ff3416a",
+    "57a4a7a7-6c0b-4024-b4e0-77698d8e9d42",
+    "d450c617-527a-4b42-9d5b-425b0fe6cb24",
+    "caf05638-c338-45e2-8708-69d11382e16e",
+    "c4a83c17-fc38-4e08-8edc-97d2fb8112c4",
+    "5bbd362c-20d8-444f-ba64-e7db752bee6e",
+    "ba8bccf0-3f72-4999-81de-654f8f521c83",
+    "6b38233e-c62f-4ce8-b959-26256e77246a",
+    "50bcbdc0-0f62-4d11-9b8d-1acfb33064c9",
+    "88e820c8-cf3a-483c-b70a-f95a1de175ba",
+    "578d7618-26a6-41b7-9593-9d43efca2816",
+    "48ffab96-cf5f-4e84-8491-a6939e631a24",
+    "e82bcf69-7ab8-4716-962a-a990a1320c68",
+    "923fddb3-f155-4ed0-8f73-4b35f548313a",
+    "e8afe3d1-89bc-4304-99c3-1432ac893c35",
+    "0cf08062-1177-4438-95ca-f08ffa08f68b",
+    "b27d3c7b-dfaa-4ca3-8a58-76a71d4e1249",
+    "4c6173b9-d127-48e5-b06c-5b1199e1b668",
+    "712feb1b-3340-4276-9d72-1cbb957b12d2",
+    "6d2cd5e5-cdd1-46d8-ad7f-ecca8a67c563",
+    "50395c04-2584-4a35-b3eb-f1057fdb5d3a",
+    "50988a22-3fc1-4cfa-9bcf-f53225e12ee5",
+    "8fcd3b85-515b-4f64-b56c-0bfa25378c1f",
+    "e47dfd5d-eff8-443f-997e-d4f87df4eba3",
+    "f1740d6e-aecc-46b8-9593-c03ac98428c2",
+    "eef49b94-5e83-4f4d-89cc-be1f3fc51194",
+    "bf7af6a2-79f0-44f0-9355-0099157e7883",
+    "fb7e8bc2-1c6c-4bb9-8417-f3f35ec81c40",
+    "5f7db689-4d74-4a04-9feb-0fb1318a5793",
+    "ef13dd90-81d0-4e13-917e-28cf366213b1",
+    "df813a44-8057-4304-bb08-71a3547bbf3c",
+    "ee43e779-ef6a-44e0-b390-b27a73e3a8f0",
+    "32002064-7d3d-4cbd-9a52-a9bcf3c61448",
+    "9bf37264-5772-454c-9406-b7d220a8c5cd",
+    "aa76e519-6aed-470c-87d5-00d28fc8e5d1",
+    "e3bf5e62-9eae-449f-a777-175e1def8b80",
+    "3ab63431-c603-4693-ab9e-e6d58148df7d",
+    "a69f0451-9638-486c-ae55-4a0c382e13f3",
+    "a246b542-87de-4c11-af6b-ef6c87c04b25",
+    "746dc4dd-7b22-4777-b34c-0430315bfed9",
+    "1f0a5f7e-8858-40e9-a779-303422f6d7be",
+    "5d6c4bdb-7e33-4f83-a09a-94729a73628f",
+    "5bdac465-4c43-4d58-88be-5f83a2ab2f43",
+    "cd72e8a3-07a7-4f90-924b-704d275dd197",
+    "0a65cca9-fcff-423f-8bef-a4ce66aaece8",
+    "0f57d9f2-b687-4a7a-839f-8ea642c1b34e",
+    "f877266a-4d95-45dd-ade4-8ac248a52dbc",
+    "dfc56d92-0eb1-4da1-a9c4-7079b85a65c3",
+    "4716d21c-42a7-43a0-a163-6efeb50b5e46",
+    "badb5fbc-a2a3-4f65-af67-1a85e1acb1d9",
+    "1a04ee78-9062-4483-92f9-a812dca78f08",
+    "ef0f8cdf-1e74-412c-9a76-815ceadab388",
+    "6eaab6b4-38bb-4f5b-bdd0-24f53f791cd6",
+    "9c196736-4326-44e9-b2b4-0bb3ec87a7f4",
+    "5b33f792-195a-44d2-9bd6-f6738ff1f432",
+    "d580b754-59c2-4d78-9d6b-85d50ef5a343",
+    "36d2d68c-71da-44ba-8421-b7e57e34bb07",
+    "95dd3862-b518-4055-85f2-40a89c0555c0",
+    "0f6bf1b5-3152-4620-9ca6-c70cc9220146",
+    "26541856-88cd-47bb-9df1-af7ff478859d",
+    "43f6ad58-8cc3-4875-8476-e8856727056c",
+    "0dbd808e-acde-46af-b341-c509726914bb",
+    "03bc6e86-ad24-4535-8b67-bedf868ec936",
+    "21ee8a3d-77a0-4681-8d38-d68ab459596a",
+    "57f0d621-3035-4676-8e64-0bba57105ce3",
+    "db2d6578-3120-4987-ae63-c865722c5b32",
+    "7ba6a6ed-f214-40c1-8031-ed5a7d4dc5ed",
+    "f3c1f8ce-34d0-4816-ac70-bf77c0739c25",
+    "ec525e26-c898-49a5-b930-de3ab98eedb4",
+    "7578f7b0-914a-4f66-9251-367af2ba0325",
+    "53eff952-0112-4c9c-b230-59cb09bd101f",
+    "00d0e651-e8c0-4b15-a11d-2b68bceb9119",
+    "4b63e868-7277-40ed-b830-7d72d5bccf41",
+    "caee42ee-0955-4621-85be-f98869854b5d",
+    "9dedabed-701c-4b05-b317-4b6b75a2481f",
+    "235ee243-e12e-4d0c-b044-5ae62d261fe4",
+    "465066e3-be56-4ce0-9482-92fc538e7693",
+    "59da3e17-f388-428d-a7a5-ed4ffdf2863f",
+    "065d7fa4-c7d0-45b7-a95f-5535e48c7ff3",
+    "f41f23d4-640f-4200-8567-c30a84548be8",
+    "427341bc-79a3-4ec5-8987-a91dbd65e041",
+    "6c51dece-aadc-4e2a-8426-17f693128f0a",
+    "99936274-2eae-4def-92f6-34b46649dbd3",
+    "83d039b4-d75b-433b-bf0a-6abb0d42d7ab",
+    "eb058479-abe5-4bef-ab45-fd8a02417c57",
+    "25ebb018-1bf8-438a-9ba0-c16c033d527f",
+    "458a640c-0440-4bab-800d-6addb1fce4a2",
+    "9a3b3071-f994-4fd2-8e31-495d87617b8d",
+    "6fe85469-68e9-4444-8159-f1e7bc54b77b",
+    "f3f7f355-52a9-4931-b7d2-19b637b6ed02",
+    "15e5035e-396a-4822-a510-e1a6f42f959a",
+    "39615d67-a5ba-4766-b1de-d5f2ccb262be",
+    "9b8b837a-085e-4840-a3b0-a669167f7268",
+    "ed8a572f-f2d0-460a-89d3-d475f33c5974",
+    "81c1ea34-eeca-446f-b042-3a4ed41702f6",
+    "46912a1e-c529-40e6-a4eb-e9e33af9eab8",
+    "e26d6bd2-6f2a-480d-913d-2ecd6efc4c03",
+    "2ccbad8c-b6ce-4092-b56e-67556e19834e",
+    "60e2f725-8a98-4c9f-826f-5c989dee34e7",
+    "d2637657-3107-4ac0-ac4d-b86b1d112ae4",
+    "aadd128a-2301-4371-82fc-745b7f12d65b",
+    "95b21335-9403-4491-b07e-dc7aa7b4831b",
+    "ffc132d9-6f51-4100-8de8-ffd44f07bb1f",
+    "2cc221c5-bad1-4d70-8fca-6dbaa28ef17d",
+    "e250707e-beee-4f50-a9f4-01ea03186929",
+    "1ac05e78-817b-4def-be68-e4abf9931099",
+    "a0a1cd9a-71bf-409d-8633-691ed657b5af",
+    "f4edd0e8-9106-46e1-a983-a390ce26a67c",
+    "0240087b-223d-4c18-aa50-87e72836565b",
+    "9afef1ef-b1eb-4afa-bc0a-a529bd0980e5",
+    "e5fa63eb-9a90-4393-9559-6d468a45713b",
+    "bd3fad3d-eb60-4523-a725-3ec994b96165",
+    "1fb18673-c269-41dc-9588-2adc35ebdc53",
+    "d26aeb07-2605-4293-9b12-38ebd8a4453e",
+    "390c32a6-f4b5-4120-84a3-d1a85c88c18c",
+    "af6fed24-d7a7-4279-a371-141b916f29c9",
+    "c936e013-e4b8-491b-b3c0-4111619bb0c4",
+    "bf1b7e65-98ef-4af1-aaf3-9e345ffab9f7",
+    "6930de26-1600-4bc9-ba77-6ee56e13a6d1",
+    "d3981dcf-4829-49f5-9a51-b88a202b91a4",
+    "28c7d311-d951-42cc-9723-439f68448bff",
+    "e6349b92-5944-4be7-8a47-5851f4d19d09",
+    "36249588-5867-4eab-a5d8-44479a1d7531",
+    "d75a9827-3ec6-4943-b361-10b8c4821ff1",
+    "d6c06029-acde-44e1-836f-e1486ebede6e",
+    "bacd4cb0-8b58-480f-88d1-fd4f92e43660",
+    "97b68898-a0a4-447c-b144-5ccb91a8684e",
+    "6d1d75e9-3195-45d2-9016-6a14f3882ef4",
+    "159ba45a-670d-4a0d-bfd2-d54146e72740",
+    "95a2889c-1a7d-406f-917c-8d9794314c0a",
+    "f16c45fe-f2c8-45a7-b181-d64605bd5840",
+    "5ef2821b-a547-45d8-b1ba-fcebe8adacc1",
+    "41edbc2a-e801-47df-8f51-7b26cfae051b",
+    "1f0cc211-400a-4a31-bc20-ede8a7ee06ad",
+    "18155006-506b-4529-9ef2-0cd45a8426ac",
+    "e79b8489-eca3-4c8e-ae2e-97fc6aa1f42a",
+    "8b9c71b6-4a6c-4075-87a4-6878d3bdcb9f",
+    "64423602-a7b7-49f8-b986-6e26ec296044",
+    "7ed2188a-e376-45ad-b032-ce4b72129c6d",
+    "af144d64-bac6-47ad-afea-5353bd445047",
+    "d29887cc-0496-4f13-9780-2dec88465fd3",
+    "dfd8bd11-873c-4778-8e08-02e5e6b3b6a4",
+    "2c3c06fb-ba3d-4a58-8eba-4097a9011961",
+    "4721be6b-2e37-484e-b7ab-78eda2ac1fc8",
+    "f76af635-59d6-4321-a1a5-254314c82abf",
+    "c7ea3f1d-91de-451d-b271-271865442cc4",
+    "6160cdcc-b421-4bb8-b65d-2b47a89f59af",
+    "c8e4d0dd-a27d-4798-bb58-531102e03706",
+    "6e391c53-f569-4ecc-9447-45c3b5e81205",
+    "1f9fa735-a6ff-481c-aa72-0d824660dd36",
+    "3ef4ffb1-40dd-4c0d-9094-37c23c181c5f",
+    "20e1fdd9-312b-466d-a1e9-96b88652fd7a",
+    "d4e42ee3-b07e-4f33-985d-72722f80714c",
+    "ac6f5d8c-83b8-40de-bd28-8f7fc4c0ef34",
+    "ae9380a8-cd3f-407b-9547-969b65e0a936",
+    "37532462-8d6d-4ffc-bea8-98b6643ee2e3",
+    "849aca7d-95ff-4a55-993b-545fbb024e9f",
+    "9e01bab7-4ea9-4cc8-aca3-4b5588c9748b",
+    "92079ec1-3110-4cd7-8ffa-e8500d5850d9",
+    "1d2cf72f-e1cc-4a26-bfd8-d37598b6bfa0",
+    "9c709e5e-f447-4c97-94e4-8abd9c61fb8b",
+    "02f0e434-bc26-41d3-85b6-3763ebf5508d",
+    "7f4b610d-8ccc-4a6e-859a-9af750ef197c",
+    "aff15622-7df6-4978-b040-d9cb89dc270d",
+    "ddc12215-3538-4fab-8847-eb7b9ee906e2",
+    "8a3b0b94-7551-4836-af16-00e8babf7ad5",
+    "9daa69f7-d373-4155-bcdd-21039929c55b",
+    "b8b5853c-f8ef-41b2-92cb-fca80e9531c4",
+    "4fe48fff-7247-4872-9df0-0ae1bd512e7b",
+    "ba1e1e72-dd81-4ca3-a042-832d08c0db64",
+    "8b9e79af-0a4b-4372-90a1-be49cb02dbd7",
+    "78fc64d5-8a93-4458-b31d-8783a08480a6",
+    "bebb6cc0-96b0-4123-a8fc-b98faa4ad5ca",
+    "d068369f-757a-4365-b78e-6bea4a7f929f",
+    "d905c027-6f15-4b54-a3ac-f5b89e9baf6b",
+    "860c5666-66ec-4c82-94e2-650df0525be8",
+    "c0cf46e3-3c12-49f1-a8fd-eeb01d715a38",
+    "c7047621-214e-4bc0-9a23-12fcf26a11e0",
+    "fbfc7c0a-46e6-410a-b7c6-8d4efcd2b97e",
+    "052887bd-7623-4b48-b5ec-84c646a1cf1b",
+    "5ed8919b-a754-4695-a071-afffff2470b9",
+    "8c4ed0e2-57f4-44c0-908c-45118a267a8c",
+    "8a9f4000-5840-4726-b31d-566ba40d3f44",
+    "9ef5a892-bb30-4ce2-a124-af0a4ce308ee",
+    "e744573e-3e3e-4d72-bf70-abc408a988f7",
+    "041482e3-a3a4-41c4-a30d-38f1621a45f8",
+    "17ce2264-a0bc-4cd7-a1b4-4c4fe0dfc746",
+    "28141942-a4be-4bab-a43b-da51ff36d8b3",
+    "9cc65a75-21a0-4c68-a6bf-da9291bde225",
+    "93ee0f76-145b-4283-906b-bc6e1f9d74cc",
+    "7be223f5-d93c-4536-b450-bcff98b777c5",
+    "1b3f747d-80d4-484c-90e1-e1d56b7bd3f6",
+    "4637d950-fddd-46ff-831e-9641df3253cd",
+    "bfd3f7a1-c119-45d2-acd3-77f5eea0e16f",
+    "cc7e9314-8d65-45f4-9f9b-f71626c610ba",
+    "a26cf209-469d-42db-a726-c9d7ec8f809a",
+    "0bd29c4d-0c75-4a36-8803-646148c9fc18",
+    "c1ffed95-feac-4bb3-b45f-6dfdd1ca73f1",
+    "e0f49706-84c9-412d-ae8a-8f0542fa890d",
+    "edeba402-7b8e-4fe0-bdd6-1eb91fc7d0ba",
+    "8131d1f8-61c8-4dc5-be92-d0725f165ea1",
+    "9cbf50b4-1237-47a4-affa-332d83ada494",
+    "5613c066-00fd-46cf-ad75-9c9de4fb773c",
+    "dd73c4c3-3b09-4701-801b-cc92eaf33e93",
+    "42627190-f17b-44cc-bf37-6480e44681ce",
+    "a47a1a8a-f853-4021-9578-638e8178fbb6",
+    "692d1af4-6523-4c4c-82e7-fed8faa29688",
+    "9fed1e10-4d32-4482-bb8a-7332b87b794f",
+    "abb057ce-1ce2-4534-b5dc-dd7abc27fa72",
+    "e8d5499c-2b14-4501-90db-973142cc3b28",
+    "453c7312-d23c-4a09-8f7f-019931287567",
+    "d778dda5-6659-4462-9c19-d4d625d04974",
+    "af584923-1332-4b4a-b6a0-d1edd5dea6a9",
+    "8812937a-7b9f-4e59-92dd-72d80b0f0150",
+    "033f25e6-a8f6-4ba7-8b56-508e95be5f15",
+    "db375bde-34fb-44ea-a3f2-75e41fa92e93",
+    "91bd4399-4e91-418c-9906-b360a4a32107",
+    "1cb564d0-2918-4625-8c82-1812df38e104",
+    "163d744c-1fd0-4207-ae19-b1d8d6d4aecb",
+    "3cf9537e-e47c-456a-9cfb-1f6fbecc49b6",
+    "f2c125eb-97d0-40fa-b147-d325b8689f99",
+    "31dd97fd-a0a6-41e1-83b9-f2fb91c58550",
+    "be8a710a-78fc-400f-8852-72f976b04b4a",
+    "1b47d758-678d-44bf-8fe4-e432618b6282",
+    "672ab20d-33c3-4863-b94a-a20b4191f9d2",
+    "fef63b45-91ec-47d5-bd32-27d27dab419f",
+    "d389225d-1ed7-4234-a83d-85eb3ed46c33",
+    "f5a4d04f-31e7-4d10-99f3-bd90b6fac5e8",
+    "6db88bd8-fcfa-4409-8260-9192d26e4596",
+    "b49c42f5-fe7c-4c23-aa9a-ebdd7cb4822d",
+    "9eabc0da-62ca-4263-9b37-237fc821d42e",
+    "676a23d9-5b72-4846-8a39-d5ec6893fda0",
+    "8854951b-0821-4239-a8a4-82ec6c764c9e",
+    "461091f8-f1f0-4e99-b969-a7e1e9b6ae3c",
+    "8a87d4a3-ddb0-47f1-9346-488e0dd7ee70",
+    "f506dae2-41fe-4c07-81ce-452ef509aee5",
+    "1c4af320-8de1-4fb8-a0ed-3e3998023c85",
+    "5903bd9d-026a-41b2-ae39-58c7348a9167",
+    "06e60f3a-dd9c-4934-986b-68c18987dac1",
+    "b8dcb266-39f8-418e-95e4-37dc9b183b3b",
+    "c502ac7c-4f87-4dc1-b0a5-8eacba5ce865",
+    "378291b3-7b98-4444-98df-07af3a99989a",
+    "873b6533-79bf-4331-ace1-1c6d51fc9872",
+    "32c355a9-ad70-4738-b27e-19357a1c59f7",
+    "331608be-0978-4f03-88f6-c74118a5538c",
+    "5267f716-9b46-4784-81cc-b6227f932ccb",
+    "d7574446-5fef-4bd3-aabb-1efb11d790b1",
+    "31d71a35-0697-4d79-9788-0a0aece5a9f1",
+    "0763d43d-70c9-4ad4-ada5-cb0374b8d730",
+    "a5611170-3b44-4d9b-aae5-9d7002b673cf",
+    "947682f7-7e61-4583-a0f4-70280db629f0",
+    "5dcbf508-1f19-4ae5-9993-3f0e8876681b",
+    "e708b1da-967c-4d68-a6d6-a5987b5c83b3",
+    "6cb98fa9-927a-42db-a7df-665020bcb456",
+    "116d9fd5-23d5-4b40-a5f5-4d17c3ec4878",
+    "1145281e-c801-4d5a-85e6-a65edc2f76f0",
+    "4aee59ce-3c76-4cb5-b720-545266a1a1f2",
+    "73d4b541-7a47-4205-a96d-6776f8eefec6",
+    "aa37a93c-ecad-45a1-90d5-3df954c7fa40",
+    "d6a07a3a-00c3-4513-94ee-ac54b428377b",
+    "d7a971e2-2ae6-43ce-ba54-8356afc680b9",
+    "e55031d0-8855-4f6c-a937-e9e55cb665b9",
+    "b7cdb0ca-34e3-456a-bb24-4f63f04627fe",
+    "a28988ab-b85c-4c07-9465-49a32a3bb34c",
+    "477de7da-a3e1-4c46-9e3a-5952af73e44b",
+    "f8fcb6f0-1d50-4de7-a0f2-040c1d8d295b",
+    "17c847ff-bdbb-4c2a-a00f-6043f22204a1",
+    "dedf24ff-d412-44f6-a7b7-009b7691f8f8",
+    "18cdf4a8-a6b4-44b4-89dc-e787ec8e1bd6",
+    "499b8f7f-007a-473e-900d-a641445ba1b7",
+    "2f4720a8-875b-4980-9d14-54ec2d54b435",
+    "e8325846-2c81-44bc-bffe-7be3e11b2fab",
+    "897ef5d0-a209-49ee-909d-489af1423e15",
+    "2ad5c149-4539-4f0e-8a36-4f6bae9540a2",
+    "68e07892-66d9-4e15-96b2-c169c270e81a",
+    "348cef4e-a2f3-4339-8fde-dd9b5434955b",
+    "11442b43-4920-4104-a5a8-0dd806c70900",
+    "654f1d0e-1c4a-4b68-abf0-49f82690555a",
+    "3ee3ee0f-f0d2-4a1f-acb6-151b633296e3",
+    "3a6b159d-905d-4d63-a623-e85ad03ce964",
+    "60bfa5fc-f2f6-4af2-bcec-eee315cad899",
+    "bc2c88f9-b011-4e06-a493-d8ef870b3b00",
+    "e93ad1c5-28f0-414d-bf38-2ee4942a179b",
+    "f5401633-95dc-4884-b5be-f2ff895e2930",
+    "cab48d12-642c-4cfe-ab61-140357800313",
+    "4aa98c40-1dc2-4545-bdb0-116cbd4f8ece",
+    "f17e0ebf-c690-4fbe-9aef-32f7c1e0242d",
+    "be887255-8a1b-4de8-b2dc-fe62d4970276",
+    "ae647d94-0c24-43fe-9863-2735765193d0",
+    "36030fb8-b864-4f8e-a81e-27086d8c4b42",
+    "3fc9c51e-1ae8-48de-90b3-2a8ebccdb3d8",
+    "4eb264b8-df87-49f0-a0d1-af56908d0bb5",
+    "f5dc3f45-5d23-4d42-8132-2230fd5d354c",
+    "dc108e7a-8ec5-4f1f-bca4-87060b5dd29c",
+    "c6932a55-2df4-4c14-ae50-78a45e6e847c",
+    "22e7dc5f-a5e3-40cf-87c4-762a57a2ef55",
+    "6f337686-c8a2-466f-ace0-ffd050d3ae1f",
+    "db67ff57-37ad-49aa-9acb-928996d16aca",
+    "36ad2e36-890c-4263-bb06-57882acb8e92"
+  ],
+  "aggregationResults": [],
+  "total": 503
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e3d28d4f-e72e-430a-92f8-263cd01ea452.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e3d28d4f-e72e-430a-92f8-263cd01ea452.json
new file mode 100644
index 0000000..84a2e3f
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e3d28d4f-e72e-430a-92f8-263cd01ea452.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "e0f49706-84c9-412d-ae8a-8f0542fa890d",
+    "a47a1a8a-f853-4021-9578-638e8178fbb6",
+    "9fed1e10-4d32-4482-bb8a-7332b87b794f",
+    "d778dda5-6659-4462-9c19-d4d625d04974",
+    "692d1af4-6523-4c4c-82e7-fed8faa29688",
+    "dd73c4c3-3b09-4701-801b-cc92eaf33e93",
+    "e8d5499c-2b14-4501-90db-973142cc3b28",
+    "9cbf50b4-1237-47a4-affa-332d83ada494",
+    "453c7312-d23c-4a09-8f7f-019931287567",
+    "8131d1f8-61c8-4dc5-be92-d0725f165ea1",
+    "abb057ce-1ce2-4534-b5dc-dd7abc27fa72",
+    "edeba402-7b8e-4fe0-bdd6-1eb91fc7d0ba",
+    "42627190-f17b-44cc-bf37-6480e44681ce",
+    "0bd29c4d-0c75-4a36-8803-646148c9fc18",
+    "c1ffed95-feac-4bb3-b45f-6dfdd1ca73f1",
+    "5613c066-00fd-46cf-ad75-9c9de4fb773c"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e8feed24-4bf6-41b5-84a7-6134f9160cc1.json b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e8feed24-4bf6-41b5-84a7-6134f9160cc1.json
new file mode 100644
index 0000000..f81b637
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/1a425309-21c0-4ca1-8548-c5915137b566-e8feed24-4bf6-41b5-84a7-6134f9160cc1.json
@@ -0,0 +1,23 @@
+{
+  "type": "table",
+  "blockIds": [
+    "518bf55c-e3f4-4078-96a0-92301c95ab02",
+    "0a858acd-bea3-4a53-ba1e-1ac8faaeb778",
+    "040d887f-7e12-4041-85d0-2f01a651e4a6",
+    "004bbdd1-543c-4a36-81c2-4bffa97269e8",
+    "2c122b60-b41d-4161-858c-4dae8e9f0b0b",
+    "23422a36-f518-4e0b-aec8-e901a9617e10",
+    "e61534e0-9e31-4153-b0d8-5608465751c3",
+    "3bd9c235-f796-4c98-af0c-4534ce84d1b7",
+    "d08454cd-0889-457a-ab90-2f4c52d1fc4a",
+    "f99806d7-bcd6-4c68-9084-bb60e317e3a7",
+    "6c933f98-253d-4db5-8dc6-7600ee8c4346",
+    "1c8ba9c0-052f-4d23-9f97-5ba6b88dee30",
+    "9b522935-900a-4649-aacc-f5f50d455118",
+    "fb34269c-7388-439e-8c63-29735124e448",
+    "0648882a-df3f-4b7f-924e-ae14ad7d4ccb",
+    "79888a00-2038-40c3-9bce-c952a63e0a04"
+  ],
+  "aggregationResults": [],
+  "total": 16
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/e777a528-9404-4e96-9f26-0014be705592-c01c2f48-5442-47d8-adb3-01c4f8bb8e58.json b/node_modules/notion-utils/fixtures/nba/data/e777a528-9404-4e96-9f26-0014be705592-c01c2f48-5442-47d8-adb3-01c4f8bb8e58.json
new file mode 100644
index 0000000..8cbd8c9
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/e777a528-9404-4e96-9f26-0014be705592-c01c2f48-5442-47d8-adb3-01c4f8bb8e58.json
@@ -0,0 +1,22 @@
+{
+  "type": "table",
+  "blockIds": [
+    "274924c4-c151-4e45-9ac4-fd3b8839a56c",
+    "a5b2ed08-4322-4923-888f-c70193751759",
+    "7c579637-e84f-4ddf-ab72-78a0d414baf8",
+    "e075359b-b750-46c4-86a1-1e76027e140f",
+    "bfc372e8-125f-4392-91b2-004532d1d808",
+    "f6c7514f-b3bf-4a1b-99fd-8588eb0fdc13",
+    "db15dad7-0fda-4900-9c68-d2a4a99e362a",
+    "62b3eea9-3084-461d-bbc1-c727360218ad",
+    "20a58853-197a-4909-8fb7-900b76cba9c3",
+    "71d3bf63-2eea-464f-aa6c-ccd52ba13856",
+    "f2a7b5f6-7cf5-4c14-bf61-597f45870469",
+    "ef225d59-62fe-4e8c-bf78-01000aec6466",
+    "e355c83e-efd6-43a9-9fbd-b8c863ce28aa",
+    "14996a91-fff0-4234-bc9b-64250b59ae31",
+    "ceae18ce-490a-464a-ac7c-822df32c9a28"
+  ],
+  "aggregationResults": [],
+  "total": 15
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/data/e777a528-9404-4e96-9f26-0014be705592-c0d2d91c-e2a5-4ea5-a9b7-2b2d8ae2d591.json b/node_modules/notion-utils/fixtures/nba/data/e777a528-9404-4e96-9f26-0014be705592-c0d2d91c-e2a5-4ea5-a9b7-2b2d8ae2d591.json
new file mode 100644
index 0000000..a509fc9
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/data/e777a528-9404-4e96-9f26-0014be705592-c0d2d91c-e2a5-4ea5-a9b7-2b2d8ae2d591.json
@@ -0,0 +1,22 @@
+{
+  "type": "table",
+  "blockIds": [
+    "841918aa-f2a3-4d4c-b5ad-64b0f57c47b8",
+    "e722d82d-e545-4dc5-9658-c66260f0d3f4",
+    "282f1ce5-85cc-47c3-8145-31ebee469aa4",
+    "dddd453b-579c-472a-9339-26dcfcaa1976",
+    "3cbd18cd-cab2-4b10-9b0d-e67ff1e365e1",
+    "afeaba17-8f70-40c9-a648-4e0afc314948",
+    "73447b75-434c-4eee-a68d-f6cecb8a844c",
+    "414ba2c7-d02a-4f5d-acc3-5512ff3f6b35",
+    "95c79219-0f51-43ad-895e-53f8eb08ee93",
+    "f2379c53-d112-42a8-a248-fabebaa98337",
+    "e650d5c6-66c0-44d4-80da-76da908ca284",
+    "2ed75575-6e95-4a55-9fcc-01853125be21",
+    "001b1958-7c2d-4a11-8f9d-ce1c0fe476a9",
+    "9e5ce76a-7550-449f-a7ed-4ade717ab7a7",
+    "7611bc05-d4c6-41de-9a18-f9a1071d99c8"
+  ],
+  "aggregationResults": [],
+  "total": 15
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/fixtures/nba/e777a528-9404-4e96-9f26-0014be705592.json b/node_modules/notion-utils/fixtures/nba/e777a528-9404-4e96-9f26-0014be705592.json
new file mode 100644
index 0000000..26b29da
--- /dev/null
+++ b/node_modules/notion-utils/fixtures/nba/e777a528-9404-4e96-9f26-0014be705592.json
@@ -0,0 +1,44 @@
+{
+  "id": "e777a528-9404-4e96-9f26-0014be705592",
+  "version": 34,
+  "name": [
+    [
+      "NBA Teams"
+    ]
+  ],
+  "schema": {
+    "$N1}": {
+      "name": "Conference",
+      "type": "select",
+      "options": [
+        {
+          "id": "`8t(",
+          "color": "blue",
+          "value": "Eastern Conference"
+        },
+        {
+          "id": "A'Q~",
+          "color": "red",
+          "value": "Western Conference"
+        }
+      ]
+    },
+    "3-5L": {
+      "name": "Players",
+      "type": "relation",
+      "property": "p4nU",
+      "collection_id": "1a425309-21c0-4ca1-8548-c5915137b566"
+    },
+    "f+&p": {
+      "name": "Logo",
+      "type": "file"
+    },
+    "title": {
+      "name": "﻿Team",
+      "type": "title"
+    }
+  },
+  "parent_id": "8a586d25-3f98-4b85-b482-54da84465d23",
+  "parent_table": "block",
+  "alive": true
+}
\ No newline at end of file
diff --git a/node_modules/notion-utils/src/estimate-page-read-time.ts b/node_modules/notion-utils/src/estimate-page-read-time.ts
new file mode 100644
index 0000000..8f6a7ab
--- /dev/null
+++ b/node_modules/notion-utils/src/estimate-page-read-time.ts
@@ -0,0 +1,248 @@
+import { Block, ExtendedRecordMap, PageBlock } from 'notion-types'
+
+import { getBlockTitle } from './get-block-title'
+import { getPageTableOfContents } from './get-page-table-of-contents'
+
+type EstimatePageReadTimeOptions = {
+  wordsPerMinute?: number
+  imageReadTimeInSeconds?: number
+}
+
+type ContentStats = {
+  numWords: number
+  numImages: number
+}
+
+type PageReadTimeEstimate = ContentStats & {
+  totalWordsReadTimeInMinutes: number
+  totalImageReadTimeInMinutes: number
+  totalReadTimeInMinutes: number
+}
+
+/**
+ * Returns an estimate for the time it would take for a person to read the content
+ * in the given Notion page.
+ *
+ * Uses Medium for inspiration.
+ *
+ * @see https://blog.medium.com/read-time-and-you-bc2048ab620c
+ * @see https://github.com/ngryman/reading-time
+ *
+ * TODO: handle non-english content.
+ */
+export function estimatePageReadTime(
+  block: Block,
+  recordMap: ExtendedRecordMap,
+  {
+    wordsPerMinute = 275,
+    imageReadTimeInSeconds = 12
+  }: EstimatePageReadTimeOptions = {}
+): PageReadTimeEstimate {
+  const stats = getBlockContentStats(block, recordMap)
+  const totalWordsReadTimeInMinutes = stats.numWords / wordsPerMinute
+  const totalImageReadTimeInSeconds =
+    stats.numImages > 10
+      ? (stats.numImages / 2) * (imageReadTimeInSeconds + 3) +
+        (stats.numImages - 10) * 3 // n/2(a+b) + 3 sec/image
+      : (stats.numImages / 2) *
+        (2 * imageReadTimeInSeconds + (1 - stats.numImages)) // n/2[2a+(n-1)d]
+  const totalImageReadTimeInMinutes = totalImageReadTimeInSeconds / 60
+
+  const totalReadTimeInMinutes =
+    totalWordsReadTimeInMinutes + totalImageReadTimeInMinutes
+
+  return {
+    ...stats,
+    totalWordsReadTimeInMinutes,
+    totalImageReadTimeInMinutes,
+    totalReadTimeInMinutes
+  }
+}
+
+/**
+ * Same as `estimatePageReadTime`, except it returns the total time estimate as
+ * a human-readable string.
+ *
+ * For example, "9 minutes" or "less than a minute".
+ */
+export function estimatePageReadTimeAsHumanizedString(
+  block: Block,
+  recordMap: ExtendedRecordMap,
+  opts: EstimatePageReadTimeOptions
+) {
+  const estimate = estimatePageReadTime(block, recordMap, opts)
+  return humanizeReadTime(estimate.totalReadTimeInMinutes)
+}
+
+function getBlockContentStats(
+  block: Block,
+  recordMap: ExtendedRecordMap
+): ContentStats {
+  const stats: ContentStats = {
+    numWords: 0,
+    numImages: 0
+  }
+
+  if (!block) {
+    return stats
+  }
+
+  for (const childId of block.content || []) {
+    const child = recordMap.block[childId]?.value
+    let recurse = false
+    if (!child) continue
+
+    switch (child.type) {
+      case 'quote':
+      // fallthrough
+      case 'alias':
+      // fallthrough
+      case 'header':
+      // fallthrough
+      case 'sub_header':
+      // fallthrough
+      case 'sub_sub_header': {
+        const title = getBlockTitle(child, recordMap)
+        stats.numWords += countWordsInText(title)
+        break
+      }
+
+      case 'callout':
+      // fallthrough
+      case 'toggle':
+      // fallthrough
+      case 'to_do':
+      // fallthrough
+      case 'bulleted_list':
+      // fallthrough
+      case 'numbered_list':
+      // fallthrough
+      case 'text': {
+        const title = getBlockTitle(child, recordMap)
+        stats.numWords += countWordsInText(title)
+        recurse = true
+        break
+      }
+
+      case 'embed':
+      // fallthrough
+      case 'tweet':
+      // fallthrough
+      case 'maps':
+      // fallthrough
+      case 'pdf':
+      // fallthrough
+      case 'figma':
+      // fallthrough
+      case 'typeform':
+      // fallthrough
+      case 'codepen':
+      // fallthrough
+      case 'excalidraw':
+      // fallthrough
+      case 'gist':
+      // fallthrough
+      case 'video':
+      // fallthrough
+      case 'drive':
+      // fallthrough
+      case 'audio':
+      // fallthrough
+      case 'file':
+      // fallthrough
+      case 'image':
+        // treat all embeds as images
+        stats.numImages += 1
+        break
+
+      case 'bookmark':
+        // treat bookmarks as quarter images since they aren't as content-ful as embedd images
+        stats.numImages += 0.25
+        break
+
+      case 'code':
+        // treat code blocks as double the complexity of images
+        stats.numImages += 2
+        break
+
+      case 'table':
+      // fallthrough
+      case 'collection_view':
+        // treat collection views as double the complexity of images
+        stats.numImages += 2
+        break
+
+      case 'column':
+      // fallthrough
+      case 'column_list':
+      // fallthrough
+      case 'transclusion_container':
+        recurse = true
+        break
+
+      case 'table_of_contents': {
+        const page = block as PageBlock
+        if (!page) continue
+
+        const toc = getPageTableOfContents(page, recordMap)
+        for (const tocItem of toc) {
+          stats.numWords += countWordsInText(tocItem.text)
+        }
+
+        break
+      }
+
+      case 'transclusion_reference': {
+        const referencePointerId =
+          child?.format?.transclusion_reference_pointer?.id
+
+        if (!referencePointerId) {
+          continue
+        }
+        const referenceBlock = recordMap.block[referencePointerId]?.value
+        if (referenceBlock) {
+          mergeContentStats(
+            stats,
+            getBlockContentStats(referenceBlock, recordMap)
+          )
+        }
+        break
+      }
+
+      default:
+        // ignore unrecognized blocks
+        break
+    }
+
+    if (recurse) {
+      mergeContentStats(stats, getBlockContentStats(child, recordMap))
+    }
+  }
+
+  return stats
+}
+
+function mergeContentStats(statsA: ContentStats, statsB: ContentStats) {
+  statsA.numWords += statsB.numWords
+  statsA.numImages += statsB.numImages
+}
+
+function countWordsInText(text: string): number {
+  if (!text) {
+    return 0
+  }
+
+  return (text.match(/\w+/g) || []).length
+}
+
+function humanizeReadTime(time: number): string {
+  if (time < 0.5) {
+    return 'less than a minute'
+  }
+
+  if (time < 1.5) {
+    return '1 minute'
+  }
+
+  return `${Math.ceil(time)} minutes`
+}
diff --git a/node_modules/notion-utils/src/format-date.ts b/node_modules/notion-utils/src/format-date.ts
new file mode 100644
index 0000000..e53e454
--- /dev/null
+++ b/node_modules/notion-utils/src/format-date.ts
@@ -0,0 +1,8 @@
+export const formatDate = (
+  input: string | number,
+  { month = 'short' }: { month?: 'long' | 'short' } = {}
+) => {
+  const date = new Date(input)
+  const monthLocale = date.toLocaleString('en-US', { month })
+  return `${monthLocale} ${date.getUTCDate()}, ${date.getUTCFullYear()}`
+}
diff --git a/node_modules/notion-utils/src/format-notion-date-time.ts b/node_modules/notion-utils/src/format-notion-date-time.ts
new file mode 100644
index 0000000..16f98da
--- /dev/null
+++ b/node_modules/notion-utils/src/format-notion-date-time.ts
@@ -0,0 +1,16 @@
+import { formatDate } from './format-date'
+
+export interface NotionDateTime {
+  type: 'datetime'
+  start_date: string
+  start_time?: string
+  time_zone?: string
+}
+
+export const formatNotionDateTime = (datetime: NotionDateTime) => {
+  // Adding +00:00 preserve the time in UTC.
+  const dateString = `${datetime.start_date}T${
+    datetime.start_time || '00:00'
+  }+00:00`
+  return formatDate(dateString)
+}
diff --git a/node_modules/notion-utils/src/get-all-pages-in-space.ts b/node_modules/notion-utils/src/get-all-pages-in-space.ts
new file mode 100644
index 0000000..c0d398f
--- /dev/null
+++ b/node_modules/notion-utils/src/get-all-pages-in-space.ts
@@ -0,0 +1,137 @@
+import { ExtendedRecordMap, PageMap } from 'notion-types'
+import PQueue from 'p-queue'
+
+import { parsePageId } from './parse-page-id'
+
+/**
+ * Performs a traversal over a given Notion workspace starting from a seed page.
+ *
+ * Returns a map containing all of the pages that are reachable from the seed
+ * page in the space.
+ *
+ * If `rootSpaceId` is not defined, the space ID of the root page will be used
+ * to scope traversal.
+ *
+ *
+ * @param rootPageId - Page ID to start from.
+ * @param rootSpaceId - Space ID to scope traversal.
+ * @param getPage - Function used to fetch a single page.
+ * @param opts - Optional config
+ */
+export async function getAllPagesInSpace(
+  rootPageId: string,
+  rootSpaceId: string | undefined,
+  getPage: (pageId: string) => Promise<ExtendedRecordMap>,
+  {
+    concurrency = 4,
+    traverseCollections = true,
+    targetPageId = null
+  }: {
+    concurrency?: number
+    traverseCollections?: boolean
+    targetPageId?: string
+  } = {}
+): Promise<PageMap> {
+  const pages: PageMap = {}
+  const pendingPageIds = new Set<string>()
+  const queue = new PQueue({ concurrency })
+
+  async function processPage(pageId: string) {
+    if (targetPageId && pendingPageIds.has(targetPageId)) {
+      return
+    }
+
+    pageId = parsePageId(pageId) as string
+
+    if (pageId && !pages[pageId] && !pendingPageIds.has(pageId)) {
+      pendingPageIds.add(pageId)
+
+      queue.add(async () => {
+        try {
+          if (
+            targetPageId &&
+            pendingPageIds.has(targetPageId) &&
+            pageId !== targetPageId
+          ) {
+            return
+          }
+
+          const page = await getPage(pageId)
+          if (!page) {
+            return
+          }
+
+          const spaceId = page.block[pageId]?.value?.space_id
+
+          if (spaceId) {
+            if (!rootSpaceId) {
+              rootSpaceId = spaceId
+            } else if (rootSpaceId !== spaceId) {
+              return
+            }
+          }
+
+          Object.keys(page.block)
+            .filter((key) => {
+              const block = page.block[key]?.value
+              if (!block) return false
+
+              if (
+                block.type !== 'page' &&
+                block.type !== 'collection_view_page'
+              ) {
+                return false
+              }
+
+              // the space id check is important to limit traversal because pages
+              // can reference pages in other spaces
+              if (
+                rootSpaceId &&
+                block.space_id &&
+                block.space_id !== rootSpaceId
+              ) {
+                return false
+              }
+
+              return true
+            })
+            .forEach((subPageId) => processPage(subPageId))
+
+          // traverse collection item pages as they may contain subpages as well
+          if (traverseCollections) {
+            for (const collectionViews of Object.values(
+              page.collection_query
+            )) {
+              for (const collectionData of Object.values(collectionViews)) {
+                const { blockIds } = collectionData
+
+                if (blockIds) {
+                  for (const collectionItemId of blockIds) {
+                    processPage(collectionItemId)
+                  }
+                }
+              }
+            }
+          }
+
+          pages[pageId] = page
+        } catch (err) {
+          console.warn(
+            'page load error',
+            { pageId, spaceId: rootSpaceId },
+            err.statusCode,
+            err.message
+          )
+          pages[pageId] = null
+        }
+
+        pendingPageIds.delete(pageId)
+      })
+    }
+  }
+
+  await processPage(rootPageId)
+  await queue.onIdle()
+
+  return pages
+}
diff --git a/node_modules/notion-utils/src/get-block-collection-id.ts b/node_modules/notion-utils/src/get-block-collection-id.ts
new file mode 100644
index 0000000..bb97be4
--- /dev/null
+++ b/node_modules/notion-utils/src/get-block-collection-id.ts
@@ -0,0 +1,25 @@
+import { Block, ExtendedRecordMap } from 'notion-types'
+
+export function getBlockCollectionId(
+  block: Block,
+  recordMap: ExtendedRecordMap
+): string | null {
+  const collectionId =
+    (block as any).collection_id ||
+    (block as any).format?.collection_pointer?.id
+
+  if (collectionId) {
+    return collectionId
+  }
+
+  const collectionViewId = (block as any)?.view_ids?.[0]
+  if (collectionViewId) {
+    const collectionView = recordMap.collection_view?.[collectionViewId]?.value
+    if (collectionView) {
+      const collectionId = collectionView.format?.collection_pointer?.id
+      return collectionId
+    }
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/get-block-icon.ts b/node_modules/notion-utils/src/get-block-icon.ts
new file mode 100644
index 0000000..e631606
--- /dev/null
+++ b/node_modules/notion-utils/src/get-block-icon.ts
@@ -0,0 +1,25 @@
+import { Block, ExtendedRecordMap, PageBlock } from 'notion-types'
+
+import { getBlockCollectionId } from './get-block-collection-id'
+
+export function getBlockIcon(block: Block, recordMap: ExtendedRecordMap) {
+  if ((block as PageBlock).format?.page_icon) {
+    return (block as PageBlock).format?.page_icon
+  }
+
+  if (
+    block.type === 'collection_view_page' ||
+    block.type === 'collection_view'
+  ) {
+    const collectionId = getBlockCollectionId(block, recordMap)
+    if (collectionId) {
+      const collection = recordMap.collection[collectionId]?.value
+
+      if (collection) {
+        return collection.icon
+      }
+    }
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/get-block-parent-page.ts b/node_modules/notion-utils/src/get-block-parent-page.ts
new file mode 100644
index 0000000..06bcf26
--- /dev/null
+++ b/node_modules/notion-utils/src/get-block-parent-page.ts
@@ -0,0 +1,44 @@
+import * as types from 'notion-types'
+
+/**
+ * Returns the parent page block containing a given page.
+ *
+ * Note that many times this will not be the direct parent block since
+ * some non-page content blocks can contain sub-blocks.
+ */
+export const getBlockParentPage = (
+  block: types.Block,
+  recordMap: types.ExtendedRecordMap,
+  {
+    inclusive = false
+  }: {
+    inclusive?: boolean
+  } = {}
+): types.PageBlock | null => {
+  let currentRecord: types.Block | types.Collection = block
+
+  while (currentRecord != null) {
+    if (inclusive && (currentRecord as types.Block)?.type === 'page') {
+      return currentRecord as types.PageBlock
+    }
+
+    const parentId: string = currentRecord.parent_id
+    const parentTable = currentRecord.parent_table
+
+    if (!parentId) {
+      break
+    }
+
+    if (parentTable === 'collection') {
+      currentRecord = recordMap.collection[parentId]?.value
+    } else {
+      currentRecord = recordMap.block[parentId]?.value
+
+      if ((currentRecord as types.Block)?.type === 'page') {
+        return currentRecord as types.PageBlock
+      }
+    }
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/get-block-title.ts b/node_modules/notion-utils/src/get-block-title.ts
new file mode 100644
index 0000000..3b1f15d
--- /dev/null
+++ b/node_modules/notion-utils/src/get-block-title.ts
@@ -0,0 +1,27 @@
+import { Block, ExtendedRecordMap } from 'notion-types'
+
+import { getBlockCollectionId } from './get-block-collection-id'
+import { getTextContent } from './get-text-content'
+
+export function getBlockTitle(block: Block, recordMap: ExtendedRecordMap) {
+  if (block.properties?.title) {
+    return getTextContent(block.properties.title)
+  }
+
+  if (
+    block.type === 'collection_view_page' ||
+    block.type === 'collection_view'
+  ) {
+    const collectionId = getBlockCollectionId(block, recordMap)
+
+    if (collectionId) {
+      const collection = recordMap.collection[collectionId]?.value
+
+      if (collection) {
+        return getTextContent(collection.name)
+      }
+    }
+  }
+
+  return ''
+}
diff --git a/node_modules/notion-utils/src/get-canonical-page-id.ts b/node_modules/notion-utils/src/get-canonical-page-id.ts
new file mode 100644
index 0000000..315e6d9
--- /dev/null
+++ b/node_modules/notion-utils/src/get-canonical-page-id.ts
@@ -0,0 +1,37 @@
+import { ExtendedRecordMap } from 'notion-types'
+
+import { getBlockTitle } from './get-block-title'
+import { getPageProperty } from './get-page-property'
+import { normalizeTitle } from './normalize-title'
+import { uuidToId } from './uuid-to-id'
+
+/**
+ * Gets the canonical, display-friendly version of a page's ID for use in URLs.
+ */
+export const getCanonicalPageId = (
+  pageId: string,
+  recordMap: ExtendedRecordMap,
+  { uuid = true }: { uuid?: boolean } = {}
+): string | null => {
+  if (!pageId || !recordMap) return null
+
+  const id = uuidToId(pageId)
+  const block = recordMap.block[pageId]?.value
+
+  if (block) {
+    const slug =
+      (getPageProperty('slug', block, recordMap) as string | null) ||
+      (getPageProperty('Slug', block, recordMap) as string | null) ||
+      normalizeTitle(getBlockTitle(block, recordMap))
+
+    if (slug) {
+      if (uuid) {
+        return `${slug}-${id}`
+      } else {
+        return slug
+      }
+    }
+  }
+
+  return id
+}
diff --git a/node_modules/notion-utils/src/get-date-value.ts b/node_modules/notion-utils/src/get-date-value.ts
new file mode 100644
index 0000000..b18270a
--- /dev/null
+++ b/node_modules/notion-utils/src/get-date-value.ts
@@ -0,0 +1,21 @@
+import * as types from 'notion-types'
+
+/**
+ * Attempts to find a valid date from a given property.
+ */
+export const getDateValue = (prop: any[]): types.FormattedDate | null => {
+  if (prop && Array.isArray(prop)) {
+    if (prop[0] === 'd') {
+      return prop[1]
+    } else {
+      for (const v of prop) {
+        const value = getDateValue(v)
+        if (value) {
+          return value
+        }
+      }
+    }
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/get-page-breadcrumbs.ts b/node_modules/notion-utils/src/get-page-breadcrumbs.ts
new file mode 100644
index 0000000..a106b3f
--- /dev/null
+++ b/node_modules/notion-utils/src/get-page-breadcrumbs.ts
@@ -0,0 +1,52 @@
+import * as types from 'notion-types'
+
+import { getBlockIcon } from './get-block-icon'
+import { getBlockParentPage } from './get-block-parent-page'
+import { getBlockTitle } from './get-block-title'
+
+export const getPageBreadcrumbs = (
+  recordMap: types.ExtendedRecordMap,
+  activePageId: string
+): Array<any> | null => {
+  const blockMap = recordMap.block
+  const breadcrumbs = []
+
+  let currentPageId = activePageId
+
+  do {
+    const block = blockMap[currentPageId]?.value
+    if (!block) {
+      break
+    }
+
+    const title = getBlockTitle(block, recordMap)
+    const icon = getBlockIcon(block, recordMap)
+
+    if (!(title || icon)) {
+      break
+    }
+
+    breadcrumbs.push({
+      block,
+      active: currentPageId === activePageId,
+      pageId: currentPageId,
+      title,
+      icon
+    })
+
+    const parentBlock = getBlockParentPage(block, recordMap)
+    const parentId = parentBlock?.id
+
+    if (!parentId) {
+      break
+    }
+
+    currentPageId = parentId
+
+    // eslint-disable-next-line no-constant-condition
+  } while (true)
+
+  breadcrumbs.reverse()
+
+  return breadcrumbs
+}
diff --git a/node_modules/notion-utils/src/get-page-content-block-ids.ts b/node_modules/notion-utils/src/get-page-content-block-ids.ts
new file mode 100644
index 0000000..a5a2ff9
--- /dev/null
+++ b/node_modules/notion-utils/src/get-page-content-block-ids.ts
@@ -0,0 +1,68 @@
+import * as types from 'notion-types'
+
+/**
+ * Gets the IDs of all blocks contained on a page starting from a root block ID.
+ */
+export const getPageContentBlockIds = (
+  recordMap: types.ExtendedRecordMap,
+  blockId?: string
+): string[] => {
+  const rootBlockId = blockId || Object.keys(recordMap.block)[0]
+  const contentBlockIds = new Set<string>()
+
+  function addContentBlocks(blockId: string) {
+    if (contentBlockIds.has(blockId)) return
+    contentBlockIds.add(blockId)
+
+    const block = recordMap.block[blockId]?.value
+    if (!block) return
+
+    const { content, type, properties, format } = block
+    if (properties) {
+      // TODO: this needs some love, especially for resolving relation properties
+      // see this collection_view_page for an example: 8a586d253f984b85b48254da84465d23
+      for (const key of Object.keys(properties)) {
+        const p = properties[key]
+        p.map((d: any) => {
+          const value = d?.[0]?.[1]?.[0]
+          if (value?.[0] === 'p' && value[1]) {
+            addContentBlocks(value[1])
+          }
+        })
+
+        // [["‣", [["p", "841918aa-f2a3-4d4c-b5ad-64b0f57c47b8"]]]]
+        const value = p?.[0]?.[1]?.[0]
+
+        if (value?.[0] === 'p' && value[1]) {
+          addContentBlocks(value[1])
+        }
+      }
+    }
+
+    if (format) {
+      const referenceId = format.transclusion_reference_pointer?.id
+      if (referenceId) {
+        addContentBlocks(referenceId)
+      }
+    }
+
+    if (!content || !Array.isArray(content)) {
+      // no child content blocks to recurse on
+      return
+    }
+
+    if (blockId !== rootBlockId) {
+      if (type === 'page' || type === 'collection_view_page') {
+        // ignore the content of other pages and collections
+        return
+      }
+    }
+
+    for (const blockId of content) {
+      addContentBlocks(blockId)
+    }
+  }
+
+  addContentBlocks(rootBlockId)
+  return Array.from(contentBlockIds)
+}
diff --git a/node_modules/notion-utils/src/get-page-image-urls.ts b/node_modules/notion-utils/src/get-page-image-urls.ts
new file mode 100644
index 0000000..3fbf9a1
--- /dev/null
+++ b/node_modules/notion-utils/src/get-page-image-urls.ts
@@ -0,0 +1,82 @@
+import * as types from 'notion-types'
+
+import { getBlockIcon } from './get-block-icon'
+import { isUrl } from './is-url'
+
+/**
+ * Gets URLs of all images contained on the given page.
+ */
+export const getPageImageUrls = (
+  recordMap: types.ExtendedRecordMap,
+  {
+    mapImageUrl
+  }: {
+    mapImageUrl: (url: string, block: types.Block) => string | null
+  }
+): string[] => {
+  const blockIds = Object.keys(recordMap.block)
+  const imageUrls: string[] = blockIds
+    .flatMap((blockId) => {
+      const block = recordMap.block[blockId]?.value
+      const images: Array<{ block: types.Block; url: string }> = []
+
+      if (block) {
+        if (block.type === 'image') {
+          const signedUrl = recordMap.signed_urls?.[block.id]
+          let source = signedUrl || block.properties?.source?.[0]?.[0]
+          if (source.includes('file.notion.so')) {
+            source = block.properties?.source?.[0]?.[0]
+          }
+
+          if (source) {
+            images.push({
+              block,
+              url: source
+            })
+          }
+        }
+
+        if ((block.format as any)?.page_cover) {
+          const source = (block.format as any).page_cover
+
+          images.push({
+            block,
+            url: source
+          })
+        }
+
+        if ((block.format as any)?.bookmark_cover) {
+          const source = (block.format as any).bookmark_cover
+
+          images.push({
+            block,
+            url: source
+          })
+        }
+
+        if ((block.format as any)?.bookmark_icon) {
+          const source = (block.format as any).bookmark_icon
+
+          images.push({
+            block,
+            url: source
+          })
+        }
+
+        const pageIcon = getBlockIcon(block, recordMap)
+        if (pageIcon && isUrl(pageIcon)) {
+          images.push({
+            block,
+            url: pageIcon
+          })
+        }
+      }
+
+      return images
+    })
+    .filter(Boolean)
+    .map(({ block, url }) => mapImageUrl(url, block))
+    .filter(Boolean)
+
+  return Array.from(new Set(imageUrls))
+}
diff --git a/node_modules/notion-utils/src/get-page-property.ts b/node_modules/notion-utils/src/get-page-property.ts
new file mode 100644
index 0000000..b714eb3
--- /dev/null
+++ b/node_modules/notion-utils/src/get-page-property.ts
@@ -0,0 +1,94 @@
+import { Block, DateFormat, ExtendedRecordMap } from 'notion-types'
+
+import { getTextContent } from './get-text-content'
+
+/**
+ * Gets the value of a collection property for a given page (collection item).
+ *
+ * @param propertyName property name
+ * @param block Page block, often be first block in blockMap
+ * @param recordMap
+ * @returns - The return value types will follow the following principles:
+ *  1. if property is date type, it will return `number` or `number[]`(depends on `End Date` switch)
+ *  2. property is text-like will return `string`
+ *  3. multi select property will return `string[]`
+ *  4. checkbox property return `boolean`
+ * @todo complete all no-text property type
+ */
+export function getPageProperty<
+  T = string | number | boolean | string[] | number[]
+>(propertyName: string, block: Block, recordMap: ExtendedRecordMap): T
+export function getPageProperty(
+  propertyName: string,
+  block: Block,
+  recordMap: ExtendedRecordMap
+) {
+  try {
+    if (!block.properties || !Object.keys(recordMap.collection)) {
+      // console.warn(
+      //   `block ${block.id} has no properties or this recordMap has no collection record`
+      // )
+      return null
+    }
+
+    const collection = recordMap.collection[block.parent_id]?.value
+
+    if (collection) {
+      const propertyNameL = propertyName.toLowerCase()
+      const propertyId = Object.keys(collection.schema).find(
+        (key) => collection.schema[key]?.name?.toLowerCase() === propertyNameL
+      )
+
+      if (!propertyId) {
+        return null
+      }
+
+      const { type } = collection.schema[propertyId]
+      const content = getTextContent(block.properties[propertyId])
+
+      switch (type) {
+        case 'created_time':
+          return block.created_time
+
+        case 'multi_select':
+          return content.split(',')
+
+        case 'date': {
+          const property = block.properties[propertyId] as [['‣', [DateFormat]]]
+          const formatDate = property[0][1][0][1]
+
+          if (formatDate.type == 'datetime') {
+            return new Date(
+              `${formatDate.start_date} ${formatDate.start_time}`
+            ).getTime()
+          } else if (formatDate.type == 'date') {
+            return new Date(formatDate.start_date).getTime()
+          } else if (formatDate.type == 'datetimerange') {
+            const { start_date, start_time, end_date, end_time } = formatDate
+            const startTime = new Date(`${start_date} ${start_time}`).getTime()
+            const endTime = new Date(`${end_date} ${end_time}`).getTime()
+            return [startTime, endTime]
+          } else {
+            const startTime = new Date(formatDate.start_date).getTime()
+            const endTime = new Date(formatDate.end_date).getTime()
+            return [startTime, endTime]
+          }
+        }
+
+        case 'checkbox':
+          return content == 'Yes'
+
+        case 'last_edited_time':
+          return block.last_edited_time
+
+        default:
+          return content
+      }
+    }
+  } catch {
+    // ensure that no matter what, we don't throw errors because of an unexpected
+    // collection data format
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/get-page-table-of-contents.ts b/node_modules/notion-utils/src/get-page-table-of-contents.ts
new file mode 100644
index 0000000..ebc7a47
--- /dev/null
+++ b/node_modules/notion-utils/src/get-page-table-of-contents.ts
@@ -0,0 +1,87 @@
+import * as types from 'notion-types'
+
+import { getTextContent } from './get-text-content'
+
+export interface TableOfContentsEntry {
+  id: types.ID
+  type: types.BlockType
+  text: string
+  indentLevel: number
+}
+
+const indentLevels = {
+  header: 0,
+  sub_header: 1,
+  sub_sub_header: 2
+}
+
+/**
+ * Gets the metadata for a table of contents block by parsing the page's
+ * H1, H2, and H3 elements.
+ */
+export const getPageTableOfContents = (
+  page: types.PageBlock,
+  recordMap: types.ExtendedRecordMap
+): Array<TableOfContentsEntry> => {
+  const toc = (page.content ?? [])
+    .map((blockId: string) => {
+      const block = recordMap.block[blockId]?.value
+
+      if (block) {
+        const { type } = block
+
+        if (
+          type === 'header' ||
+          type === 'sub_header' ||
+          type === 'sub_sub_header'
+        ) {
+          return {
+            id: blockId,
+            type,
+            text: getTextContent(block.properties?.title),
+            indentLevel: indentLevels[type]
+          }
+        }
+      }
+
+      return null
+    })
+    .filter(Boolean) as Array<TableOfContentsEntry>
+
+  const indentLevelStack = [
+    {
+      actual: -1,
+      effective: -1
+    }
+  ]
+
+  // Adjust indent levels to always change smoothly.
+  // This is a little tricky, but the key is that when increasing indent levels,
+  // they should never jump more than one at a time.
+  for (const tocItem of toc) {
+    const { indentLevel } = tocItem
+    const actual = indentLevel
+
+    do {
+      const prevIndent = indentLevelStack[indentLevelStack.length - 1]
+      const { actual: prevActual, effective: prevEffective } = prevIndent
+
+      if (actual > prevActual) {
+        tocItem.indentLevel = prevEffective + 1
+        indentLevelStack.push({
+          actual,
+          effective: tocItem.indentLevel
+        })
+      } else if (actual === prevActual) {
+        tocItem.indentLevel = prevEffective
+        break
+      } else {
+        indentLevelStack.pop()
+      }
+
+      // eslint-disable-next-line no-constant-condition
+    } while (true)
+  }
+
+  return toc
+}
diff --git a/node_modules/notion-utils/src/get-page-title.ts b/node_modules/notion-utils/src/get-page-title.ts
new file mode 100644
index 0000000..f312811
--- /dev/null
+++ b/node_modules/notion-utils/src/get-page-title.ts
@@ -0,0 +1,13 @@
+import { ExtendedRecordMap } from 'notion-types'
+
+import { getBlockTitle } from './get-block-title'
+
+export function getPageTitle(recordMap: ExtendedRecordMap) {
+  const pageBlock = recordMap.block[Object.keys(recordMap.block)[0]]?.value
+
+  if (pageBlock) {
+    return getBlockTitle(pageBlock, recordMap)
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/get-text-content.ts b/node_modules/notion-utils/src/get-text-content.ts
new file mode 100644
index 0000000..b7fee91
--- /dev/null
+++ b/node_modules/notion-utils/src/get-text-content.ts
@@ -0,0 +1,23 @@
+import * as types from 'notion-types'
+
+/**
+ * Gets the raw, unformatted text content of a block's content value.
+ *
+ * This is useful, for instance, for extracting a block's `title` without any
+ * rich text formatting.
+ */
+export const getTextContent = (text?: types.Decoration[]): string => {
+  if (!text) {
+    return ''
+  } else if (Array.isArray(text)) {
+    return (
+      text?.reduce(
+        (prev, current) =>
+          prev + (current[0] !== '⁍' && current[0] !== '‣' ? current[0] : ''),
+        ''
+      ) ?? ''
+    )
+  } else {
+    return text
+  }
+}
diff --git a/node_modules/notion-utils/src/id-to-uuid.ts b/node_modules/notion-utils/src/id-to-uuid.ts
new file mode 100644
index 0000000..7578c64
--- /dev/null
+++ b/node_modules/notion-utils/src/id-to-uuid.ts
@@ -0,0 +1,5 @@
+export const idToUuid = (id = '') =>
+  `${id.substr(0, 8)}-${id.substr(8, 4)}-${id.substr(12, 4)}-${id.substr(
+    16,
+    4
+  )}-${id.substr(20)}`
diff --git a/node_modules/notion-utils/src/index.ts b/node_modules/notion-utils/src/index.ts
new file mode 100644
index 0000000..e86921b
--- /dev/null
+++ b/node_modules/notion-utils/src/index.ts
@@ -0,0 +1,24 @@
+export * from './get-text-content'
+export * from './get-block-title'
+export * from './get-block-icon'
+export * from './get-block-collection-id'
+export * from './get-page-title'
+export * from './get-page-property'
+export * from './get-date-value'
+export * from './get-block-parent-page'
+export * from './get-page-table-of-contents'
+export * from './get-page-content-block-ids'
+export * from './parse-page-id'
+export * from './id-to-uuid'
+export * from './uuid-to-id'
+export * from './get-all-pages-in-space'
+export * from './get-canonical-page-id'
+export * from './get-page-breadcrumbs'
+export * from './get-page-image-urls'
+export * from './is-url'
+export * from './normalize-url'
+export * from './normalize-title'
+export * from './merge-record-maps'
+export * from './format-date'
+export * from './format-notion-date-time'
+export * from './estimate-page-read-time'
diff --git a/node_modules/notion-utils/src/is-url.ts b/node_modules/notion-utils/src/is-url.ts
new file mode 100644
index 0000000..7ac4c2d
--- /dev/null
+++ b/node_modules/notion-utils/src/is-url.ts
@@ -0,0 +1,3 @@
+import isUrl from 'is-url-superb'
+
+export { isUrl }
diff --git a/node_modules/notion-utils/src/merge-record-maps.ts b/node_modules/notion-utils/src/merge-record-maps.ts
new file mode 100644
index 0000000..4da4e6f
--- /dev/null
+++ b/node_modules/notion-utils/src/merge-record-maps.ts
@@ -0,0 +1,39 @@
+import { ExtendedRecordMap } from 'notion-types'
+
+export function mergeRecordMaps(
+  recordMapA: ExtendedRecordMap,
+  recordMapB: ExtendedRecordMap
+): ExtendedRecordMap {
+  const mergedRecordMap: ExtendedRecordMap = {
+    block: {
+      ...recordMapA.block,
+      ...recordMapB.block
+    },
+    collection: {
+      ...recordMapA.collection,
+      ...recordMapB.collection
+    },
+    collection_view: {
+      ...recordMapA.collection_view,
+      ...recordMapB.collection_view
+    },
+    notion_user: {
+      ...recordMapA.notion_user,
+      ...recordMapB.notion_user
+    },
+    collection_query: {
+      ...recordMapA.collection_query,
+      ...recordMapB.collection_query
+    },
+    signed_urls: {
+      ...recordMapA.signed_urls,
+      ...recordMapB.signed_urls
+    },
+    preview_images: {
+      ...recordMapA.preview_images,
+      ...recordMapB.preview_images
+    }
+  }
+
+  return mergedRecordMap
+}
diff --git a/node_modules/notion-utils/src/normalize-title.ts b/node_modules/notion-utils/src/normalize-title.ts
new file mode 100644
index 0000000..c009b03
--- /dev/null
+++ b/node_modules/notion-utils/src/normalize-title.ts
@@ -0,0 +1,13 @@
+export const normalizeTitle = (title?: string | null): string => {
+  return (title || '')
+    .replace(/ /g, '-')
+    .replace(
+      /[^a-zA-Z0-9-\u4e00-\u9FFF\u3041-\u3096\u30A1-\u30FC\u3000-\u303F]/g,
+      ''
+    )
+    .replace(/--/g, '-')
+    .replace(/-$/, '')
+    .replace(/^-/, '')
+    .trim()
+    .toLowerCase()
+}
diff --git a/node_modules/notion-utils/src/normalize-url.test.ts b/node_modules/notion-utils/src/normalize-url.test.ts
new file mode 100644
index 0000000..ccfafab
--- /dev/null
+++ b/node_modules/notion-utils/src/normalize-url.test.ts
@@ -0,0 +1,33 @@
+import test from 'ava'
+
+import { normalizeUrl } from './normalize-url'
+
+test('normalizeUrl invalid', (t) => {
+  t.is(normalizeUrl(), '')
+  t.is(normalizeUrl(''), '')
+  t.is(normalizeUrl('#'), '')
+  t.is(normalizeUrl('#foo'), '')
+  t.is(normalizeUrl('/foo'), '')
+  t.is(normalizeUrl('/foo/bar'), '')
+  t.is(normalizeUrl('://test.com'), '')
+})
+
+test('normalizeUrl valid', (t) => {
+  const fixtures = [
+    'test.com',
+    'test.com/123',
+    '//test.com',
+    'https://test.com',
+    'https://www.test.com',
+    'https://test.com/foo/bar',
+    'https://test.com/foo/bar/',
+    'https://test.com/foo/bar?foo=bar&cat=dog',
+    'https://www.notion.so/image/https%3A%2F%2Fs3.us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fae16c287-668f-4ea7-90a8-5ed96302e14f%2Fquilt-opt.jpg%3FX-Amz-Algorithm%3DAWS4-HMAC-SHA256%26X-Amz-Content-Sha256%3DUNSIGNED-PAYLOAD%26X-Amz-Credential%3DAKIAT73L2G45EIPT3X45%252F20220327%252Fus-west-2%252Fs3%252Faws4_request%26X-Amz-Date%3D20220327T124856Z%26X-Amz-Expires%3D86400%26X-Amz-Signature%3Dfdaa47d722db4b4052267d999003c6392bbd3d8c4169268b202b8268b2af12ab%26X-Amz-SignedHeaders%3Dhost%26x-id%3DGetObject?table=block&id=ddec4f2d-6afa-498f-8141-405647e02ea5&cache=v2'
+  ]
+
+  for (const url of fixtures) {
+    const normalizedUrl = normalizeUrl(url)
+    t.truthy(normalizedUrl)
+    t.snapshot(normalizedUrl)
+  }
+})
diff --git a/node_modules/notion-utils/src/normalize-url.ts b/node_modules/notion-utils/src/normalize-url.ts
new file mode 100644
index 0000000..21c9807
--- /dev/null
+++ b/node_modules/notion-utils/src/normalize-url.ts
@@ -0,0 +1,28 @@
+import mem from 'mem'
+import normalizeUrlImpl from 'normalize-url'
+
+export const normalizeUrl = mem((url?: string) => {
+  if (!url) {
+    return ''
+  }
+
+  try {
+    if (url.startsWith('https://www.notion.so/image/')) {
+      const u = new URL(url)
+      const subUrl = decodeURIComponent(u.pathname.substr('/image/'.length))
+      const normalizedSubUrl = normalizeUrl(subUrl)
+      u.pathname = `/image/${encodeURIComponent(normalizedSubUrl)}`
+      url = u.toString()
+    }
+
+    return normalizeUrlImpl(url, {
+      stripProtocol: true,
+      stripWWW: true,
+      stripHash: true,
+      stripTextFragment: true,
+      removeQueryParameters: true
+    })
+  } catch (err) {
+    return ''
+  }
+})
diff --git a/node_modules/notion-utils/src/parse-page-id.test.ts b/node_modules/notion-utils/src/parse-page-id.test.ts
new file mode 100644
index 0000000..2308aa6
--- /dev/null
+++ b/node_modules/notion-utils/src/parse-page-id.test.ts
@@ -0,0 +1,59 @@
+import test from 'ava'
+
+import { parsePageId } from './parse-page-id'
+
+const pageIdFixturesSuccess = [
+  '267c0d1f1df8457f9b5c8f7efca16d83',
+  'Twitter-Automation-Tool-267c0d1f1df8457f9b5c8f7efca16d83',
+  'www.notion.so/saasifysh/Twitter-Automation-Tool-267c0d1f1df8457f9b5c8f7efca16d83',
+  'www.notion.so/saasifysh/Twitter-Automation-Tool-267c0d1f1df8457f9b5c8f7efca16d83?foo=bar&bar=foo',
+  'https://www.notion.so/saasifysh/Standalone-Notion-Hosting-717a3608b1874cc5bafb5b9680b53395',
+  'Standalone-Notion-Hosting-717a3608b1874cc5bafb5b9680b53395',
+  'Standalone-Notion-Hosting-717a3608b1874cc5bafb5b9680b53395?foo',
+  '-717a3608b1874cc5bafb5b9680b53395',
+  '717a3608b1874cc5bafb5b9680b53395',
+  '717a3608b1874cc5bafb5b9680b53395?',
+  'e5a735e3-3baa-458b-9889-93b55a54ee54',
+  'fde5ac74-eea3-4527-8f00-4482710e1af3',
+  'about-e5a735e3-3baa-458b-9889-93b55a54ee54',
+  '.com/about-e5a735e3-3baa-458b-9889-93b55a54ee54',
+  'About-d9ae0c6e7cad49a78e21d240cf2e3d04'
+]
+
+const pageIdFixturesFailure = [
+  '717A3608b1874CC5bafb5b9680b53395',
+  '717A36',
+  '',
+  'notion.so/saasifysh/Twitter-Automation-Tool-267c0d1f1df8457f9b5c8f7efca16d83abc',
+  'a267c0d1f1df8457f9b5c8f7efca16d83',
+  '267c0d1f1df8457f9b5c8f7efca16d83a',
+  '267c0d1f1%f8457f9b5c8f7efca16d83',
+  'Twitter-Automation-Tool',
+  'fde5ac74-eea3-4527-8f00-4482710e1af',
+  null
+]
+
+test('utils.parsePageId non-uuid success', (t) => {
+  for (const id of pageIdFixturesSuccess) {
+    const pageId = parsePageId(id, { uuid: false })
+    t.truthy(pageId)
+    t.falsy((pageId as string).includes('-'))
+    t.snapshot(pageId)
+  }
+})
+
+test('utils.parsePageId uuid success', (t) => {
+  for (const id of pageIdFixturesSuccess) {
+    const pageId = parsePageId(id, { uuid: true })
+    t.truthy(pageId)
+    t.truthy((pageId as string).includes('-'))
+    t.snapshot(pageId)
+  }
+})
+
+test('utils.parsePageId failure', (t) => {
+  for (const id of pageIdFixturesFailure) {
+    const pageId = parsePageId(id as string)
+    t.falsy(pageId)
+  }
+})
diff --git a/node_modules/notion-utils/src/parse-page-id.ts b/node_modules/notion-utils/src/parse-page-id.ts
new file mode 100644
index 0000000..a426555
--- /dev/null
+++ b/node_modules/notion-utils/src/parse-page-id.ts
@@ -0,0 +1,33 @@
+import { idToUuid } from './id-to-uuid'
+
+const pageIdRe = /\b([a-f0-9]{32})\b/
+const pageId2Re =
+  /\b([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})\b/
+
+/**
+ * Robustly extracts the notion page ID from a notion URL or pathname suffix.
+ *
+ * Defaults to returning a UUID (with dashes).
+ */
+export const parsePageId = (
+  id: string | null = '',
+  { uuid = true }: { uuid?: boolean } = {}
+) => {
+  if (!id) {
+    return null
+  }
+
+  id = id.split('?')[0]
+  const match = id.match(pageIdRe)
+
+  if (match) {
+    return uuid ? idToUuid(match[1]) : match[1]
+  }
+
+  const match2 = id.match(pageId2Re)
+  if (match2) {
+    return uuid ? match2[1] : match2[1].replace(/-/g, '')
+  }
+
+  return null
+}
diff --git a/node_modules/notion-utils/src/uuid-to-id.ts b/node_modules/notion-utils/src/uuid-to-id.ts
new file mode 100644
index 0000000..38ad8d4
--- /dev/null
+++ b/node_modules/notion-utils/src/uuid-to-id.ts
@@ -0,0 +1 @@
+export const uuidToId = (uuid: string) => uuid.replace(/-/g, '')
diff --git a/node_modules/notion-utils/tsconfig.json b/node_modules/notion-utils/tsconfig.json
new file mode 100644
index 0000000..63726f2
--- /dev/null
+++ b/node_modules/notion-utils/tsconfig.json
@@ -0,0 +1,12 @@
+{
+  "extends": "../../tsconfig.base",
+  "compilerOptions": {
+    "composite": true,
+    "rootDir": "src",
+    "outDir": "build",
+    "tsBuildInfoFile": "build/.tsbuildinfo",
+    "emitDeclarationOnly": true
+  },
+  "include": ["src"],
+  "references": [{ "path": "../notion-types" }]
+}
diff --git a/node_modules/notion-utils/tsup.config.ts b/node_modules/notion-utils/tsup.config.ts
new file mode 100644
index 0000000..24c268d
--- /dev/null
+++ b/node_modules/notion-utils/tsup.config.ts
@@ -0,0 +1,13 @@
+import { defineConfig } from 'tsup'
+
+export default defineConfig({
+  entry: ['src/index.ts'],
+  outDir: 'build',
+  target: 'es2015',
+  platform: 'browser',
+  format: ['esm'],
+  splitting: false,
+  sourcemap: true,
+  minify: true,
+  shims: false
+})
